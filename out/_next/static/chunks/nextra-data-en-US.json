{"/components/alert":{"title":"Alert","data":{"":"El componente Alert se utiliza para mostrar mensajes de alerta en la interfaz de usuario, proporcionando diferentes tipos de alertas y permitiendo la opci√≥n de cerrarlas.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente Alert, se puede hacer desde fenextjs\nimport { Alert } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tmessage\tstring\ts√≠\t\tEl mensaje que se mostrar√° en el contenido de la alerta.\ttype\tAlertType\ts√≠\t\tEl tipo de alerta a mostrar, que puede estar relacionado con el estilo visual de la misma.\ticonClose\tReactNode\tno\t<Close />\tEl icono que se mostrar√° para cerrar la alerta.\tonClose\tfunction\tno\t\tFunci√≥n que se ejecuta cuando se cierra la alerta.\tclassName\tstring\tno\t\"\"\tClase personalizada para el componente de alerta.\tdata\tany\tno\t\tDatos adicionales o metadatos que se pueden agregar al componente de alerta.","alerttype#AlertType":"Dependiendo del valor de 'AlertType', el estilo de la alerta sera diferente\nAlertType\tDescripci√≥n\tOK\tMensaje de √©xito.\tERROR\tMensaje de error.\tNORMAL\tMensaje sin estatus espec√≠fico.\tWARNING\tMensaje de advertencia.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"B√°sico\n<Alert message=\"This is an alert!\" type=\"info\" />\nAlerta con funci√≥n de cierre\n<Alert\n  message=\"Close this alert\"\n  type=\"warning\"\n  onClose={() => alert(\"¬°Alerta cerr√≥!\")}\n/>\nAlerta con icono personalizado\n<Alert message=\"Custom icon alert\" type=\"error\" iconClose={<CustomIcon />} />"}},"/components":{"title":"Componentes","data":{"":"Fenextjs posee componentes para implementar en Nextjs con el objetivo de ahorrar tiempo en el desarrollo de funcionalidades, para solo concentrase en los estilos de los componentes","lista-de-componentes-disponibles-categorizados-de-la-siguiente-manera-#Lista de componentes disponibles categorizados de la siguiente manera >>>":"Estructurales\n‚öôÔ∏è Configuraci√≥n\nüü© Forma\nNavegaci√≥n\nüçé Usabilidad\nüîÉ Carga\n‚åõ Progreso\nElementos\nüÖ∞Ô∏è Texto\nüñºÔ∏è Im√°genes\n‚å®Ô∏è Entradas de texto\nüìÖ Fechas\nüì¢ Comunicaci√≥n\nüóíÔ∏è Orden\nüëë Lujo","#":"","estucturales#Estucturales":"","Ô∏è-configuraci√≥n#‚öôÔ∏è Configuraci√≥n":"Theme > El componente de Theme permite definir y aplicar un conjunto coherente de estilos y paletas de colores en toda la aplicaci√≥n. Es fundamental para mantener la consistencia visual y para implementar f√°cilmente cambios de temas o modos (como claro/oscuro).\nLayout > Proporciona estructuras predeterminadas para el dise√±o de p√°ginas.\nLayout Grid Menu Left > Organiza la p√°gina con un men√∫ lateral a la izquierda, optimizando el uso del espacio y facilitando la navegaci√≥n en la aplicaci√≥n.\nLayout Grid Menu Top > Presenta un dise√±o con un men√∫ en la parte superior, adecuado para aplicaciones con enfoque en la horizontalidad y accesibilidad r√°pida a diferentes secciones.\nLayout Grid Menu TopLeft > Combina ambas disposiciones, con men√∫s tanto en la parte superior como en el lado izquierdo, proporcionando una estructura de navegaci√≥n robusta y flexible para aplicaciones complejas o sitios web.","-1#":"","-forma#üü© Forma":"Header > Cabecera de sitio o aplicaci√≥n, incluye navegaci√≥n y elementos clave de UI como logos, men√∫s o controles de usuario.\nUser Profile >\nContainer > Contenedor b√°sico para alinear y organizar elementos, esencial en el dise√±o web responsivo y en la estandarizaci√≥n de layouts.\nBox > Contenedor gen√©rico para UI, √∫til para agrupar elementos relacionados visualmente, como en dashboards o en la agrupaci√≥n de formularios.\nColumns > Estructura para dise√±o de columnas, fundamental en layouts responsivos o para organizar contenido en secciones claramente definidas.\nTwo Col Sticky > Este componente estructura la p√°gina en dos columnas, con solo una de ellas fija (\"sticky\") que permanece visible mientras se desplaza la otra. Es ideal para dise√±os que requieren una navegaci√≥n constante o elementos de referencia, como men√∫s laterales o dashboards con filtros.\nContentShow > Muestra contenido de manera condicional, ideal para interfaces din√°micas donde el contenido depende de ciertas condiciones o selecciones del usuario.","-2#":"","navegaci√≥n#Navegaci√≥n":"","-usabilidad#üçé Usabilidad":"Menu > El componente Menu act√∫a como el contenedor para un conjunto de ItemMenu o enlaces de navegaci√≥n. Es esencial para la creaci√≥n de barras de navegaci√≥n, men√∫s desplegables o paneles laterales, organizando las opciones de navegaci√≥n de manera estructurada y coherente. - Button Menu > Este componente es un bot√≥n interactivo dise√±ado para activar o desplegar un men√∫ de navegaci√≥n. Es ideal para interfaces que requieren men√∫s compactos, especialmente en dise√±os responsivos o en aplicaciones m√≥viles. - Item Menu > Representa un elemento individual dentro de un men√∫. Cada ItemMenu es un enlace o acci√≥n en la lista de navegaci√≥n, permitiendo una organizaci√≥n clara y accesible de las opciones del men√∫.\nBack > Bot√≥n para retroceder en el flujo del usuario. Com√∫nmente usado en aplicaciones con m√∫ltiples niveles de navegaci√≥n o en flujos de trabajo paso a paso.\nBreadcrumb > Indicador de la ruta de navegaci√≥n actual. Esencial en sitios web con estructura jer√°rquica profunda, como tiendas en l√≠nea o sitios de contenido.\nButton > Elemento interactivo para acciones de usuario, como enviar formularios, abrir ventanas modales o activar funciones. Clave en cualquier interfaz interactiva.\nShare > Permite a los usuarios compartir contenido de la p√°gina en redes sociales o plataformas de mensajer√≠a. Es esencial en sitios que buscan aumentar su alcance y promover la interacci√≥n social.\nLink > Navegaci√≥n interna o externa, fundamental en cualquier interfaz para conectar diferentes √°reas o recursos.\nTab > Pesta√±as para organizar contenido en secciones, comunes en interfaces de configuraci√≥n, perfiles de usuario o en √°reas con m√∫ltiples categor√≠as de contenido.\nPagination > Navegaci√≥n por p√°ginas de contenido, esencial en sitios con listados largos como blogs, cat√°logos de productos o bases de datos.\nPagination All > Este componente de paginaci√≥n est√° dise√±ado para mostrar todas las p√°ginas disponibles en una interfaz, permitiendo a los usuarios saltar directamente a cualquier p√°gina. Es √∫til en situaciones donde se necesita un acceso r√°pido a p√°ginas espec√≠ficas en un conjunto de datos extenso.\nPagination Page > Un componente de paginaci√≥n que muestra un n√∫mero determinado de p√°ginas alrededor de la p√°gina actual, con opciones para avanzar hacia adelante y atr√°s. Este enfoque es ideal para conjuntos de datos grandes, donde mostrar todas las p√°ginas a la vez puede ser abrumador o poco pr√°ctico.\nPagination Item Page > Representa un elemento individual en un sistema de paginaci√≥n. Cada ItemPage es un enlace a una p√°gina espec√≠fica, permitiendo la navegaci√≥n precisa dentro de un conjunto de datos o contenido paginado.\nSteps > El componente Steps es utilizado para mostrar una secuencia de pasos en un proceso, como en formularios de registro o procesos de compra. Ofrece una manera clara y visual de indicar el progreso a trav√©s de diferentes etapas, ayudando a los usuarios a comprender su posici√≥n actual y los pasos siguientes en un procedimiento.","-3#":"","-carga#üîÉ Carga":"Loader > Indicadores de carga para procesos o cargas de contenido, mejoran la experiencia de\nLoader Progress Line > Este componente muestra una barra de progreso horizontal que se llena gradualmente para indicar el avance de una tarea o carga. Es ideal para procesos donde se puede determinar el progreso, como la carga de archivos o el env√≠o de formularios.\nLoader Spinner > Un indicador circular o 'spinner' que gira para mostrar que una operaci√≥n est√° en curso. Es ampliamente utilizado en aplicaciones y sitios web durante la espera de procesos que no tienen un tiempo de finalizaci√≥n definido, como la carga de datos desde un servidor.\nLoader Skeleton > Este loader simula la disposici√≥n del contenido antes de que se cargue completamente, usando l√≠neas o formas en el lugar donde aparecer√° el contenido real. Es efectivo para mejorar la experiencia del usuario durante la carga de p√°ginas, reduciendo la percepci√≥n de espera y manteniendo la estructura visual de la p√°gina.\nContent Loading > Indica el estado de carga del contenido, mejorando la experiencia del usuario en cargas asincr√≥nicas o en espera de datos.","-4#":"","-progreso#‚åõ Progreso":"Progress > Un indicador visual para mostrar el progreso de una tarea o proceso. Puede ser utilizado en situaciones donde se necesite representar visualmente el avance, como en cargas de archivos, procesos de instalaci√≥n o progreso de tareas.\nPage Progress > Este componente es utilizado para mostrar el progreso de carga de una p√°gina completa. Es ideal para informar a los usuarios sobre el estado de carga de la p√°gina, especialmente en sitios web con contenido pesado o en aplicaciones web que requieren tiempo para cargar datos.\nProgress Line > Es una variante del indicador de progreso que muestra una barra lineal. Se utiliza com√∫nmente para representar el progreso de manera simple y clara, como en el progreso de descargas o en barras de carga de formularios.\nProgress Circle > Este estilo muestra el progreso en un formato circular, lo que es ideal para espacios compactos o para una presentaci√≥n est√©tica m√°s din√°mica, como en dashboards o en interfaces de aplicaciones m√≥viles.","-5#":"","elementos#Elementos":"","üÖ∞Ô∏è-texto#üÖ∞Ô∏è Texto":"Title > Un componente para crear t√≠tulos y encabezados. Es esencial para estructurar el contenido, destacar secciones y mejorar la legibilidad en interfaces y p√°ginas web.\nText > Este componente se utiliza para la presentaci√≥n de texto en la interfaz, ofreciendo flexibilidad para diferentes estilos, como p√°rrafos, citas o cualquier otro formato de texto.\nTooltip > Proporciona informaci√≥n adicional en forma de texto emergente cuando el usuario pasa el cursor sobre un elemento. Ideal para explicar funciones de botones, iconos o para proporcionar detalles adicionales sin sobrecargar la interfaz.\nCopy > Funcionalidad para copiar texto al portapapeles, √∫til en interfaces donde los usuarios necesitan replicar informaci√≥n r√°pidamente, como en aplicaciones de c√≥digo o datos.\nChronometer: > Mide y muestra tiempo, ideal en aplicaciones de productividad, temporizadores de eventos o para seguimiento de actividades.","-6#":"","Ô∏è-im√°genes#üñºÔ∏è Im√°genes":"Img > Componente para integrar y gestionar im√°genes, clave en cualquier interfaz que requiera visualizaci√≥n de im√°genes, como blogs, galer√≠as o productos.\nGrid Gallery > Presenta im√°genes o contenido en formato de cuadr√≠cula, ideal para portfolios, cat√°logos de productos o galer√≠as de medios.\nGallery > Galer√≠a para mostrar colecciones de im√°genes, usada en sitios de fotograf√≠a, portafolios de dise√±o o cat√°logos de productos.\nSlider Generic > Un componente vers√°til que puede ser utilizado no solo para im√°genes, sino tambi√©n para cualquier tipo de contenido deslizable, como texto, tarjetas de informaci√≥n o galer√≠as multimedia.\nSlider > Carrusel de im√°genes, popular en p√°ginas de inicio, en presentaciones de productos o en portfolios.\nMedia > Este componente se enfoca en la integraci√≥n y visualizaci√≥n de contenido multimedia, como im√°genes, videos y audio, en la interfaz de usuario. Es perfecto para aplicaciones que requieren una manipulaci√≥n intensiva de medios.\nMedia Input > Especializado en la carga y entrada de archivos multimedia. Facilita a los usuarios subir sus propios archivos de medios, siendo ideal para plataformas que permiten la personalizaci√≥n del contenido multimedia por parte del usuario.","-7#":"","-comunicaci√≥n#üì¢ Comunicaci√≥n":"Counter > Contador interactivo, com√∫n en carritos de compra, configuraciones de cantidad o en interfaces donde se requiere ajuste num√©rico.\nModal > Componente para crear ventanas emergentes o di√°logos. Utilizado para mostrar informaci√≥n adicional, recolectar datos del usuario o proporcionar alertas y confirmaciones en un contexto sobreimpuesto al contenido principal.\nNotification > Este componente se utiliza para mostrar mensajes breves al usuario. Esencial para proporcionar retroalimentaci√≥n instant√°nea o alertas sobre acciones o cambios en el estado de la aplicaci√≥n.\nNotification Pop > Una variante de notificaci√≥n que aparece temporalmente en la pantalla, usualmente en una esquina, y se esconde autom√°ticamente. Ideal para mensajes que no requieren una acci√≥n inmediata del usuario.\nPrint > Facilita la impresi√≥n de contenido espec√≠fico desde la aplicaci√≥n.\nPrint impresaframe > Permite imprimir contenido alojado en un iframe, como documentos o reportes generados din√°micamente dentro de la aplicaci√≥n.\nPrint Page > Dise√±ado para imprimir toda la p√°gina o secciones espec√≠ficas de ella, manteniendo el formato y estilo adecuados para la salida impresa.\nError Component > Muestra errores o problemas, esencial para una buena experiencia de usuario en la gesti√≥n de errores y en la presentaci√≥n de feedbacks cr√≠ticos.","-8#":"","Ô∏è-entradas-de-texto#‚å®Ô∏è Entradas de texto":"Form > Estructura para crear formularios interactivos, fundamental en la recolecci√≥n de datos, configuraciones de usuario y en interacciones esenciales del usuario.\nInput > Varios tipos de campos de entrada para formularios, esenciales para cualquier interacci√≥n que requiera entrada de datos por parte del usuario.\nCard > El componente de Input para tarjetas de cr√©dito en Fenext JS es una herramienta especializada para la entrada de informaci√≥n de tarjetas de cr√©dito. Este componente simplifica el proceso de recolecci√≥n de datos de tarjetas, proporcionando campos espec√≠ficos para el n√∫mero de tarjeta, fecha de vencimiento, y c√≥digo de seguridad (CVV). Es ideal para interfaces de pago o formularios donde se requiere informaci√≥n de tarjetas de cr√©dito, garantizando una experiencia de usuario fluida y segura.\nInput Card CCV >\nInput Card Number >\nInput Checkbox >\nInput Code >\nInput Date >\nInput Date Range >\nInput File >\nInput Gallery >\nGoogle >\nInput Google Autocomplete >\nInputGoogleLoadScript >\nInput GoogleMaps >\nInput Img >\nInput Number >\nInput NumberCount >\nInput Password >\nInput Phone >\nInput Radio >\nInput Range >\nInput Rate >\nInput Search >\nInput Select >\nInput Select Country >\nInput Select Country Multiple >\nInput Select CSC >\nInput Select Multiple >\nInput Select Number >\nInput Select Option >\nInput Swich >\nInput Text >\nInput Text Select >\nUnit >\nInput Unit Base >\nInput Unit Distance >\nInput Unit Volumen >\nInput Unit Weight >\nInput Upload >","-9#":"","-fechas#üìÖ Fechas":"Schedule > Este componente es utilizado para organizar y mostrar eventos o actividades en un calendario. Facilita la planificaci√≥n y visualizaci√≥n de agendas en aplicaciones o sitios web.\nSchedule Day > Una variante del componente Schedule enfocada en la visualizaci√≥n diaria. Muestra eventos o tareas programadas para un d√≠a espec√≠fico, ideal para agendas detalladas o itinerarios diarios.\nSchedule Weekly > Se centra en la organizaci√≥n semanal. Presenta una vista de toda la semana, permitiendo a los usuarios ver y planificar actividades a lo largo de varios d√≠as. √ötil para horarios semanales o planificaciones a mediano plazo.","-10#":"","Ô∏è-orden#üóíÔ∏è Orden":"Table > El componente Table sirve para mostrar datos en un formato de filas y columnas, facilitando la organizaci√≥n y visualizaci√≥n de informaci√≥n compleja. Es ideal para dashboards, reportes financieros, y listas de datos, donde una representaci√≥n clara y ordenada es fundamental.\nDrop Down > Men√∫ desplegable para seleccionar opciones, ampliamente utilizado en formularios, filtros de b√∫squeda o navegaci√≥n compacta.\nChronological List > Lista para mostrar eventos o elementos en orden cronol√≥gico. √ötil en timelines, historiales de transacciones o listados de eventos.\nCollapse > Permite mostrar u ocultar contenido. Utilizado en FAQs, paneles de control con opciones avanzadas o para reducir la sobrecarga visual en interfaces complejas.\nSimple > Este componente permite a los usuarios mostrar u ocultar contenido individual con un simple click. Es ideal para interfaces donde se necesita compactar informaci√≥n, como en secciones de preguntas frecuentes o en paneles de control donde el espacio es limitado.\nMultiple > Similar al Collapse Simple, pero dise√±ado para manejar m√∫ltiples secciones de contenido colapsables simult√°neamente. Es √∫til en interfaces complejas donde varios conjuntos de informaci√≥n necesitan ser accesibles sin abrumar al usuario, como en men√∫s extensos o en paneles de informaci√≥n detallada.","-11#":"","-lujo#üëë Lujo":"Lava Lamp > El componente Lava Lamp a√±ade un efecto visual fluido y colorido a interfaces, ideal para realzar la est√©tica y captar la atenci√≥n del usuario.","-12#":"","instalacion-independiente#Instalacion independiente":"En caso de que solo quieras usar la parte de componentes de Fenextjs sin instalar el resto de funcionalidades, puedes hacerlo de siguiente manera:","npm#Npm":"npm i fenextjs-component","bun#Bun":"bun i fenextjs-component","pnpm#Pnpm":"pnpm i fenextjs-component"}},"/components/box":{"title":"Box","data":{"":"El componente Box act√∫a como un contenedor b√°sico que encapsula su contenido, permitiendo aplicar estilos personalizados mediante clases adicionales.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente Box, se puede hacer desde fenextjs\nimport { Box } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tchildren\tReactNode\ts√≠\t\tEl contenido que se renderizar√° dentro del componente Box.\tclassName\tstring\tno\t\"\"\tClase personalizada para el componente Box.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"B√°sico\n<Box>Este es un contenedor b√°sico</Box>\nBox con clase personalizada\n<Box className=\"custom-class\">Contenido con clase personalizada</Box>"}},"/components/back":{"title":"Back","data":{"":"El componente Back representa un bot√≥n de retroceso que permite al usuario navegar a la p√°gina anterior en el historial del navegador, utilizar el Router de Next.js, redirigir a una URL espec√≠fica, ejecutar una funci√≥n personalizada o realizar una acci√≥n personalizada de 'fenextjs-history'.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente Back, se puede hacer desde fenextjs\nimport { Back } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tloader\tboolean\tno\tfalse\tIndica si el componente est√° en estado de carga, mostrando un indicador de 'Loader' y deshabilitando su funcionalidad.\tdisabled\tboolean\tno\tfalse\tIndica si el bot√≥n est√° deshabilitado.\tonClick\t(e?: any) => void\tno\tundefined\tFunci√≥n personalizada que se ejecuta al hacer clic en el bot√≥n.\ticon\tReactNode\tno\t<SvgPaginationPre />\tIcono que se muestra dentro del bot√≥n.\tchildren\tReactNode\tno\t'Back'\tContenido o texto que se muestra dentro del bot√≥n.\ttypeOnBack\t'fenextjs-history' | 'history' | 'router' | 'link' | 'none'\tno\t'history'\tDefine el tipo de acci√≥n que se ejecutar√° al hacer clic en el bot√≥n.\tlink\tstring\tno\t''\tURL a la que redirigir si 'typeOnBack' es 'link'.\tuseHistoryMinLenght\tboolean\tno\tfalse\tDetermina si se debe mostrar el bot√≥n solo si el historial del navegador tiene una longitud m√≠nima.\tminLenght\tnumber\tno\t2\tLongitud m√≠nima del historial del navegador para mostrar el bot√≥n.\tonValidateRuteBack\t(path: string) => boolean\tno\tundefined\tFunci√≥n para validar el retroceso cuando 'typeOnBack' es 'fenextjs-history'.\tclassName\tstring\tno\t''\tClase CSS para personalizar el contenedor del bot√≥n.\tclassNameDisabled\tstring\tno\t''\tClase CSS para el estado deshabilitado del bot√≥n.\tclassNameIcon\tstring\tno\t''\tClase CSS para el icono del bot√≥n.\tclassNameContent\tstring\tno\t''\tClase CSS para el contenido del bot√≥n.\tclassNameLoader\tstring\tno\t''\tClase CSS para el componente 'Loader'.","redireccionamiento#Redireccionamiento":"Dependiendo del valor de 'typeOnBack', la redirecci√≥n se ejecutar√° de la siguiente manera:\nTipo de back\tRedireccion\tDescripci√≥n\tfenextjs-history\tonBack({onValidateRuteBack})\tAcci√≥n personalizada utilizando el hook 'useHistory' de 'fenextjs'.\thistory\thistory.back()\tRedirecci√≥n a la p√°gina anterior mediante el historial del navegador.\trouter\trouter.back()\tRedirecci√≥n utilizando el router de Next.js.\tlink\trouter.push(link)\tRedirecci√≥n a una URL espec√≠fica.\tnone\tNinguna acci√≥n\tNo se realiza ninguna redirecci√≥n.","nota#NOTA":"Para que typeOnBack='fenextjs-history' funcione correctamente debe ser ejecutado useHistory en _app o el layout mas superior que se posea.\nimport type { AppProps } from \"next/app\";\nimport { useHistory } from \"fenextjs\";\nexport default function App({ Component, pageProps }: AppProps) {\n  useHistory({});\n  return <Component {...pageProps} />;\n}","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"B√°sico\n<Back />\nBack con texto personalizado\n<Back>Go Back</Back>\nBack con acci√≥n personalizada\n<Back onClick={() => console.log(\"Bot√≥n clickeado\")}>Volver</Back>\nBack deshabilitado\n<Back disabled={true} />\nBack con validaci√≥n personalizada\n<Back\n  typeOnBack=\"fenextjs-history\"\n  onValidateRuteBack={(path) => path !== \"/home\"}\n/>"}},"/components/breadcrumb":{"title":"Breadcrumb","data":{"":"El componente Breadcrumb muestra una serie de enlaces que indican la ruta de navegaci√≥n actual del usuario. Es √∫til para mejorar la experiencia del usuario al mostrarle el contexto de navegaci√≥n.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente Breadcrumb, se puede hacer desde fenextjs\nimport { Breadcrumb } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tlinks\tBreadcrumbLinkProps[]\ts√≠\t\tUna lista de objetos que representan los enlaces del breadcrumb. Cada objeto incluye la URL, el contenido y opcionalmente un manejador de eventos onClick.\tclassName\tstring\tno\t\"\"\tClase personalizada para el componente Breadcrumb.\tclassNameItem\tstring\tno\t\"\"\tClase personalizada para los elementos individuales del breadcrumb.\tclassNameLink\tstring\tno\t\"\"\tClase personalizada para los enlaces dentro del breadcrumb.","propiedades-de-breadcrumblink#Propiedades de BreadcrumbLink":"Cada enlace en el breadcrumb se define mediante las siguientes propiedades:\nPropiedad\tTipo\tDescripci√≥n\thref\tstring\tLa URL a la que se redirigir√° cuando se haga click en el enlace.\tchildren\tReactNode\tEl contenido que se mostrar√° dentro del enlace.\tonClick\tfunction\tFunci√≥n que se ejecutar√° cuando se haga click en el enlace (opcional).","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"Breadcrumb b√°sico\n<Breadcrumb\n  links={[\n    { href: \"/home\", children: \"Home\" },\n    { href: \"/about\", children: \"About\" },\n  ]}\n/>\nBreadcrumb con clases personalizadas\n<Breadcrumb\n  className=\"custom-breadcrumb\"\n  classNameItem=\"custom-item\"\n  classNameLink=\"custom-link\"\n  links={[\n    { href: \"/home\", children: \"Home\" },\n    { href: \"/services\", children: \"Services\" },\n    { href: \"/contact\", children: \"Contact\" },\n  ]}\n/>"}},"/components/button":{"title":"Button","data":{"":"El componente Button es un bot√≥n interactivo que puede ser configurado para mostrar √≠conos, estar en estado de carga (loader), deshabilitarse y adaptarse a diferentes tama√±os. Permite a los usuarios interactuar con la aplicaci√≥n ejecutando acciones al hacer clic.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente Button, se puede hacer desde fenextjs\nimport { Button } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tloader\tboolean\tno\tfalse\tSi el bot√≥n est√° en estado de carga, mostrando un indicador de carga (spinner) y deshabilitado para otras acciones.\tdisabled\tboolean\tno\tfalse\tSi el bot√≥n est√° deshabilitado, impidiendo cualquier interacci√≥n.\tonClick\tfunction\tno\t\tFunci√≥n que se ejecuta cuando se hace click en el bot√≥n (solo si no est√° deshabilitado o en estado de carga).\tonClickDisabled\tfunction\tno\t\tFunci√≥n que se ejecuta cuando se hace click en el bot√≥n estando deshabilitado.\ticon\tReactNode\tno\tundefined\tEl √≠cono que se mostrar√° dentro del bot√≥n.\tisBtn\tboolean\tno\ttrue\tSi se renderiza el componente como un bot√≥n (\\<button\\>) o como un \\<div\\>.\tsize\t\"extra-small\" | \"small\" | \"normal\" | \"strong\" | \"extra-strong\"\tno\t\"normal\"\tEl tama√±o del bot√≥n.\tfull\tboolean\tno\tfalse\tSi el bot√≥n debe ocupar todo el ancho disponible.\tclassName\tstring\tno\t\"\"\tClase personalizada para el componente Button.\tclassNameLoader\tstring\tno\t\"\"\tClase personalizada para el componente Loader dentro del bot√≥n cuando est√° en estado de carga.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"Bot√≥n b√°sico\n<Button>Click me</Button>\nBot√≥n con √≠cono\n<Button icon={<img src=\"/icon.svg\" alt=\"Icon\" />}>Click me</Button>\nBot√≥n en estado de carga\n<Button loader={true}>Loading...</Button>\nBot√≥n deshabilitado\n<Button disabled={true}>Disabled</Button>\nBot√≥n con tama√±o personalizado\n<Button size=\"strong\">Strong Button</Button>\nBot√≥n con ancho completo\n<Button full={true}>Full Width Button</Button>"}},"/components/chat/chat":{"title":"Chat","data":{"":"El componente Chat es un contenedor completo que incluye elementos como el usuario del chat, los mensajes, un formulario para enviar mensajes y un bot√≥n de cargar m√°s mensajes. Se puede configurar para mostrar un loader mientras se cargan los datos, as√≠ como manejar diferentes estados como chat vac√≠o y auto-scroll cuando hay nuevos mensajes.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente Chat, se puede hacer desde fenextjs\nimport { Chat } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tloader\tboolean\tno\tfalse\tSi el chat est√° en estado de carga, deshabilitando otras acciones mientras se cargan los datos.\tuseAccountOwner\tboolean\tno\tfalse\tSi se debe mostrar al due√±o de la cuenta en el chat.\tonScrollIfNewMessage\tboolean\tno\ttrue\tSi se debe hacer scroll autom√°ticamente cuando hay un nuevo mensaje.\tonActionAfterNewMessage\t() => void\tno\t\tFunci√≥n que se ejecuta despu√©s de recibir un nuevo mensaje.\tempty\tReactNode\tno\t<Text>There is not messages yet</Text><Telegram />\tContenido que se mostrar√° si no hay mensajes en el chat.\tchatUser\tChatUserProps | ChatUserProps[]\ts√≠\t\tInformaci√≥n del usuario o usuarios del chat.\tloaderChatUser\tboolean\tno\tfalse\tSi el usuario del chat est√° en estado de carga.\tchatMessage\tChatMessageProps[]\ts√≠\t\tLista de mensajes del chat.\tloaderChatMessage\tboolean\tno\tfalse\tSi los mensajes del chat est√°n en estado de carga.\tchatFormSendMessage\tChatFormSendMessageProps\ts√≠\t\tPropiedades del formulario para enviar un mensaje en el chat.\tloaderChatFormSendMessage\tboolean\tno\tfalse\tSi el formulario de enviar mensaje est√° en estado de carga.\tuseBtnLoadMoreMssages\tboolean\tno\tfalse\tSi se debe mostrar el bot√≥n para cargar m√°s mensajes.\tbtnLoadMoreMessages\tButtonProps\tno\t{ children: \"Load more messages\" }\tPropiedades para el bot√≥n de cargar m√°s mensajes.\tfullPage\tboolean\tno\ttrue\tSi el chat debe mostrarse en modo de p√°gina completa.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"Chat b√°sico con mensajes\n<Chat\n  chatUser={[{ id: 1, name: \"User1\" }]}\n  chatMessage={[\n    { id: 1, message: \"Hello!\" },\n    { id: 2, message: \"How are you?\" },\n  ]}\n  chatFormSendMessage={{ onSubmit: (msg) => console.log(msg) }}\n/>\nChat vac√≠o\n<Chat\n  chatUser={[{ id: 1, name: \"User1\" }]}\n  chatMessage={[]}\n  chatFormSendMessage={{ onSubmit: () => {} }}\n/>\nChat con bot√≥n de cargar m√°s mensajes\n<Chat\n  chatUser={[{ id: 1, name: \"User1\" }]}\n  chatMessage={[\n    { id: 1, message: \"Hello!\" },\n    { id: 2, message: \"How are you?\" },\n  ]}\n  chatFormSendMessage={{ onSubmit: (msg) => console.log(msg) }}\n  useBtnLoadMoreMssages={true}\n/>"}},"/components/chat/formsendmessage":{"title":"ChatFormSendMessage","data":{"":"El componente ChatFormSendMessage es un formulario que permite a los usuarios enviar mensajes dentro del chat. Incluye opciones como un bot√≥n para enviar el mensaje, la posibilidad de enviar mensajes presionando 'Enter' y un estado de carga mientras se procesa el env√≠o.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente ChatFormSendMessage, se puede hacer desde fenextjs\nimport { ChatFormSendMessage } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tonSubmit\tRequestProps<ChatFormSendMessageDataProps, RequestResultProps>\tno\t\tFunci√≥n que se ejecuta al enviar el mensaje, recibiendo los datos del formulario como par√°metros.\tloader\tboolean\tno\tfalse\tIndica si el formulario est√° en estado de carga, deshabilitando la interacci√≥n del usuario.\tuseSubmitInEnter\tboolean\tno\ttrue\tSi se debe permitir el env√≠o del mensaje presionando 'Enter'.\tbtnChildren\tReactNode\tno\tSend\tContenido del bot√≥n para enviar el mensaje.\tplaceholderMessage\tstring\tno\tMessage\tTexto de placeholder que se mostrar√° en el campo del mensaje.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"Formulario b√°sico de enviar mensaje\n<ChatFormSendMessage\n  onSubmit={async (data) => {\n    console.log(data);\n  }}\n/>\nFormulario con bot√≥n y placeholder personalizados\n<ChatFormSendMessage\n  btnChildren=\"Enviar\"\n  placeholderMessage=\"Escribe tu mensaje aqu√≠\"\n/>\nFormulario sin env√≠o con Enter\n<ChatFormSendMessage useSubmitInEnter={false} />"}},"/components/chat/message":{"title":"ChatMessage","data":{"":"El componente ChatMessage es una representaci√≥n de un mensaje de chat, mostrando el usuario, mensaje, hora de creaci√≥n y su estado, con opciones de personalizaci√≥n para el estilo y comportamiento.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente ChatMessage, se puede hacer desde fenextjs\nimport { ChatMessage } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tid\tstring | number\ts√≠\tundefined\tIdentificador √∫nico del mensaje.\tloader\tboolean\tno\tfalse\tIndica si el componente est√° en estado de carga, mostrando placeholders en lugar de contenido.\tright\tboolean\tno\tfalse\tDefine si el mensaje debe alinearse a la derecha, generalmente para mensajes propios.\taccount\tPartial<UserProps>\tno\tundefined\tPropiedades parciales del usuario que env√≠a el mensaje, incluyendo nombre e imagen de perfil.\tmessage\tReactNode\tno\tundefined\tEl contenido del mensaje, puede ser texto o cualquier nodo de React.\tcreatedAt\tDate\tno\tundefined\tFecha y hora en la que fue creado el mensaje.\tview\tboolean\tno\tfalse\tIndica si el mensaje ha sido visto o no.\timgProps\tPartial<ImgProps>\tno\t{ imgIf404: FenextImgUserPlaceholder }\tPropiedades adicionales para el componente Img que se utiliza para mostrar la imagen del usuario.","alineaci√≥n-del-mensaje#Alineaci√≥n del mensaje":"El componente permite alinear el mensaje hacia la derecha o izquierda basado en el prop right.\nProp right\tAlineaci√≥n\tDescripci√≥n\tfalse\tIzquierda\tEl mensaje se muestra alineado a la izquierda, t√≠pico de mensajes recibidos.\ttrue\tDerecha\tEl mensaje se muestra alineado a la derecha, t√≠pico de mensajes enviados por el usuario.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"Mensaje b√°sico\n<ChatMessage\n  id={1}\n  message=\"Hola\"\n  createdAt={new Date()}\n  account={{ name: \"Usuario\" }}\n/>\nMensaje alineado a la derecha\n<ChatMessage\n  id={2}\n  message=\"Hola, soy yo\"\n  right={true}\n  createdAt={new Date()}\n  account={{ name: \"Yo\" }}\n/>\nMensaje en estado de carga\n<ChatMessage id={3} loader={true} />"}},"/components/chronologicallist":{"title":"ChronologicalList","data":{"":"El componente ChronologicalList organiza elementos de forma cronol√≥gica, agrup√°ndolos por fecha y hora. Permite personalizar el formato de la fecha y la hora, as√≠ como agregar contenido adicional para cada elemento.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente ChronologicalList, se puede hacer desde fenextjs\nimport { ChronologicalList } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\titems\tChronologicalListItemsProps[]\ts√≠\tundefined\tLista de elementos que se mostrar√°n en la lista cronol√≥gica, cada uno con su respectiva fecha, contenido y posible personalizaci√≥n.\tmarket\tReactNode\tno\tundefined\tContenido personalizado que se mostrar√° junto a cada elemento como marcador. Puede ser un √≠cono, texto o cualquier otro nodo.\tparseDateYYYYMMDD\t(date: Date) => string\tno\tparseDateYYYYMMDD\tFunci√≥n para parsear la fecha en el formato 'YYYY-MM-DD'.\tparseDateHHMMSS\t(date: Date) => string\tno\tgetTimeToText\tFunci√≥n para parsear la hora en el formato 'HH:MM:SS'.\tclassName\tstring\tno\t''\tClase CSS personalizada para el componente.","chronologicallistitemsprops#ChronologicalListItemsProps":"Cada elemento de la lista tiene sus propios par√°metros:\nPropiedad\tTipo\tRequerido\tDescripci√≥n\tdate\tDate\tsi\tLa fecha correspondiente al elemento.\tchildren\tReactNode\tsi\tEl contenido que se mostrar√° dentro del elemento.\tmarket\tReactNode\tno\tContenido personalizado que se mostrar√° junto a cada elemento como marcador. Puede ser un √≠cono, texto o cualquier otro nodo.\tclassName\tstring\tno\tClase CSS personalizada para el elemento.","formato-de-fecha-y-hora#Formato de Fecha y Hora":"El componente permite personalizar el formato de la fecha y hora utilizando las funciones parseDateYYYYMMDD y parseDateHHMMSS. Si no se proporcionan, se utilizan las funciones por defecto.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"Lista cronol√≥gica b√°sica\n<ChronologicalList\n  items={[\n    { date: new Date(), children: \"Elemento 1\" },\n    { date: new Date(), children: \"Elemento 2\" },\n  ]}\n/>\nLista cronol√≥gica con marcador personalizado\n<ChronologicalList\n  items={[\n    { date: new Date(), children: \"Elemento 1\", market: <span>üåü</span> },\n    { date: new Date(), children: \"Elemento 2\" },\n  ]}\n  market={<span>üîî</span>}\n/>\nLista cronol√≥gica con formato de fecha personalizado\n<ChronologicalList\n  items={[{ date: new Date(), children: \"Evento importante\" }]}\n  parseDateYYYYMMDD={(date) =>\n    date.toLocaleDateString(\"es-ES\", {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n    })\n  }\n/>"}},"/components/chronometer":{"title":"Chronometer","data":{"":"El componente Chronometer muestra una cuenta regresiva en base al tiempo dado en segundos, actualiz√°ndose cada segundo. Permite personalizar el formato del tiempo mostrado y ejecutar una acci√≥n cada vez que el tiempo cambia.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente Chronometer, se puede hacer desde fenextjs\nimport { Chronometer } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\ttime\tnumber\tno\t100\tEl tiempo inicial en segundos que se mostrar√° y del cual el cron√≥metro comenzar√° la cuenta regresiva.\tonChange\t(time: number) => void\tno\tundefined\tFunci√≥n que se ejecuta cada vez que el tiempo cambia, recibiendo el nuevo tiempo como par√°metro.\tmin\tnumber\tno\t0\tEl tiempo m√≠nimo al que puede llegar el cron√≥metro, en segundos.\toptionsTimeToText\tgetTimeToTextProps\tno\t{days: false, hours: true,minutes: true,seconds: true }\tOpciones para personalizar el formato del tiempo mostrado, como si incluir o no los d√≠as.\tclassName\tstring\tno\t''\tClase CSS personalizada para el componente.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"Cron√≥metro b√°sico\n<Chronometer time={120} />\nCron√≥metro con acci√≥n al cambiar el tiempo\n<Chronometer\n  time={60}\n  onChange={(newTime) => console.log(\"Nuevo tiempo:\", newTime)}\n/>\nCron√≥metro con formato de tiempo personalizado\n<Chronometer\n  time={3600}\n  optionsTimeToText={{ hours: true, minutes: true, seconds: true }}\n/>"}},"/components/collapse/multiple":{"title":"CollapseMultiple","data":{"":"El componente CollapseMultiple permite mostrar m√∫ltiples elementos de Collapse organizados, con soporte para m√∫ltiples tipos de colapso (radio o checkbox) y control sobre los estados activos por defecto.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente CollapseMultiple, se puede hacer desde fenextjs\nimport { CollapseMultiple } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\titems\tOmit<CollapseBaseProps, 'checkbox' | 'name' | 'id'>[]\tno\t[]\tLista de items que se mostrar√°n como componentes Collapse dentro de CollapseMultiple.\tdefaultActive\tnumber | number[]\tno\t[]\t√çndice(s) de los elementos que estar√°n activados por defecto.\tname\tstring\tno\t''\tNombre del conjunto de Collapse, utilizado para agrupar los items.\ttype\t'radio' | 'checkbox'\tno\t'checkbox'\tDetermina si los items se comportar√°n como un conjunto de tipo 'radio' o 'checkbox'.\tuseActiveForShowChildren\tboolean\tno\t\tSi est√° habilitado, el contenido solo se mostrar√° cuando los elementos de Collapse est√©n activos.\tclassNameMultiple\tstring\tno\t''\tClase CSS personalizada para el contenedor del componente CollapseMultiple.\tclassName\tstring\tno\t''\tClase CSS personalizada para cada elemento Collapse dentro de CollapseMultiple.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"CollapseMultiple b√°sico con varios Collapse\n<CollapseMultiple\n  items={[\n    { header: <h3>Encabezado 1</h3>, children: \"Contenido del collapse 1\" },\n    { header: <h3>Encabezado 2</h3>, children: \"Contenido del collapse 2\" },\n  ]}\n/>\nCollapseMultiple con estado de 'radio'\n<CollapseMultiple\n  type=\"radio\"\n  items={[\n    { header: <h3>Encabezado 1</h3>, children: \"Contenido del collapse 1\" },\n    { header: <h3>Encabezado 2</h3>, children: \"Contenido del collapse 2\" },\n  ]}\n/>\nCollapseMultiple con varios activos por defecto\n<CollapseMultiple\n  defaultActive={[0, 1]}\n  items={[\n    { header: <h3>Encabezado 1</h3>, children: \"Contenido del collapse 1\" },\n    { header: <h3>Encabezado 2</h3>, children: \"Contenido del collapse 2\" },\n  ]}\n/>"}},"/components/chat/user":{"title":"ChatUser","data":{"":"El componente ChatUser muestra la informaci√≥n de un usuario en un contexto de chat, incluyendo su imagen, nombre y datos extra opcionales. Tambi√©n soporta un estado de carga y permite personalizar la imagen y el contenido adicional.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente ChatUser, se puede hacer desde fenextjs\nimport { ChatUser } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tname\tstring\tno\tundefined\tEl nombre del usuario que se mostrar√° en el componente.\timg\tPartial<ImgProps>\tno\tundefined\tPropiedades de la imagen del usuario, incluyendo la URL o cualquier atributo de la imagen.\trole\tstring\tno\tundefined\tEl rol del usuario, usado para aplicar clases CSS adicionales al componente.\tloader\tboolean\tno\tfalse\tIndica si el componente est√° en estado de carga, mostrando placeholders en lugar del contenido real.\timgProps\tPartial<ImgProps>\tno\t{ imgIf404: FenextImgUserPlaceholder }\tPropiedades adicionales para el componente Img, permitiendo personalizar c√≥mo se maneja la imagen del usuario.\textraData\tReactNode\tno\tundefined\tContenido adicional que se mostrar√° junto al nombre del usuario, como informaci√≥n adicional o etiquetas.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"Usuario b√°sico\n<ChatUser name=\"Juan Perez\" role=\"admin\" />\nUsuario con datos extra\n<ChatUser name=\"Maria\" extraData={<span>Conectado</span>} />\nUsuario en estado de carga\n<ChatUser loader={true} />"}},"/components/collapse/simple":{"title":"Collapse","data":{"":"El componente Collapse permite mostrar u ocultar contenido dentro de un contenedor colapsable con opciones de personalizaci√≥n como control de estado activo, √≠conos, y estados de carga.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente Collapse, se puede hacer desde fenextjs\nimport { Collapse } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tloader\tboolean\tno\tfalse\tIndica si el componente est√° en estado de carga, mostrando un √≠cono de cargando.\tdisabled\tboolean\tno\tfalse\tDetermina si el componente est√° deshabilitado, evitando que el usuario lo pueda interactuar.\tdefaultActive\tboolean\tno\tfalse\tDetermina si el Collapse estar√° activado de manera predeterminada.\tactive\tboolean\tno\tundefined\tEstado activo controlado externamente.\tid\tstring\tno\t\tID √∫nico del componente.\tname\tstring\tno\t''\tNombre del componente.\tstatus\t'none' | 'error' | 'ok'\tno\t'none'\tEstado del Collapse, puede ser 'none', 'error' o 'ok'.\ttype\t'radio' | 'checkbox'\tno\t'checkbox'\tDefine el tipo de interacci√≥n del componente, ya sea tipo 'radio' o 'checkbox'.\tshow\t'checked' | 'focus'\tno\t'checked'\tControla c√≥mo se muestra el contenido del Collapse, ya sea cuando est√° 'checked' o 'focus'.\theader\tReactNode\ts√≠\t\tEl contenido del encabezado del Collapse.\tonChange\t(value: boolean) => void\tno\t\tFunci√≥n que se ejecuta cuando el estado activo del Collapse cambia.\ticonArrow\tReactNode\tno\t<Arrow />\t√çcono que se mostrar√° como la flecha de colapso.\trotateIcon\tboolean\tno\ttrue\tIndica si el √≠cono debe rotar al expandirse el Collapse.\tuseActiveForShowChildren\tboolean\tno\tfalse\tSi est√° habilitado, el contenido solo se cargara cuando el Collapse est√© activo.\tchildren\tReactNode\tno\t\tEl contenido dentro del cuerpo del Collapse.\tclassName\tstring\tno\t''\tClase CSS personalizada para el componente Collapse.\tclassNameHeader\tstring\tno\t''\tClase CSS personalizada para el encabezado del Collapse.\tclassNameHeaderContent\tstring\tno\t''\tClase CSS personalizada para el contenido del encabezado del Collapse.\tclassNameHeaderIcon\tstring\tno\t''\tClase CSS personalizada para el √≠cono del encabezado del Collapse.\tclassNameBody\tstring\tno\t''\tClase CSS personalizada para el cuerpo del Collapse.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"Collapse b√°sico\n<Collapse header={<h3>Encabezado</h3>}>Contenido del collapse</Collapse>\nCollapse con estado de carga\n<Collapse header={<h3>Encabezado</h3>} loader={true}>\n  Cargando...\n</Collapse>\nCollapse controlado externamente\nconst [active, setActive] = useState(false);\n<Collapse\n  header={<h3>Encabezado</h3>}\n  active={active}\n  onChange={(value) => setActive(value)}\n>\n  Contenido controlado\n</Collapse>;"}},"/components/cols":{"title":"Cols","data":{"":"El componente Cols permite organizar elementos en m√∫ltiples columnas, con opciones para controlar la cantidad de columnas y la propiedad de ruptura interna de los elementos.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente Cols, se puede hacer desde fenextjs\nimport { Cols } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tnCols\tnumber | string\tno\t2\tN√∫mero de columnas en las que se organizar√°n los elementos. Puede ser un valor num√©rico o una cadena.\tbreakInside\tboolean\tno\ttrue\tIndica si se debe aplicar la propiedad 'break-inside' para evitar la ruptura interna de los elementos dentro de las columnas.\tchildren\tReactNode\tno\tundefined\tContenido o elementos que se mostrar√°n dentro de las columnas.\tclassName\tstring\tno\t''\tClase CSS para personalizar el contenedor de las columnas.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"B√°sico\n<Cols>\n  <div>Item 1</div>\n  <div>Item 2</div>\n</Cols>\nCols con 3 columnas\n<Cols nCols={3}>\n  <div>Item 1</div>\n  <div>Item 2</div>\n  <div>Item 3</div>\n</Cols>\nCols con breakInside deshabilitado\n<Cols breakInside={false}>\n  <div>Item 1</div>\n  <div>Item 2</div>\n</Cols>"}},"/components/container":{"title":"Container","data":{"":"El componente Container es un contenedor flexible que permite ajustar el tama√±o personalizado y aplicar padding de forma opcional, proporcionando una estructura para organizar contenido.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente Container, se puede hacer desde fenextjs\nimport { Container } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tcustomSize\tnumber\tno\tundefined\tTama√±o personalizado del contenedor, calculado como customSize / 16 * rem.\tusePaddingInline\tboolean\tno\ttrue\tDetermina si se aplica padding en el contenedor.\tchildren\tReactNode\tno\tundefined\tContenido o elementos que se mostrar√°n dentro del contenedor.\tclassName\tstring\tno\t''\tClase CSS para personalizar el contenedor.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"B√°sico\n<Container>\n  <div>Contenido</div>\n</Container>\nContainer con tama√±o personalizado\n<Container customSize={48}>\n  <div>Contenido</div>\n</Container>\nContainer sin padding\n<Container usePaddingInline={false}>\n  <div>Contenido</div>\n</Container>"}},"/components/contentloading":{"title":"ContentLoading","data":{"":"El componente ContentLoading es una envoltura que muestra un contenido cargando o el contenido completo, dependiendo de si el estado de carga est√° activado o no. Es √∫til para manejar la visualizaci√≥n condicional de contenido mientras se espera una carga.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente ContentLoading, se puede hacer desde fenextjs\nimport { ContentLoading } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tchildren\tReactNode\tno\tundefined\tEl contenido que se mostrar√° cuando no est√© en estado de carga.\tcomponentLoader\tReactNode\tno\t<LoaderSpinner />\tComponente que se muestra mientras el contenido est√° en estado de carga.\tloader\tboolean\tno\tfalse\tIndica si el componente est√° en estado de carga, mostrando el componente loader.\tisPage\tboolean\tno\tfalse\tDetermina si el componente debe comportarse como una p√°gina en carga.\tclassName\tstring\tno\t''\tClase CSS para personalizar el contenedor del componente.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"B√°sico\n<ContentLoading>\n  <div>Contenido cargado</div>\n</ContentLoading>\nContentLoading con loader activado\n<ContentLoading loader={true}>\n  <div>Contenido cargado</div>\n</ContentLoading>\nContentLoading como p√°gina\n<ContentLoading isPage={true}>\n  <div>Contenido cargado</div>\n</ContentLoading>"}},"/components/contentshow":{"title":"ContentShow","data":{"":"El componente ContentShow permite mostrar u ocultar su contenido condicionalmente basado en la propiedad 'show'.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente ContentShow, se puede hacer desde fenextjs\nimport { ContentShow } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tchildren\tReactNode\tno\tundefined\tEl contenido que se mostrar√° o ocultar√° dependiendo del valor de 'show'.\tshow\tboolean\tno\ttrue\tDetermina si el contenido debe mostrarse. Si es false, el contenido se ocultar√°.\tclassName\tstring\tno\t''\tClase CSS para personalizar el contenedor del componente.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"B√°sico\n<ContentShow show={true}>\n  <div>Contenido visible</div>\n</ContentShow>\nContenido oculto\n<ContentShow show={false}>\n  <div>Contenido oculto</div>\n</ContentShow>"}},"/components/copy":{"title":"Copy","data":{"":"El componente Copy permite copiar un texto al portapapeles cuando se hace click en √©l, con la opci√≥n de mostrar una notificaci√≥n al usuario.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente Copy, se puede hacer desde fenextjs\nimport { Copy } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\ttext\tstring\tno\t''\tTexto que se copiar√° al portapapeles al hacer click en el componente.\tchildren\tReactNode\tno\tundefined\tEl contenido que se mostrar√° dentro del componente Copy.\tonClickForCopy\tfunction\tno\tundefined\tFunci√≥n personalizada que se ejecuta despu√©s de copiar el texto.\tnotification\tNotificationDataProps\tno\t{ message: 'Copy', type: RequestResultTypeProps.OK }\tConfiguraci√≥n de la notificaci√≥n que se muestra al copiar el texto.\tclassName\tstring\tno\t''\tClase CSS para personalizar el contenedor del componente.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"B√°sico\n<Copy text=\"Texto a copiar\">Copia este texto</Copy>\nCopy con notificaci√≥n personalizada\n<Copy\n  text=\"Texto a copiar\"\n  notification={{ message: \"Texto copiado\", type: \"success\" }}\n>\n  Copia este texto\n</Copy>\nCopy con funci√≥n personalizada\n<Copy\n  text=\"Texto a copiar\"\n  onClickForCopy={(text) => console.log(\"Texto copiado:\", text)}\n>\n  Copia este texto\n</Copy>"}},"/components/counter":{"title":"Counter","data":{"":"El componente Counter muestra un n√∫mero que se incrementa o decrementa gradualmente hasta alcanzar un valor final. Tambi√©n puede mostrar un texto adicional opcional.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente Counter, se puede hacer desde fenextjs\nimport { Counter } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tnumber\tnumber\ts√≠\t0\tEl n√∫mero que se mostrar√° y que ser√° incrementado o decrementado gradualmente.\ttext\tReactNode\tno\tundefined\tTexto adicional que se puede mostrar junto con el contador.\ttime\tnumber\tno\t1000\tTiempo en milisegundos para alcanzar el n√∫mero final.\tdecimal\tnumber\tno\t2\tCantidad de decimales a mostrar en el n√∫mero.\tparseNumber\t(n: number) => ReactNode\tno\tparseNumberCount\tFunci√≥n personalizada para formatear el n√∫mero antes de mostrarlo.\tclassName\tstring\tno\t''\tClase CSS para personalizar el contenedor del componente.\tclassNameNumber\tstring\tno\t''\tClase CSS para personalizar la apariencia del n√∫mero.\tclassNameText\tstring\tno\t''\tClase CSS para personalizar la apariencia del texto.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"B√°sico\n<Counter number={100} />\nCounter con texto adicional\n<Counter number={100} text=\"Progreso\" />\nCounter con tiempo personalizado\n<Counter number={500} time={2000} />"}},"/components/dropdown":{"title":"DropDown","data":{"":"El componente DropDown proporciona un men√∫ desplegable ajustable que puede cambiar su posici√≥n seg√∫n el espacio disponible alrededor del contenedor.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente DropDown, se puede hacer desde fenextjs\nimport { DropDown } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tloader\tboolean\tno\tfalse\tIndica si el componente est√° en estado de carga, mostrando un √≠cono de cargando.\tdisabled\tboolean\tno\tfalse\tDetermina si el componente est√° deshabilitado, evitando que el usuario lo pueda interactuar.\tdefaultActive\tboolean\tno\tfalse\tDetermina si el DropDown estar√° activado de manera predeterminada.\tactive\tboolean\tno\tundefined\tEstado activo controlado externamente.\tid\tstring\tno\t\tID √∫nico del componente.\tname\tstring\tno\t''\tNombre del componente.\tstatus\t'none' | 'error' | 'ok'\tno\t'none'\tEstado del DropDown, puede ser 'none', 'error' o 'ok'.\ttype\t'radio' | 'checkbox'\tno\t'checkbox'\tDefine el tipo de interacci√≥n del componente, ya sea tipo 'radio' o 'checkbox'.\tshow\t'checked' | 'focus'\tno\t'checked'\tControla c√≥mo se muestra el contenido del DropDown, ya sea cuando est√° 'checked' o 'focus'.\theader\tReactNode\ts√≠\t\tEl contenido del encabezado del DropDown.\tonChange\t(value: boolean) => void\tno\t\tFunci√≥n que se ejecuta cuando el estado activo del DropDown cambia.\ticonArrow\tReactNode\tno\t<Arrow />\t√çcono que se mostrar√° como la flecha de colapso.\trotateIcon\tboolean\tno\ttrue\tIndica si el √≠cono debe rotar al expandirse el DropDown.\tuseActiveForShowChildren\tboolean\tno\tfalse\tSi est√° habilitado, el contenido solo se mostrar√° cuando el DropDown est√© activo.\tchildren\tReactNode\tno\t\tEl contenido dentro del cuerpo del DropDown.\tclassName\tstring\tno\t''\tClase CSS personalizada para el componente DropDown.\tclassNameHeader\tstring\tno\t''\tClase CSS personalizada para el encabezado del DropDown.\tclassNameHeaderContent\tstring\tno\t''\tClase CSS personalizada para el contenido del encabezado del DropDown.\tclassNameHeaderIcon\tstring\tno\t''\tClase CSS personalizada para el √≠cono del encabezado del DropDown.\tclassNameBody\tstring\tno\t''\tClase CSS personalizada para el cuerpo del DropDown.\tclassNameDropDown\tstring\tno\t''\tClase CSS para personalizar el contenedor del DropDown.","ajustes-espaciales#Ajustes Espaciales":"El componente DropDown ajusta su posici√≥n autom√°ticamente seg√∫n el espacio disponible en su contenedor. Los posibles ajustes son:\nDirecci√≥n\tDescripci√≥n\tleft\tEl DropDown se alinea a la izquierda si hay m√°s espacio disponible.\tright\tEl DropDown se alinea a la derecha si hay m√°s espacio disponible.\tup\tEl DropDown se despliega hacia arriba si hay m√°s espacio disponible arriba.\tdown\tEl DropDown se despliega hacia abajo si hay m√°s espacio disponible abajo.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"B√°sico\n<DropDown>Contenido desplegable</DropDown>\nDropDown siempre visible\n<DropDown show=\"always\">Contenido siempre visible</DropDown>"}},"/components/header/buttonmenu":{"title":"ButtonMenu","data":{"":"El componente ButtonMenu proporciona un bot√≥n interactivo con un men√∫ desplegable que puede personalizarse con iconos, clases CSS, y configurarse para mostrarse por defecto o estar deshabilitado. Tambi√©n tiene la capacidad de mostrar un indicador de carga.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente ButtonMenu, se puede hacer desde fenextjs\nimport { ButtonMenu } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tloader\tboolean\tno\tfalse\tIndica si el componente est√° en estado de carga, mostrando un indicador de carga (spinner) y deshabilitando su funcionalidad.\tdisabled\tboolean\tno\tfalse\tDesactiva el bot√≥n del men√∫.\tdefaultActive\tboolean\tno\ttrue\tDetermina si el men√∫ est√° activo por defecto o no.\ttarget\tstring\tno\t'fenext-btn-menu-checkbox'\tID objetivo del checkbox asociado al bot√≥n del men√∫.\tclassName\tstring\tno\t''\tClase CSS para personalizar el contenedor del men√∫.\tclassNameIcon\tstring\tno\t''\tClase CSS para personalizar el icono del men√∫.\tclassNameIconBarClose\tstring\tno\t''\tClase CSS para personalizar la barra de cierre del icono.\tclassNameContent\tstring\tno\t''\tClase CSS para personalizar el contenido del men√∫ desplegable.","funcionalidad-adicional#Funcionalidad adicional":"Este componente incluye un comportamiento reactivo que ajusta la visualizaci√≥n del men√∫ en funci√≥n del tama√±o de la ventana del navegador.\nPropiedad\tUso\tDescripci√≥n\tdefaultActive\tDetermina si el men√∫ se muestra activo por defecto.\tEl men√∫ se mostrar√° activado si el ancho de la ventana es mayor a 575px al cargar la p√°gina.\tloader\tMuestra un indicador de carga en lugar del contenido del men√∫.\tCuando 'loader' est√° en 'true', el componente muestra un spinner en lugar del contenido del men√∫.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"Uso b√°sico\n<ButtonMenu>Contenido del men√∫</ButtonMenu>\nMen√∫ con estado de carga\n<ButtonMenu loader={true} />\nMen√∫ deshabilitado\n<ButtonMenu disabled={true} />\nMen√∫ con clases personalizadas\n<ButtonMenu\n  className=\"mi-menu\"\n  classNameIcon=\"mi-icono\"\n  classNameContent=\"mi-contenido\"\n>\n  Contenido\n</ButtonMenu>"}},"/components/error":{"title":"ErrorComponent","data":{"":"El componente ErrorComponent se utiliza para mostrar errores personalizados o basados en el estado de un componente, incluyendo mensajes de error y posibles entradas relacionadas con el error.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente ErrorComponent, se puede hacer desde fenextjs\nimport { ErrorComponent } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\terror\tErrorFenextjs\tno\tundefined\tObjeto de error que contiene el mensaje y otros detalles del error a mostrar.\tuseDataError\tboolean\tno\ttrue\tIndica si se debe incluir el error en el atributo 'data-error' como una cadena JSON.\tuseErrorInput\tboolean\tno\ttrue\tIndica si se debe mostrar informaci√≥n adicional sobre una entrada relacionada con el error, si est√° disponible.\tclassName\tstring\tno\t''\tClase CSS para personalizar el estilo del componente.\tchildren\tReactNode\tno\tundefined\tContenido que se muestra dentro del componente si no se proporciona un error.","errorfenextjs#ErrorFenextjs":"El error que se pasa al componente tiene distintos atributos:\nPropiedad\tTipo\tDescripci√≥n\tcode\tErrorCode\tC√≥digo del error\tmessage\tstring\tMensaje interno del error\tmsg\tmsg\tMensaje del error\tinput\tinput\tInput del error\tdata\tany\tData del error","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"Uso b√°sico\n<ErrorComponent>Error inesperado</ErrorComponent>\nError con mensaje personalizado\n<ErrorComponent error={new ErrorFenextjs({ msg: \"Ocurri√≥ un error\" })} />\nError con entrada relacionada\n<ErrorComponent\n  error={new ErrorFenextjs({ msg: \"Error en el campo\", input: \"email\" })}\n/>"}},"/components/form":{"title":"Form","data":{"":"El componente Form es un formulario que permite capturar datos del usuario. Ofrece funcionalidad para manejar el env√≠o de formularios, opcionalmente realizar una acci√≥n al enviarlo y manejar un estado deshabilitado.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente Form, se puede hacer desde fenextjs\nimport { Form } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tid\tstring\tno\t''\tID √∫nico para identificar el formulario, usado para personalizar la acci√≥n en eventos.\tonSubmit\t() => Promise<void>\tno\tasync () => {}\tFunci√≥n personalizada que se ejecuta al enviar el formulario. Debe ser una funci√≥n as√≠ncrona que realice la acci√≥n de env√≠o.\tdisabled\tboolean\tno\ttrue\tIndica si el formulario est√° deshabilitado, lo que previene la acci√≥n de env√≠o.\tclassName\tstring\tno\t''\tClase CSS para personalizar el estilo del formulario.\tchildren\tReactNode\tno\tundefined\tContenido o elementos dentro del formulario, t√≠picamente los campos de entrada.","eventos-de-tracking#Eventos de tracking":"Cuando el formulario tiene un 'id' definido y se env√≠a correctamente, se registra un evento en el Data Layer.\nEvento\tDescripci√≥n\tform-{id}\tEvento de tracking cuando se env√≠a el formulario con un 'id' definido.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"Formulario b√°sico\n<Form>\n  <InputText name=\"example\" />\n</Form>\nFormulario con acci√≥n personalizada\n<Form\n  onSubmit={async () => {\n    console.log(\"Formulario enviado\");\n  }}\n>\n  <InputText name=\"example\" />\n</Form>\nFormulario deshabilitado\n<Form disabled={true}>\n  <InputText name=\"example\" />\n</Form>"}},"/components/gridgallery":{"title":"GridGallery","data":{"":"El componente GridGallery permite mostrar una galer√≠a de elementos en un formato de cuadr√≠cula, con soporte para clases personalizadas en los contenedores y los elementos.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente GridGallery, se puede hacer desde fenextjs\nimport { GridGallery } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\titems\tReactNode[]\ts√≠\t\tLista de elementos que se mostrar√°n dentro de la galer√≠a.\tclassName\tstring\tno\t''\tClase CSS para personalizar el contenedor principal de la galer√≠a.\tclassNameItem\tstring\tno\t''\tClase CSS para personalizar cada uno de los elementos de la galer√≠a.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"Uso b√°sico\n<GridGallery items={[<div>Item 1</div>, <div>Item 2</div>]} />\nGaler√≠a con clases personalizadas\n<GridGallery\n  className=\"mi-galeria\"\n  classNameItem=\"mi-item\"\n  items={[<div>Item 1</div>, <div>Item 2</div>]}\n/>"}},"/components/header/itemmenu":{"title":"ItemMenu","data":{"":"El componente ItemMenu representa un elemento de men√∫ que puede contener enlaces, iconos y submen√∫s colapsables. Es √∫til para crear men√∫s anidados o navegaciones que requieren interacci√≥n jer√°rquica.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente ItemMenu, se puede hacer desde fenextjs\nimport { ItemMenu } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\turl\tstring\ts√≠\t\tURL de la p√°gina asociada al √≠tem del men√∫.\ttext\tReactNode\ts√≠\t\tTexto que representa el √≠tem del men√∫.\ticon\tReactNode\tno\t<></>\tIcono a mostrar junto al texto del men√∫.\tsubItems\tArray<Omit<ItemMenuProps, '_t'>>\tno\t\tSubmen√∫s anidados dentro de este √≠tem de men√∫.\tdefaultActive\tboolean\tno\tfalse\tIndica si el submen√∫ est√° activo por defecto.\ticonArrow\tReactNode\tno\t<Arrow />\tIcono de flecha que indica la expansi√≥n del submen√∫.\tnameNumber\tnumber\tno\t1\tN√∫mero de nivel de jerarqu√≠a del √≠tem de men√∫.\ttypeCollapse\t'radio' | 'checkbox'\tno\t\tTipo de comportamiento del colapso en los submen√∫s.\tisLink\tboolean\tno\ttrue\tDetermina si el componente se renderiza como un enlace.\tonClick\tfunction\tno\t\tFunci√≥n que se ejecuta al hacer click en el √≠tem de men√∫.\tclassName\tstring\tno\t''\tClase CSS para el contenedor principal del √≠tem.\tclassNameA\tstring\tno\t''\tClase CSS para el elemento de enlace del √≠tem.\tclassNameIcon\tstring\tno\t''\tClase CSS para el icono del √≠tem.\tclassNameText\tstring\tno\t''\tClase CSS para el texto del √≠tem.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"Uso b√°sico\n<ItemMenu url=\"/home\" text=\"Inicio\" />\n√çtem de men√∫ con submen√∫s\n<ItemMenu\n  url=\"/services\"\n  text=\"Servicios\"\n  subItems={[\n    { url: \"/web\", text: \"Desarrollo Web\" },\n    { url: \"/app\", text: \"Aplicaciones M√≥viles\" },\n  ]}\n/>\n√çtem de men√∫ con icono y colapso activado\n<ItemMenu\n  url=\"/profile\"\n  text=\"Perfil\"\n  icon={<UserIcon />}\n  defaultActive={true}\n/>"}},"/components/img":{"title":"Img","data":{"":"El componente Img renderiza una imagen con soporte para m√∫ltiples resoluciones, capas visuales, y un cargador opcional. Tambi√©n permite definir acciones personalizadas en caso de error o al hacer click sobre la imagen.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente Img, se puede hacer desde fenextjs\nimport { Img } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tsrc\tstring\ts√≠\t\tLa URL de la imagen a mostrar.\talt\tstring\tno\tundefined\tTexto alternativo para la imagen.\tsrcMin1920\tstring\tno\tundefined\tURL de la imagen para resoluciones mayores a 1920px.\tsrcMin1680\tstring\tno\tundefined\tURL de la imagen para resoluciones mayores a 1680px.\tsrcMin1440\tstring\tno\tundefined\tURL de la imagen para resoluciones mayores a 1440px.\tsrcMin1024\tstring\tno\tundefined\tURL de la imagen para resoluciones mayores a 1024px.\tsrcMin992\tstring\tno\tundefined\tURL de la imagen para resoluciones mayores a 992px.\tsrcMin768\tstring\tno\tundefined\tURL de la imagen para resoluciones mayores a 768px.\tsrcMin575\tstring\tno\tundefined\tURL de la imagen para resoluciones mayores a 575px.\timgIf404\tstring\tno\tundefined\tURL de la imagen que se mostrar√° en caso de error de carga.\tlayers\tCSSProperties[]\tno\t[]\tCapas CSS que se aplican como filtros o estilos adicionales a la imagen.\tonErrorImg\t(e: SyntheticEvent<HTMLImageElement, Event>) => void\tno\tundefined\tFunci√≥n personalizada que se ejecuta cuando ocurre un error al cargar la imagen.\tonClick\t() => void\tno\tundefined\tFunci√≥n personalizada que se ejecuta al hacer click en la imagen.\tloader\tboolean\tno\tfalse\tIndica si se debe mostrar un cargador mientras se carga la imagen.\tclassName\tstring\tno\t''\tClase CSS para personalizar el contenedor del componente.\tclassNameImg\tstring\tno\t''\tClase CSS para personalizar la imagen en s√≠.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"Imagen b√°sica\n<Img src=\"/path/to/image.jpg\" alt=\"Descripci√≥n\" />\nImagen con capas\n<Img\n  src=\"/path/to/image.jpg\"\n  layers={[{ opacity: 0.5, mixBlendMode: \"multiply\" }]}\n/>\nImagen con loader y acci√≥n de clic\n<Img\n  src=\"/path/to/image.jpg\"\n  loader={true}\n  onClick={() => alert(\"Imagen clickeada\")}\n/>\nImagen con manejo de error\n<Img src=\"/path/to/image.jpg\" imgIf404=\"/path/to/fallback.jpg\" />"}},"/components/header/menu":{"title":"Men√∫","data":{"":"El componente Menu renderiza una lista de elementos interactivos. Se utiliza para mostrar una estructura de men√∫ con soporte para la funcionalidad de colapsar submen√∫s, √≠conos personalizados y distintos tipos de comportamiento (radio o checkbox).","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente Men√∫, se puede hacer desde fenextjs\nimport { Men√∫ } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\titems\tItemMenuProps[]\tno\t[]\tLista de elementos del men√∫. Cada uno debe cumplir con la interfaz ItemMenuProps.\ticonArrow\tReactNode\tno\t<Arrow />\t√çcono que se muestra para los elementos colapsables del men√∫.\ttypeCollapse\t'radio' | 'checkbox'\tno\tundefined\tTipo de comportamiento para los elementos colapsables del men√∫, ya sea radio o checkbox.\tclassName\tstring\tno\t''\tClase CSS para personalizar el contenedor principal del men√∫.\tdefaultShowSubMenu\tboolean\tno\tfalse\tDetermina si los submen√∫s deben mostrarse por defecto.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"Men√∫ b√°sico\n<Menu\n  items={[\n    { label: \"Home\", link: \"/\" },\n    { label: \"About\", link: \"/about\" },\n  ]}\n/>\nMen√∫ con √≠cono personalizado\n<Menu\n  iconArrow={<CustomIcon />}\n  items={[\n    { label: \"Home\", link: \"/\" },\n    { label: \"Services\", link: \"/services\" },\n  ]}\n/>\nMen√∫ con submen√∫s desplegables\n<Menu\n  defaultShowSubMenu={true}\n  items={[\n    { label: \"Home\", link: \"/\", defaultActive: true },\n    { label: \"Projects\", link: \"/projects\" },\n  ]}\n/>"}},"/components/imggallery":{"title":"ImgGallery","data":{"":"El componente ImgGallery muestra una galer√≠a de im√°genes con la opci√≥n de cargar m√°s im√°genes y visualizar cada imagen en un modal con un deslizador.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente ImgGallery, se puede hacer desde fenextjs\nimport { ImgGallery } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\timgs\tImgProps[]\ts√≠\t\tLista de im√°genes a mostrar en la galer√≠a.\tbuttonShowMoreImg\tOmit<ButtonProps, 'onClick'>\tno\t{ children: 'Show more pictures' }\tPropiedades del bot√≥n para mostrar m√°s im√°genes.\tbuttonHiddenMoreImg\tOmit<ButtonProps, 'onClick'>\tno\t{ children: 'Hidden pictures' }\tPropiedades del bot√≥n para ocultar im√°genes adicionales.\tloader\tboolean\tno\tfalse\tIndica si el componente est√° en estado de carga, mostrando un cargador en lugar de las im√°genes.\tnLoader\tnumber\tno\t5\tN√∫mero de elementos que mostrar√°n el loader mientras se cargan las im√°genes.\tclassName\tstring\tno\t''\tClase CSS para personalizar el contenedor de la galer√≠a.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"Galer√≠a b√°sica\n<ImgGallery imgs={imageList} />\nGaler√≠a con bot√≥n personalizado\n<ImgGallery\n  imgs={imageList}\n  buttonShowMoreImg={{ children: \"Ver m√°s im√°genes\" }}\n/>\nGaler√≠a en estado de carga\n<ImgGallery loader={true} nLoader={3} />"}},"/components/imgslider":{"title":"ImgSlider","data":{"":"El componente ImgSlider permite navegar entre una lista de im√°genes utilizando un sistema de pasos. Se puede controlar el paso actual y navegar entre las im√°genes usando botones de paginaci√≥n.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente ImgSlider, se puede hacer desde fenextjs\nimport { ImgSlider } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\timgs\tImgProps[]\ts√≠\t\tLista de im√°genes que se muestran en el deslizador.\tdefaultStep\tnumber\tno\t0\tPaso inicial en el deslizador de im√°genes.\tstep\tnumber\tno\t\tPaso actual en el deslizador de im√°genes.\tsetStep\t(e: number) => void\tno\t\tFunci√≥n para actualizar el paso actual en el deslizador.\tclassName\tstring\tno\t''\tClase CSS para personalizar el contenedor del deslizador.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"Deslizador b√°sico\n<ImgSlider imgs={imageList} />\nDeslizador con paso controlado\n<ImgSlider imgs={imageList} step={2} setStep={(e) => console.log(e)} />"}},"/components/input/calendar":{"title":"InputCalendar","data":{"":"El componente InputCalendar permite seleccionar fechas o rangos de fechas a trav√©s de un calendario desplegable. Se puede configurar para mostrar m√∫ltiples meses y admite validaciones.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente InputCalendar, se puede hacer desde fenextjs\nimport { InputCalendar } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tnMonthShow\tnumber\tno\t1\tCantidad de meses que se mostrar√°n simult√°neamente en el calendario.\ticon\tReactNode\tno\t<SvgDate />\tIcono que se mostrar√° en el campo de entrada del calendario.\ttype\t'normal' | 'range'\tno\t'normal'\tDefine si el calendario es para una selecci√≥n √∫nica ('normal') o un rango de fechas ('range').\tdefaultValue\tDate\tno\t\tLa fecha predeterminada seleccionada para el modo 'normal'.\tvalue\tDate\tno\t\tLa fecha seleccionada actualmente en el modo 'normal'.\tdefaultValueRange\tDate[]\tno\t\tEl rango de fechas predeterminado para el modo 'range'.\tvalueRange\tDate[]\tno\t\tEl rango de fechas seleccionado actualmente en el modo 'range'.\tonChange\t(d: Date | undefined) => void\tno\t\tFunci√≥n que se ejecuta cuando se selecciona una fecha en el modo 'normal'.\tonChangeRange\t(d: Date[]) => void\tno\t\tFunci√≥n que se ejecuta cuando se selecciona un rango de fechas en el modo 'range'.\tvalidator\tany\tno\t\tValidador personalizado que permite agregar reglas para validar las fechas seleccionadas.\terrorWithIsChange\tboolean\tno\ttrue\tIndica si los errores de validaci√≥n deben mostrarse al cambiar la fecha.\tmin\tDate\tno\t\tFecha m√≠nima seleccionable.\tmax\tDate\tno\t\tFecha m√°xima seleccionable.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"Calendario b√°sico\n<InputCalendar\n  defaultValue={new Date()}\n  onChange={(date) => console.log(date)}\n/>\nCalendario con selecci√≥n de rango\n<InputCalendar\n  type=\"range\"\n  defaultValueRange={[new Date(), new Date()]}\n  onChangeRange={(range) => console.log(range)}\n/>\nCalendario mostrando m√∫ltiples meses\n<InputCalendar\n  nMonthShow={3}\n  defaultValue={new Date()}\n  onChange={(date) => console.log(date)}\n/>"}},"/components/input/card/ccv":{"title":"InputCardCCV","data":{"":"El componente InputCardCCV es un campo de entrada dise√±ado para capturar el C√≥digo de Seguridad (CCV) de una tarjeta de cr√©dito. Este componente asegura que solo se ingresen n√∫meros y limita la longitud a 4 caracteres, facilitando una entrada de datos adecuada y segura para transacciones.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente InputCardCCV, se puede hacer desde fenextjs\nimport { InputCardCCV } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tplaceholder\tstring\tno\t'XXX'\tTexto que se muestra como marcador de posici√≥n en el campo de entrada.\tdisabled\tboolean\tno\tfalse\tIndica si el campo de entrada est√° deshabilitado.\trequired\tboolean\tno\tfalse\tIndica si el campo de entrada es obligatorio.\toptional\tboolean\tno\tfalse\tIndica si el campo de entrada es opcional.\tonChange\tfunction\tno\tundefined\tFunci√≥n que se ejecuta al cambiar el valor del campo de entrada.\tmaxLength\tnumber\tno\t4\tLongitud m√°xima permitida para la entrada, en este caso 4 caracteres. Se establece directamente en el componente.\tregExpReplace\tstring\tno\t''\tCadena utilizada para reemplazar los valores no deseados. Se establece directamente en el componente.\tregExp\tRegExp\tno\t/[^0-9]/g\tExpresi√≥n regular que se utiliza para validar la entrada, permitiendo solo n√∫meros. Se establece directamente en el componente.\tinputMode\tstring\tno\t'numeric'\tModo de entrada para facilitar el ingreso de datos num√©ricos en dispositivos m√≥viles. Se establece directamente en el componente.\ttype\tstring\tno\t'number'\tTipo de entrada del campo, que se establece como n√∫mero. Se establece directamente en el componente.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"B√°sico\n<InputCardCCV />\nInputCardCCV con texto de marcador de posici√≥n personalizado\n<InputCardCCV placeholder=\"Ingresa tu CCV\" />\nInputCardCCV deshabilitado\n<InputCardCCV disabled={true} />\nInputCardCCV con funci√≥n personalizada\n<InputCardCCV onChange={(e) => console.log(e.target.value)} />"}},"/components/input/checkbox":{"title":"InputCheckbox","data":{"":"El componente InputCheckbox es un campo de entrada de tipo checkbox que permite al usuario seleccionar o deseleccionar una opci√≥n. Puede mostrar etiquetas y manejar validaciones, as√≠ como valores personalizados para las opciones activas e inactivas.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente InputCheckbox, se puede hacer desde fenextjs\nimport { InputCheckbox } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tlabel\tReactNode\tno\t''\tEtiqueta que se muestra al lado del checkbox.\tlabelPosition\t'right' | 'left'\tno\t'right'\tPosici√≥n de la etiqueta en relaci√≥n con el checkbox.\tname\tstring\tno\t''\tAtributo name del elemento input checkbox.\tonChange\t(checked: boolean) => void\tno\tundefined\tFunci√≥n que se ejecuta cuando se alterna el checkbox, recibe un valor booleano que indica si est√° seleccionado.\tdefaultValue\tboolean\tno\tfalse\tValor predeterminado del checkbox cuando se renderiza por primera vez.\tvalue\tboolean\tno\tundefined\tValor controlado del checkbox.\tdisabled\tboolean\tno\tfalse\tIndica si el checkbox est√° deshabilitado.\tonValidateCheck\t() => Promise<void> | void\tno\tundefined\tFunci√≥n que se ejecuta para validar el checkbox.\toptional\tboolean\tno\tfalse\tIndica si el checkbox es opcional.\toptionalText\tstring\tno\t'(optional)'\tTexto que se muestra si el checkbox es opcional.\trequired\tboolean\tno\tfalse\tIndica si el checkbox es obligatorio.\trequiredText\tstring\tno\t'*'\tTexto que se muestra si el checkbox es obligatorio.\tonActive\t() => void\tno\tundefined\tFunci√≥n que se ejecuta cuando el checkbox se activa.\tonInactive\t() => void\tno\tundefined\tFunci√≥n que se ejecuta cuando el checkbox se desactiva.\tvalueActive\tVT\tno\tundefined\tValor a pasar cuando el checkbox se activa.\tvalueInactive\tVF\tno\tundefined\tValor a pasar cuando el checkbox se desactiva.\ticon\tReactNode\tno\t<Check />\t√çcono que se muestra junto al checkbox.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"B√°sico\n<InputCheckbox label=\"Acepto los t√©rminos y condiciones\" />\nCheckbox deshabilitado\n<InputCheckbox label=\"No puedo seleccionar este\" disabled={true} />\nCheckbox obligatorio\n<InputCheckbox label=\"Este checkbox es obligatorio\" required={true} />\nCheckbox opcional con texto\n<InputCheckbox\n  label=\"Este es opcional\"\n  optional={true}\n  optionalText=\"(opcional)\"\n/>"}},"/components/input/card/expdate":{"title":"InputCardExpDate","data":{"":"El componente InputCardExpDate es un campo de entrada dise√±ado para capturar la fecha de expiraci√≥n de una tarjeta de cr√©dito en el formato MM/YY. Este componente asegura que la entrada sea v√°lida y maneja la l√≥gica para convertir entre el texto ingresado y los datos estructurados de mes y a√±o.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente InputCardExpDate, se puede hacer desde fenextjs\nimport { InputCardExpDate } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tdefaultValue\tInputCardExpDateDataProps\tno\t{}\tValor predeterminado del componente, que incluye el mes y el a√±o de expiraci√≥n de la tarjeta.\tvalue\tInputCardExpDateDataProps\tno\t{}\tValor controlado del componente, que debe incluir el mes y el a√±o de expiraci√≥n.\tonChange\t(data: InputCardExpDateDataProps) => void\tno\tundefined\tFunci√≥n que se ejecuta cuando los datos del componente cambian, proporcionando el mes y el a√±o como objeto.\tmaxExpDateLength\tnumber\tno\t4\tLongitud m√°xima permitida para la entrada de la fecha de expiraci√≥n. Se establece como 4 para MMYY.\tplaceholder\tstring\tno\t'MM/YY'\tTexto que se muestra como marcador de posici√≥n en el campo de entrada.\tdisabled\tboolean\tno\tfalse\tIndica si el campo de entrada est√° deshabilitado.\trequired\tboolean\tno\tfalse\tIndica si el campo de entrada es obligatorio.\terror\tstring | undefined\tno\tundefined\tMensaje de error que se muestra si la validaci√≥n falla.\tclassName\tstring\tno\t''\tClase CSS para personalizar el estilo del componente.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"B√°sico\n<InputCardExpDate />\nInputCardExpDate con valor predeterminado\n<InputCardExpDate defaultValue={{ month: 12, year: 23 }} />\nInputCardExpDate controlado\n<InputCardExpDate\n  value={{ month: 11, year: 25 }}\n  onChange={(data) => console.log(data)}\n/>\nInputCardExpDate deshabilitado\n<InputCardExpDate disabled={true} />"}},"/components/input/card/number":{"title":"InputCardNumber","data":{"":"El componente InputCardNumber es un campo de entrada dise√±ado para capturar el n√∫mero de una tarjeta de cr√©dito. Este componente formatea autom√°ticamente la entrada del n√∫mero en grupos de cuatro d√≠gitos y muestra el icono correspondiente al tipo de tarjeta detectada.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente InputCardNumber, se puede hacer desde fenextjs\nimport { InputCardNumber } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tdefaultValue\tstring\tno\t''\tValor predeterminado del componente, que representa el n√∫mero de tarjeta.\tvalue\tstring\tno\t''\tValor controlado del componente, que representa el n√∫mero de tarjeta.\tonChange\t(value: string) => void\tno\tundefined\tFunci√≥n que se ejecuta cuando el valor del componente cambia, proporcionando el n√∫mero de tarjeta como cadena.\tmaxNumberLength\tnumber\tno\t19\tLongitud m√°xima permitida para la entrada del n√∫mero de tarjeta. El valor m√≠nimo es 15.\tdisabled\tboolean\tno\tfalse\tIndica si el campo de entrada est√° deshabilitado.\trequired\tboolean\tno\tfalse\tIndica si el campo de entrada es obligatorio.\terror\tstring | undefined\tno\tundefined\tMensaje de error que se muestra si la validaci√≥n falla.\tclassName\tstring\tno\t''\tClase CSS para personalizar el estilo del componente.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"B√°sico\n<InputCardNumber />\nInputCardNumber con valor predeterminado\n<InputCardNumber defaultValue=\"1234 5678 9012 3456\" />\nInputCardNumber controlado\n<InputCardNumber\n  value=\"4111 1111 1111 1111\"\n  onChange={(number) => console.log(number)}\n/>\nInputCardNumber deshabilitado\n<InputCardNumber disabled={true} />"}},"/components/input/color":{"title":"InputColor","data":{"":"El componente InputColor permite a los usuarios seleccionar un color mediante un selector de color. Es √∫til para aplicaciones que requieren la personalizaci√≥n de colores, como editores de im√°genes, personalizaci√≥n de temas y formularios de dise√±o.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente InputColor, se puede hacer desde fenextjs\nimport { InputColor } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tdefaultValue\tstring\tno\t''\tValor predeterminado del selector de color cuando se renderiza por primera vez.\tvalue\tstring\tno\tundefined\tValor del selector de color, si se proporciona, anula el valor predeterminado.\tonChange\t(color: string) => void\tno\tundefined\tFunci√≥n que se ejecuta cuando el color seleccionado cambia.\tclassName\tstring\tno\t''\tClase CSS adicional para el contenedor del selector de color.\tdisabled\tboolean\tno\tfalse\tIndica si el selector de color est√° deshabilitado.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"Selector de color por defecto\n<InputColor defaultValue=\"#ff0000\" onChange={(color) => console.log(color)} />\nSelector de color deshabilitado\n<InputColor defaultValue=\"#00ff00\" disabled={true} />"}},"/components/input/code":{"title":"InputCode","data":{"":"El componente InputCode es un campo de entrada dise√±ado para ingresar c√≥digos de verificaci√≥n o c√≥digos de un solo uso. Presenta un dise√±o que resalta cada car√°cter ingresado, ideal para situaciones como la autenticaci√≥n de dos factores.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente InputCode, se puede hacer desde fenextjs\nimport { InputCode } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tmaxLength\tnumber\ts√≠\t1\tN√∫mero m√°ximo de caracteres que se pueden ingresar en el input.\tdefaultValue\tstring\tno\t''\tValor predeterminado del input cuando se renderiza por primera vez.\tonChange\t(value: string) => void\tno\tundefined\tFunci√≥n que se ejecuta cuando se cambia el valor del input.\tplaceholder\tstring\tno\t\tArray de placeholders que se muestran en cada campo del input.\tclassName\tstring\tno\t''\tClase CSS adicional para el input.\tdisabled\tboolean\tno\tfalse\tIndica si el input est√° deshabilitado.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"C√≥digo de verificaci√≥n\n<InputCode maxLength={6} placeholder={\"XXXXXX\"} />\nInput deshabilitado\n<InputCode maxLength={4} disabled={true} />"}},"/components/input/date":{"title":"InputDate","data":{"":"El componente InputDate permite a los usuarios seleccionar una fecha utilizando un campo de entrada de fecha. Puede manejar diferentes tipos de entrada de fecha, como fecha, mes, semana y hora, y es √∫til en formularios donde se requiere la selecci√≥n de fechas.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente InputDate, se puede hacer desde fenextjs\nimport { InputDate } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tdefaultValue\tDate\tno\tundefined\tValor predeterminado del campo de entrada de fecha.\tvalue\tDate\tno\tundefined\tValor actual del campo de entrada de fecha. Si se proporciona, anula el valor predeterminado.\ttype\tTypeDate\tno\t'date'\tTipo de campo de entrada. Puede ser 'date', 'month', 'week', o 'time'.\tmin\tDate\tno\tundefined\tFecha m√≠nima v√°lida que se puede seleccionar.\tmax\tDate\tno\tundefined\tFecha m√°xima v√°lida que se puede seleccionar.\tonChange\t(date: Date | undefined) => void\tno\tundefined\tFunci√≥n que se ejecuta cuando la fecha seleccionada cambia.\tclassNameInputDate\tstring\tno\t''\tClase CSS adicional para el campo de entrada de fecha.\ticon\tReactNode\tno\t<SVGDate />\t√çcono que se muestra junto al campo de entrada de fecha.\ticonPos\t'left' | 'right'\tno\t'left'\tPosici√≥n del √≠cono respecto al campo de entrada.\tvalidator\tFenextjsValidator\tno\tundefined\tValidador opcional para validar la fecha ingresada.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"Selector de fecha por defecto\n<InputDate defaultValue={new Date()} onChange={(date) => console.log(date)} />\nSelector de mes\n<InputDate type=\"month\" onChange={(date) => console.log(date)} />\nSelector de hora\n<InputDate type=\"time\" onChange={(date) => console.log(date)} />\nSelector de fecha deshabilitado\n<InputDate defaultValue={new Date()} disabled={true} />"}},"/components/input/daterange":{"title":"InputDateRange","data":{"":"El componente InputDateRange permite a los usuarios seleccionar un rango de fechas utilizando dos campos de entrada de fecha. Es √∫til para formularios donde se requiere seleccionar un inicio y un final de un per√≠odo de tiempo.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente InputDateRange, se puede hacer desde fenextjs\nimport { InputDateRange } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tdefaultValue\t[Date, Date]\tno\tundefined\tValor predeterminado del rango de fechas.\tvalue\t[Date, Date]\tno\tundefined\tValor actual del rango de fechas. Si se proporciona, anula el valor predeterminado.\tonChange\t(value: [Date, Date]) => void\tno\tundefined\tFunci√≥n que se ejecuta cuando el rango de fechas cambia.\tpropsStart\tInputDateBaseProps\tno\t{}\tProps adicionales para el campo de fecha de inicio.\tpropsEnd\tInputDateBaseProps\tno\t{}\tProps adicionales para el campo de fecha de fin.\tlabel\tstring\tno\t''\tEtiqueta que se muestra para el campo de rango de fechas.\tclassNameInputDateRange\tstring\tno\t''\tClase CSS adicional para el contenedor del rango de fechas.\tclassNameInputDateRangeContentInputDate\tstring\tno\t''\tClase CSS adicional para el contenido del campo de fecha en el rango.\toptional\tboolean\tno\tfalse\tIndica si el campo es opcional.\toptionalText\tstring\tno\t'(optional)'\tTexto que se muestra si el campo es opcional.\trequired\tboolean\tno\tfalse\tIndica si el campo es obligatorio.\trequiredText\tstring\tno\t'*'\tTexto que se muestra si el campo es obligatorio.\tmin\tDate\tno\tundefined\tFecha m√≠nima v√°lida para ambos campos de fecha.\tmax\tDate\tno\tundefined\tFecha m√°xima v√°lida para ambos campos de fecha.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"Selector de rango de fechas por defecto\n<InputDateRange\n  defaultValue={[new Date(), new Date()]}\n  onChange={(range) => console.log(range)}\n/>\nSelector de rango de fechas con validaci√≥n\n<InputDateRange\n  value={[startDate, endDate]}\n  onChange={(range) => validateRange(range)}\n/>\nSelector de rango de fechas deshabilitado\n<InputDateRange defaultValue={[new Date(), new Date()]} disabled={true} />"}},"/components/input/file":{"title":"InputFile","data":{"":"El componente InputFile permite a los usuarios seleccionar y subir archivos desde su dispositivo. Admite validaciones como tipos de archivo permitidos y tama√±o m√°ximo de archivo.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente InputFile, se puede hacer desde fenextjs\nimport { InputFile } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\taccept\tstring[]\tno\t[]\tTipos de archivo permitidos para la entrada. Ejemplo: ['jpg', 'png']\tdefaultValue\tFileProps\tno\t{ fileData: '', text: '' }\tValor predeterminado del archivo. Usado para establecer un archivo inicial.\tonChange\t(v: FileProps) => void\tno\tundefined\tFunci√≥n que se ejecuta cuando se selecciona un archivo.\tonChangeProgress\t(v: number) => void\tno\tundefined\tFunci√≥n que se ejecuta al actualizar el progreso de la carga.\tonChangeError\t(v: ErrorProps | undefined) => void\tno\tundefined\tFunci√≥n que se ejecuta cuando hay un error durante la carga.\tonUploadFile\t(data: InputFileUploadDataProps) => Promise<FileProps>\tno\tundefined\tFunci√≥n que se ejecuta para manejar la carga del archivo.\tclearAfterUpload\tboolean\tno\tfalse\tIndica si se debe limpiar el input despu√©s de una carga √©xitosa.\tMAX_SIZE_FILE\tnumber\tno\t5000000\tTama√±o m√°ximo del archivo en bytes que se puede subir.\tparseProgress\t(progres: number) => any\tno\t(e) => e\tFunci√≥n para analizar el progreso de la carga.\tdisabled\tboolean\tno\tfalse\tIndica si el input de archivo est√° deshabilitado.\ttextMaxSizeFile\tstring\tno\t'File max size'\tTexto que se muestra al superar el tama√±o m√°ximo permitido.\tclassName\tstring\tno\t''\tClase CSS para el componente principal.\tclassNameLabel\tstring\tno\t''\tClase CSS para la etiqueta del componente.\tclassNameContent\tstring\tno\t''\tClase CSS para el contenido del componente.\tclassNameInput\tstring\tno\t''\tClase CSS para el input de archivo.\tclassNameError\tstring\tno\t''\tClase CSS para el mensaje de error.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"Selector de archivos con validaci√≥n de tipo\n<InputFile accept={[\"jpg\", \"png\"]} onChange={(file) => console.log(file)} />\nSelector de archivos con tama√±o m√°ximo\n<InputFile\n  MAX_SIZE_FILE={2000000}\n  textMaxSizeFile=\"El archivo supera el l√≠mite de tama√±o.\"\n  onChange={(file) => console.log(file)}\n/>\nSelector de archivos deshabilitado\n<InputFile disabled={true} onChange={(file) => console.log(file)} />"}},"/components/input/gallery":{"title":"InputGallery","data":{"":"El componente InputGallery permite a los usuarios cargar y gestionar m√∫ltiples im√°genes a trav√©s de una interfaz de galer√≠a. Incluye opciones para a√±adir y eliminar im√°genes.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente InputGallery, se puede hacer desde fenextjs\nimport { InputGallery } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tdefaultValue\tFileProps[]\tno\t[]\tValor por defecto que se muestra en la galer√≠a. Se espera un array de objetos FileProps.\tvalue\tFileProps[]\tno\tundefined\tValor controlado para la galer√≠a, que reemplaza el defaultValue si se proporciona.\ttextBtn\tstring\tno\t'Add More Images'\tTexto que se muestra en el bot√≥n para a√±adir m√°s im√°genes.\tclassName\tstring\tno\t''\tClase CSS para el componente.\tclassNameContentButton\tstring\tno\t''\tClase CSS para el contenedor del bot√≥n.\tclassNameButton\tButtonClassProps\tno\t{}\tClase CSS espec√≠fica para el bot√≥n.\tonChange\t(items: FileProps[]) => void\tno\tundefined\tFunci√≥n que se ejecuta cuando la lista de im√°genes cambia.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"Galer√≠a de im√°genes b√°sica\n<InputGallery\n  onChange={(items) => {\n    console.log(items);\n  }}\n/>\nGaler√≠a de im√°genes con valores predefinidos\n<InputGallery\n  defaultValue={[{ fileData: \"url1\", text: \"Image 1\" }]}\n  onChange={(items) => {\n    console.log(items);\n  }}\n/>\nGaler√≠a con bot√≥n personalizado\n<InputGallery\n  textBtn=\"Upload New Image\"\n  onChange={(items) => {\n    console.log(items);\n  }}\n/>"}},"/components/input/filestatus":{"title":"InputFileStatus","data":{"":"El componente InputFileStatus combina la funcionalidad de carga de archivos con un estado visual, mostrando diferentes iconos y mensajes seg√∫n el estado del archivo (Aprobado, Rechazado, Pendiente).","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente InputFileStatus, se puede hacer desde fenextjs\nimport { InputFileStatus } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\ttitle\tReactNode\tno\t'Drag and drop here'\tT√≠tulo del componente que se muestra cuando no hay archivos cargados.\ttext\tReactNode\tno\t'Drag and drop your file or template here.'\tTexto que se muestra para guiar al usuario sobre la acci√≥n que debe realizar.\ticon\tReactNode\tno\t<Upload2 />\t√çcono que se muestra en el componente.\tbtn\tReactNode\tno\t'Choose File'\tTexto o contenido del bot√≥n de carga.\ticonLoader\tReactNode\tno\t<LoaderSpinner />\t√çcono que se muestra mientras se est√° cargando el archivo.\tclassName\tstring\tno\t''\tClase CSS para el componente.\tonUploadFile\t(data: FileProps) => Promise<FileProps>\ts√≠\tundefined\tFunci√≥n que se ejecuta para manejar la carga del archivo.\tcontentByStatus\tInputFileStatusContentByStatus\tno\t{}\tContenido espec√≠fico para cada estado del archivo, que incluye t√≠tulo, √≠cono y etiqueta.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"Carga de archivo con estado de √©xito\n<InputFileStatus\n  onUploadFile={async (file) => {\n    /* L√≥gica de carga */\n    return file;\n  }}\n/>\nCarga de archivo con gesti√≥n de errores\n<InputFileStatus\n  onUploadFile={async (file) => {\n    throw new Error(\"Error de carga\");\n  }}\n/>\nComponente de carga con bot√≥n personalizado\n<InputFileStatus\n  btn={<Button>Subir Archivo</Button>}\n  onUploadFile={async (file) => {\n    /* L√≥gica de carga */\n    return file;\n  }}\n/>"}},"/components/input/google/autocomplete":{"title":"InputGoogleAutocomplete","data":{"":"El componente InputGoogleAutocomplete permite la entrada de direcciones utilizando la funcionalidad de autocompletado de Google, con validaciones y manejo de errores.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente InputGoogleAutocomplete, se puede hacer desde fenextjs\nimport { InputGoogleAutocomplete } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tdefaultValueJsonString\tstring\tno\tundefined\tValor predeterminado en formato JSON string para la direcci√≥n.\tvalueJsonString\tstring\tno\tundefined\tValor actual en formato JSON string para la direcci√≥n.\tonChangeJsonString\t(value: string) => void\tno\tundefined\tFunci√≥n que se ejecuta cuando el valor en formato JSON string cambia.\tdefaultValue\tAddressGoogle | undefined\tno\tundefined\tEl valor predeterminado del input.\tvalue\tAddressGoogle | undefined\tno\tundefined\tEl valor actual del input.\tonChange\t(value: AddressGoogle | undefined) => void\tno\tundefined\tFunci√≥n que se ejecuta cuando cambia el valor de la direcci√≥n.\tparseJson_to_String\t(value: AddressGoogle | undefined) => string\tno\tparseAddress_to_String\tFunci√≥n que convierte el objeto de direcci√≥n a string.\tparseString_to_Json\t(value: string) => AddressGoogle | undefined\tno\tparseString_to_Address\tFunci√≥n que convierte un string a un objeto de direcci√≥n.\tclassName\tstring\tno\t''\tClase CSS para personalizar el contenedor del input.\tvalidator\tFenextjsValidatorClass<AddressGoogle>\tno\tundefined\tInstancia de FenextjsValidator para validaciones personalizadas del input.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"InputGoogleAutocomplete b√°sico\n<InputGoogleAutocomplete />\nInputGoogleAutocomplete con validaci√≥n\n<InputGoogleAutocomplete validator={customValidator} />\nInputGoogleAutocomplete con valor predeterminado\n<InputGoogleAutocomplete defaultValueJsonString='{\"formatted_address\": \"1600 Amphitheatre Parkway, Mountain View, CA\"}' />\nInputGoogleAutocomplete con funci√≥n personalizada\n<InputGoogleAutocomplete onChangeJsonString={(value) => console.log(value)} />"}},"/components/input/google/loadscript":{"title":"InputGoogleLoadScript","data":{"":"El componente InputGoogleLoadScript se encarga de cargar el script de Google Maps y proporciona validaci√≥n de la clave API de Google.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente InputGoogleLoadScript, se puede hacer desde fenextjs\nimport { InputGoogleLoadScript } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tgoogleMapsApiKey\tstring\tno\tprocess.env['NEXT_PUBLIC_GOOGLE_KEY']\tClave API de Google Maps. Si no se proporciona, se usar√° la clave API predeterminada en las variables de entorno.\tchildren\tReactNode\tno\tundefined\tLos elementos hijos que se renderizar√°n dentro del componente una vez que el script de Google Maps haya sido cargado correctamente.\tclassName\tstring\tno\t''\tClase CSS para personalizar el contenedor del componente.\t_t\tunknown\tno\tundefined\tPropiedades de traducci√≥n para mensajes de error u otros textos.\tuseT\tunknown\tno\tundefined\tHook de traducci√≥n para manejar cadenas traducibles dentro del componente.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"InputGoogleLoadScript b√°sico\n<InputGoogleLoadScript googleMapsApiKey=\"YOUR_GOOGLE_MAPS_API_KEY\">\n  <YourGoogleMapsComponent />\n</InputGoogleLoadScript>\nInputGoogleLoadScript con validaci√≥n\n<InputGoogleLoadScript>\n  <YourGoogleMapsComponent />\n</InputGoogleLoadScript>\nInputGoogleLoadScript con manejo de errores\n<InputGoogleLoadScript googleMapsApiKey=\"INVALID_KEY\">\n  <YourGoogleMapsComponent />\n</InputGoogleLoadScript>"}},"/components/input/google/maps":{"title":"InputGoogleMaps","data":{"":"El componente InputGoogleMaps permite mostrar un mapa de Google Maps con marcadores, opciones de centrado, ajustes de l√≠mites y renderizaci√≥n de rutas entre puntos.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente InputGoogleMaps, se puede hacer desde fenextjs\nimport { InputGoogleMaps } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tmapContainerStyle\tobject\tno\t{ width: '100%', height: '100dvh' }\tEstilo CSS para el contenedor del mapa.\tmarkers\tMarkerProps[]\tno\tundefined\tLista de marcadores que se mostrar√°n en el mapa.\tuseLoadCenterWithMarker\tboolean\tno\ttrue\tDetermina si el mapa debe centrarse autom√°ticamente bas√°ndose en los marcadores proporcionados.\tuseLoadFitBoundsWithMarker\tboolean\tno\ttrue\tDetermina si el mapa debe ajustar los l√≠mites para mostrar todos los marcadores.\tuseLoadDirectionsWithMarker\tboolean\tno\tfalse\tDetermina si se debe renderizar una ruta (direcciones) entre los marcadores.\tshowDirectionsWaypoints\tboolean\tno\tfalse\tMuestra los puntos intermedios (waypoints) en la ruta cuando se renderiza la direcci√≥n.\tcenter\t{ lat: number; lng: number; }\tno\t{ lat: 0, lng: 0 }\tCoordenadas para centrar el mapa inicialmente.\tonBoundsChanged\t(bounds: google.maps.LatLngBounds | undefined) => void\tno\tundefined\tFunci√≥n que se ejecuta cuando los l√≠mites del mapa cambian.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"Mapa b√°sico con marcadores\n<InputGoogleMaps\n  markers={[\n    { position: { lat: 40.7128, lng: -74.006 } }, // Nueva York\n    { position: { lat: 34.0522, lng: -118.2437 } }, // Los √Ångeles\n  ]}\n/>\nMapa centrado en un punto espec√≠fico\n<InputGoogleMaps\n  center={{ lat: 51.5074, lng: -0.1278 }} // Londres\n  useLoadCenterWithMarker={false}\n/>\nMapa con ajuste de l√≠mites autom√°tico\n<InputGoogleMaps\n  markers={[\n    { position: { lat: -33.8688, lng: 151.2093 } }, // S√≠dney\n    { position: { lat: -37.8136, lng: 144.9631 } }, // Melbourne\n  ]}\n  useLoadFitBoundsWithMarker={true}\n/>\nMapa con ruta entre marcadores\n<InputGoogleMaps\n  markers={[\n    { position: { lat: 40.7128, lng: -74.006 } }, // Nueva York\n    { position: { lat: 41.8781, lng: -87.6298 } }, // Chicago\n    { position: { lat: 34.0522, lng: -118.2437 } }, // Los √Ångeles\n  ]}\n  useLoadDirectionsWithMarker={true}\n  showDirectionsWaypoints={true}\n/>\nMapa con estilos personalizados\n<InputGoogleMaps\n  markers={[{ position: { lat: 48.8566, lng: 2.3522 } }]} // Par√≠s\n  mapContainerStyle={{ width: \"600px\", height: \"400px\" }}\n/>"}},"/components/input/img":{"title":"InputImg","data":{"":"El componente InputImg permite a los usuarios cargar una √∫nica imagen y muestra una vista previa de la imagen seleccionada. Tambi√©n incluye la opci√≥n de eliminar la imagen cargada.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente InputImg, se puede hacer desde fenextjs\nimport { InputImg } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\ttitle\tReactNode\tno\t'Add Image'\tT√≠tulo que se muestra en el componente.\ttext\tReactNode\tno\t'Drag Image'\tTexto que se muestra en el componente para guiar al usuario.\ticon\tReactNode\tno\t<SvgImg />\t√çcono que se muestra en el componente.\tonRemove\t() => void\tno\tundefined\tFunci√≥n que se ejecuta cuando se elimina la imagen.\tclassName\tstring\tno\t''\tClase CSS para el componente.\tclassNameContentIcon\tstring\tno\t''\tClase CSS para el contenedor del √≠cono.\tclassNameText\tOmit<TextProps, 'children'>\tno\t{}\tClase CSS para el texto.\tclassNameTitle\tOmit<TitleProps, 'children'>\tno\t{}\tClase CSS para el t√≠tulo.\tclassNameProgress\tstring\tno\t''\tClase CSS para la barra de progreso.\tclassNameRemove\tstring\tno\t''\tClase CSS para el bot√≥n de eliminar.\tclassNameImg\tstring\tno\t''\tClase CSS para la imagen mostrada.\tdefaultValue\tFileProps\tno\t{ fileData: '', text: '' }\tValor por defecto que se mostrar√° en el componente.\tparseProgress\t(e: number) => string\tno\tImging . . . ${e.toFixed(0)}%\tFunci√≥n que formatea el texto de progreso durante la carga.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"Carga de una imagen simple\n<InputImg\n  onChange={(data) => {\n    console.log(data);\n  }}\n/>\nCarga de una imagen con t√≠tulo y texto personalizado\n<InputImg\n  title=\"Sube tu Imagen\"\n  text=\"Arrastra la imagen aqu√≠\"\n  onChange={(data) => {\n    console.log(data);\n  }}\n/>\nCarga de imagen con funci√≥n de eliminaci√≥n\n<InputImg\n  onRemove={() => {\n    console.log(\"Imagen eliminada\");\n  }}\n  onChange={(data) => {\n    console.log(data);\n  }}\n/>"}},"/components/input/number":{"title":"InputNumber","data":{"":"El componente InputNumber permite a los usuarios ingresar un valor num√©rico con opciones para aumentar o disminuir el valor usando botones, as√≠ como la posibilidad de validaci√≥n.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente InputNumber, se puede hacer desde fenextjs\nimport { InputNumber } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tvalue\tnumber | ''\tno\t''\tValor actual del input. Puede ser un n√∫mero o una cadena vac√≠a.\tdefaultValue\tnumber | ''\tno\t''\tValor inicial del input.\tonChange\t(v: number | '') => void\tno\tundefined\tFunci√≥n que se ejecuta al cambiar el valor del input.\tonChangeValidate\t(v: number | '') => void\tno\tundefined\tFunci√≥n que se ejecuta al perder el foco y despu√©s de validar el valor.\tmin\tnumber\tno\tundefined\tValor m√≠nimo permitido para el input.\tmax\tnumber\tno\tundefined\tValor m√°ximo permitido para el input.\tuseBtnIncreaseDecrease\tboolean\tno\tfalse\tDetermina si se deben mostrar los botones de aumento/disminuci√≥n.\tdisabledScroll\tboolean\tno\tfalse\tDeshabilita el desplazamiento del rat√≥n en el input.\tclassName\tstring\tno\t''\tClase CSS para el componente.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"Uso b√°sico del componente InputNumber\n<InputNumber onChange={(value) => console.log(value)} />\nUso de InputNumber con validaci√≥n\n<InputNumber onChangeValidate={(value) => console.log(\"Validated:\", value)} />\nUso de InputNumber con l√≠mites\n<InputNumber min={0} max={100} onChange={(value) => console.log(value)} />\nUso de InputNumber con botones de aumento/disminuci√≥n\n<InputNumber\n  useBtnIncreaseDecrease={true}\n  onChange={(value) => console.log(value)}\n/>"}},"/components/input/numbercount":{"title":"InputNumberCount","data":{"":"El componente InputNumberCount permite la entrada de n√∫meros con soporte para validaciones, s√≠mbolos de inicio y final, y controles de m√≠nimo y m√°ximo.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente InputNumberCount, se puede hacer desde fenextjs\nimport { InputNumberCount } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tsymbolInit\tstring\tno\t'$'\tEl s√≠mbolo que se muestra al inicio del valor num√©rico en el campo.\tsymbolFinal\tstring\tno\t''\tEl s√≠mbolo que se muestra al final del valor num√©rico en el campo.\tdefaultValue\tnumber | ''\tno\t''\tEl valor predeterminado del input.\tvalue\tnumber | ''\tno\tundefined\tEl valor actual del input.\tonChange\t(v: number | '') => void\tno\tundefined\tFunci√≥n que se ejecuta cuando el valor del input cambia.\tmin\tnumber\tno\t-Infinity\tEl valor m√≠nimo permitido para el input.\tmax\tnumber\tno\tInfinity\tEl valor m√°ximo permitido para el input.\taplyMin\tboolean\tno\tfalse\tSi se debe aplicar la restricci√≥n m√≠nima.\taplyMax\tboolean\tno\ttrue\tSi se debe aplicar la restricci√≥n m√°xima.\tminError\tstring\tno\tundefined\tMensaje de error cuando el valor es menor que el m√≠nimo permitido.\tmaxError\tstring\tno\tundefined\tMensaje de error cuando el valor es mayor que el m√°ximo permitido.\tvalidator\tFenextjsValidatorClass<number>\tno\tundefined\tInstancia de FenextjsValidator para validaciones personalizadas.\toptionsParseNumber\tIntl.NumberFormatOptions\tno\tundefined\tOpciones para formatear el n√∫mero.\toptionsParseNumberDefault\tIntl.NumberFormatOptions\tno\tundefined\tOpciones para formatear el n√∫mero inicialmente que se proporciona por defultValue.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"InputNumberCount b√°sico\n<InputNumberCount />\nInputNumberCount con s√≠mbolos personalizados\n<InputNumberCount symbolInit=\"‚Ç¨\" symbolFinal=\"EUR\" />\nInputNumberCount con valores m√≠nimo y m√°ximo\n<InputNumberCount min={10} max={100} />\nInputNumberCount con validaci√≥n personalizada\n<InputNumberCount validator={customValidator} />"}},"/components/input/password":{"title":"InputPassword","data":{"":"El componente InputPassword es un campo de entrada de contrase√±a que permite alternar entre la visibilidad del texto y el modo de contrase√±a mediante un √≠cono de ojo.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente InputPassword, se puede hacer desde fenextjs\nimport { InputPassword } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tid\tstring\tno\t''\tID del campo de entrada.\tname\tstring\tno\t''\tNombre del campo de entrada.\tvalidator\tFenextjsValidatorClass\tno\tundefined\tClase de validador de Fenextjs para la validaci√≥n de la entrada.\tlabel\tReactNode\tno\t''\tTexto de etiqueta que se muestra para el campo de entrada.\tplaceholder\tstring\tno\t''\tTexto que se muestra en el campo de entrada cuando est√° vac√≠o.\tdefaultValue\tstring | undefined | null\tno\tundefined\tValor predeterminado para establecer en el campo de entrada.\tonChange\t(value: string) => void\tno\tundefined\tFunci√≥n que se ejecuta al cambiar el valor del input.\ticon\tReactNode\tno\tundefined\t√çcono utilizado para alternar entre el texto visible y la contrase√±a.\tclassName\tstring\tno\t''\tClase CSS para el contenedor del componente.\tclassNameContentEye\tstring\tno\t''\tClase CSS para personalizar el √≠cono de alternancia.\tdisabled\tboolean\tno\tfalse\tDetermina si el input est√° deshabilitado.\tautoFocus\tboolean\tno\tfalse\tDetermina si el input debe recibir foco autom√°ticamente al cargarse.","alternancia-de-visibilidad#Alternancia de visibilidad":"El componente incluye un √≠cono que permite alternar entre mostrar el texto de la contrase√±a o mantenerlo oculto. El estado de visibilidad cambia entre 'text' y 'password' al hacer click en el √≠cono.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"B√°sico\n<InputPassword placeholder=\"Enter your password\" />\nCon valor inicial\n<InputPassword value=\"mySecretPassword\" />\nPersonalizaci√≥n de clase\n<InputPassword className=\"custom-input\" />"}},"/components/input/phone":{"title":"InputPhone","data":{"":"El componente InputPhone permite ingresar y validar n√∫meros de tel√©fono, incluyendo un campo de selecci√≥n de c√≥digo de pa√≠s y el n√∫mero de tel√©fono propiamente dicho.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente InputPhone, se puede hacer desde fenextjs\nimport { InputPhone } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tclassNameSelectCode\tInputSelectClassProps\tno\tundefined\tClase CSS para personalizar el contenedor del campo de selecci√≥n del c√≥digo de pa√≠s.\tclassNameInputNumber\tInputTextClassProps\tno\tundefined\tClase CSS para personalizar el contenedor del campo de n√∫mero de tel√©fono.\tclassNamePhone\tstring\tno\t''\tClase CSS para personalizar el contenedor principal del componente InputPhone.\tclassNamePhoneCode\tstring\tno\t''\tClase CSS para personalizar el contenedor del c√≥digo de pa√≠s.\tclassNamePhoneLabel\tstring\tno\t''\tClase CSS para personalizar el label del componente InputPhone.\tclassNamePhoneNumber\tstring\tno\t''\tClase CSS para personalizar el contenedor del n√∫mero de tel√©fono.\tclassNameError\tstring\tno\t''\tClase CSS para personalizar el contenedor del mensaje de error.\tdisabledSelectCode\tboolean\tno\tfalse\tDeshabilita la selecci√≥n del c√≥digo de pa√≠s.\tplaceholderCode\tstring\tno\t'+57'\tPlaceholder para el campo del c√≥digo de pa√≠s.\tplaceholder\tstring\tno\t'xxx-xx-xx-xxxx'\tPlaceholder para el campo del n√∫mero de tel√©fono.\tdefaultCode\tstring\tno\t'+57'\tC√≥digo de pa√≠s por defecto.\tdefaultValue\tPartial<PhoneProps>\tno\tundefined\tValor por defecto para el n√∫mero de tel√©fono.\tvalue\tPartial<PhoneProps>\tno\tundefined\tValor controlado del n√∫mero de tel√©fono.\tonChange\tfunction\tno\tundefined\tFunci√≥n que se ejecuta al cambiar el valor del n√∫mero de tel√©fono.\tvalidator\tFenextjsValidatorClass<PhoneProps>\tno\tundefined\tValidador personalizado para el n√∫mero de tel√©fono.\tparseCountrys\t(data: CountryProps[]) => CountryProps[]\tno\tundefined\tFunction para mapear, ordenar, filtrar, etc, los pa√≠ses del selector de codigo de telefono.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"B√°sico\n<InputPhone />\nCon valor por defecto\n<InputPhone defaultValue={{ code: \"+57\", number: \"1234567890\" }} />\nCon validaci√≥n personalizada\n<InputPhone validator={myPhoneValidator} />"}},"/components/input/radio":{"title":"InputRadio","data":{"":"El componente InputRadio permite renderizar un conjunto de radios personalizados, que pueden incluir etiquetas, √≠conos y diversos estilos basados en su estado (activo/inactivo). Este componente es √∫til para permitir al usuario seleccionar una opci√≥n de un grupo predefinido.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente InputRadio, se puede hacer desde fenextjs\nimport { InputRadio } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\titems\tInputRadioItemProps<T>[]\tno\t[]\tLista de elementos del radio. Cada elemento contiene un id, etiqueta y datos opcionales.\tlabelPosition\t'right' | 'left'\tno\t'right'\tPosici√≥n de la etiqueta en relaci√≥n con el radio (a la derecha o izquierda).\tname\tstring\tno\t''\tEl atributo 'name' del elemento radio. √ötil para agrupar radios con el mismo nombre.\tonChange\t(e: InputRadioItemProps<T>) => void\tno\t(e) => env_log(e, { name: 'input radio onchange' })\tFunci√≥n que se ejecuta al cambiar el estado del radio. Recibe el elemento seleccionado como par√°metro.\tdefaultValue\tInputRadioItemProps<T>\tno\tundefined\tValor por defecto del radio al renderizarlo por primera vez.\tvalue\tInputRadioItemProps<T>\tno\tundefined\tEl valor actual del radio. Controla qu√© elemento est√° seleccionado.\tdisabled\tboolean\tno\tfalse\tIndica si el grupo de radios est√° deshabilitado, evitando que los usuarios seleccionen una opci√≥n.\tclassNameContent\tstring\tno\t''\tClase CSS para personalizar el contenedor general del radio.\tclassNameLabel\tstring\tno\t''\tClase CSS para la etiqueta del radio.\tclassNameLabelActive\tstring\tno\t''\tClase CSS para la etiqueta cuando el radio est√° activo.\tclassNameLabelInactive\tstring\tno\t''\tClase CSS para la etiqueta cuando el radio est√° inactivo.\tclassNameText\tstring\tno\t''\tClase CSS para el texto junto al radio.\tclassNameContentRadio\tstring\tno\t''\tClase CSS para el contenedor del radio.\tclassNameContentRadioActive\tstring\tno\t''\tClase CSS para el contenedor del radio cuando est√° activo.\tclassNameContentRadioInactive\tstring\tno\t''\tClase CSS para el contenedor del radio cuando est√° inactivo.\tclassNameRadio\tstring\tno\t''\tClase CSS para el elemento input radio.\tclassNameRadioActive\tstring\tno\t''\tClase CSS para el elemento input radio cuando est√° activo.\tclassNameRadioInactive\tstring\tno\t''\tClase CSS para el elemento input radio cuando est√° inactivo.\ticon\tReactNode\tno\t<Check />\tIcono que se muestra junto al radio cuando est√° activo.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"B√°sico\n<InputRadio\n  items={[\n    { id: \"1\", label: \"Opci√≥n 1\" },\n    { id: \"2\", label: \"Opci√≥n 2\" },\n  ]}\n/>\nRadio con icono\n<InputRadio\n  items={[\n    { id: \"1\", label: \"Opci√≥n 1\" },\n    { id: \"2\", label: \"Opci√≥n 2\" },\n  ]}\n  icon={<Check />}\n/>\nRadio deshabilitado\n<InputRadio items={[{ id: \"1\", label: \"Opci√≥n 1\" }]} disabled={true} />\nRadio con onChange\n<InputRadio\n  items={[{ id: \"1\", label: \"Opci√≥n 1\" }]}\n  onChange={(item) => console.log(item)}\n/>"}},"/components/input/range":{"title":"InputRange","data":{"":"El componente InputRange permite la selecci√≥n de un valor o rango de valores dentro de un intervalo definido. Se puede personalizar con clases CSS y manejar cambios en los valores m√≠nimo, m√°ximo o intermedio.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente InputRange, se puede hacer desde fenextjs\nimport { InputRange } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tvalue\tnumber\tno\t0\tEl valor actual del input.\tvalueMin\tnumber\tno\t-100\tEl valor m√≠nimo permitido para el input.\tvalueMax\tnumber\tno\t100\tEl valor m√°ximo permitido para el input.\tdefaultValue\tnumber\tno\t0\tEl valor inicial del input.\tdefaultValueMin\tnumber\tno\t-100\tEl valor m√≠nimo inicial del input.\tdefaultValueMax\tnumber\tno\t100\tEl valor m√°ximo inicial del input.\tonChange\tfunction\tno\t\tFunci√≥n que se ejecuta cuando el valor del input cambia.\tonChangeRange\tfunction\tno\t\tFunci√≥n que se ejecuta cuando cambia el rango de valores del input.\tuseRange\tboolean\tno\tfalse\tIndica si se debe usar un rango de valores en lugar de un √∫nico valor.\tmin\tnumber\tno\t-100\tEl valor m√≠nimo permitido para el rango.\tmax\tnumber\tno\t100\tEl valor m√°ximo permitido para el rango.\tstep\tnumber\tno\t1\tEl tama√±o del paso para los valores del input.\tshowNumber\t'top' | 'bottom' | 'none'\tno\t'top'\tPosici√≥n en la que se muestra el valor num√©rico del input.\tclassName\tstring\tno\t\tClase CSS para personalizar el contenedor del input.\tclassNameContentRange\tstring\tno\t\tClase CSS para el contenedor del rango del input.\tclassNameMin\tstring\tno\t\tClase CSS para el valor m√≠nimo del input.\tclassNameMax\tstring\tno\t\tClase CSS para el valor m√°ximo del input.\tclassNameCurrent\tstring\tno\t\tClase CSS para el valor actual del input.\tclassNameContentValue\tstring\tno\t\tClase CSS para el contenedor del valor del input.\tclassNameCircle\tstring\tno\t\tClase CSS para los c√≠rculos del input.\tclassNameLine\tstring\tno\t\tClase CSS para las l√≠neas del input.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"InputRange b√°sico\n<InputRange />\nInputRange con rango activado\n<InputRange useRange={true} />\nInputRange con valor personalizado\n<InputRange value={50} />"}},"/components/input/rate":{"title":"InputRate","data":{"":"El componente InputRate permite seleccionar una calificaci√≥n de 0 a 5 utilizando estrellas interactivas. Es altamente personalizable y puede gestionar valores predeterminados o seleccionados por el usuario.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente InputRate, se puede hacer desde fenextjs\nimport { InputRate } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tvalue\tnumber\tno\tundefined\tValor actual de la calificaci√≥n. Se espera un n√∫mero entre 0 y 5.\tdefaultValue\tnumber\tno\t0\tValor predeterminado de la calificaci√≥n cuando no se proporciona 'value'.\tclassName\tstring\tno\t''\tClase CSS para personalizar el contenedor principal del componente.\tclassNameContentStar\tstring\tno\t''\tClase CSS para personalizar el contenedor de las estrellas.\tclassNameStar\tstring\tno\t''\tClase CSS para personalizar las estrellas.\tclassNameStarActive\tstring\tno\t''\tClase CSS para personalizar las estrellas activas (calificadas).\tclassNameNumber\tstring\tno\t''\tClase CSS para personalizar la visualizaci√≥n del n√∫mero de calificaci√≥n.\tonChange\t(star: number) => void\tno\tundefined\tFunci√≥n que se ejecuta cuando cambia la calificaci√≥n seleccionada.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"Calificaci√≥n b√°sica\n<InputRate />\nCalificaci√≥n con valor predeterminado\n<InputRate defaultValue={3} />\nCalificaci√≥n con valor controlado\n<InputRate value={4} onChange={(value) => console.log(value)} />\nCalificaci√≥n con personalizaci√≥n de clases\n<InputRate className=\"custom-class\" classNameStar=\"custom-star\" />"}},"/components/input/scanner/textqr":{"title":"InputScannerTextQr","data":{"":"El componente InputScannerTextQr combina un campo de texto con un esc√°ner QR. Permite al usuario ingresar texto manualmente o escanear un c√≥digo QR para rellenar el campo de texto.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente InputScannerTextQr, se puede hacer desde fenextjs\nimport { InputScannerTextQr } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tclassName\tstring\tno\t''\tClase CSS para personalizar el contenedor principal del componente.\tdefaultValue\tstring\tno\t''\tValor predeterminado del campo de texto.\tonChange\t(value: string) => void\tno\tundefined\tFunci√≥n que se ejecuta cuando el valor del campo de texto cambia, pasando el nuevo valor.\ticon\tReactNode\tno\tundefined\t√çcono que se muestra junto al campo de texto, en este caso, el esc√°ner QR.\tonChangeCameraContent\tReactNode\tno\t<CameraChange />\tContenido personalizado para el bot√≥n que permite cambiar entre c√°maras en el esc√°ner QR.\tbuttonToggleFlashContent\tReactNode\tno\t<Bolt />\tContenido personalizado para el bot√≥n que activa o desactiva el flash de la c√°mara en el esc√°ner QR.\tbuttonScannerContent\tReactNode\tno\t<Qr />\tContenido personalizado para el bot√≥n que activa el esc√°ner QR.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"Esc√°ner de texto y QR b√°sico\n<InputScannerTextQr onChange={(value) => console.log(value)} />\nEsc√°ner de texto y QR con valor predeterminado\n<InputScannerTextQr\n  defaultValue=\"Texto inicial\"\n  onChange={(value) => console.log(value)}\n/>\nEsc√°ner de texto y QR con icono personalizado\n<InputScannerTextQr icon={<div>Escanear QR</div>} />"}},"/components/input/scanner/qr":{"title":"InputScannerQr","data":{"":"El componente InputScannerQr permite escanear c√≥digos QR utilizando la c√°mara del dispositivo. Incluye opciones para cambiar de c√°mara, activar el flash y detener el escaneo.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente InputScannerQr, se puede hacer desde fenextjs\nimport { InputScannerQr } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tclassName\tstring\tno\t''\tClase CSS para personalizar el contenedor principal del componente.\tonChange\t(v: string) => void\tno\tundefined\tFunci√≥n que se ejecuta al escanear un c√≥digo QR con √©xito, pasando el valor escaneado.\tbuttonScannerContent\tReactNode\tno\t<Qr />\tContenido personalizado para el bot√≥n que activa el esc√°ner.\tbuttonChangeCameraContent\tReactNode\tno\t<CameraChange />\tContenido personalizado para el bot√≥n que permite cambiar entre c√°maras.\tbuttonToggleFlashContent\tReactNode\tno\t<Bolt />\tContenido personalizado para el bot√≥n que activa o desactiva el flash de la c√°mara.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"Esc√°ner b√°sico de QR\n<InputScannerQr onChange={(value) => console.log(value)} />\nEsc√°ner con contenido personalizado en los botones\n<InputScannerQr buttonScannerContent={<div>Escanear QR</div>} />\nEsc√°ner con cambio de c√°mara y flash activable\n<InputScannerQr\n  buttonChangeCameraContent={<div>Cambiar C√°mara</div>}\n  buttonToggleFlashContent={<div>Flash</div>}\n/>"}},"/components/input/search":{"title":"InputSearch","data":{"":"El componente InputSearch permite realizar b√∫squedas de manera eficiente y personalizable. Incluye soporte para resultados de b√∫squeda, filtros por pesta√±as y opciones de carga adicional.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente InputSearch, se puede hacer desde fenextjs\nimport { InputSearch } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tclassNameSearch\tstring\tno\t''\tClase CSS para personalizar el contenedor del campo de b√∫squeda.\tclassNameSearchBg\tstring\tno\t''\tClase CSS para el fondo del campo de b√∫squeda.\tclassNameSearchContentResult\tstring\tno\t''\tClase CSS para el contenedor de resultados de b√∫squeda.\tclassNameSearchResult\tstring\tno\t''\tClase CSS para los elementos de resultado de b√∫squeda.\tplaceholder\tstring\tno\t'Search'\tTexto que se muestra cuando el campo de b√∫squeda est√° vac√≠o.\ticon\tReactNode\tno\t<SVGSearch />\t√çcono que se muestra en el campo de b√∫squeda.\ticonClear\tReactNode\tno\t<Close />\t√çcono que se muestra para limpiar la b√∫squeda.\tonSearch\t(value: string, tabFilter?: InputSearchTabFilterProps[]) => Promise<InputSearchResultProps[]>\tno\tundefined\tFunci√≥n que se llama al realizar una b√∫squeda, pasando el valor y los filtros de pesta√±as.\tonEnterSearch\t(value: string) => void\tno\tundefined\tFunci√≥n que se ejecuta al presionar Enter en el campo de b√∫squeda.\tonClearSearch\t() => void\tno\tundefined\tFunci√≥n que se ejecuta al limpiar el campo de b√∫squeda.\tonClickSearch\t(result: InputSearchResultProps) => void\tno\tundefined\tFunci√≥n que se ejecuta al hacer click en un resultado de b√∫squeda.\tuseResult\tboolean\tno\tfalse\tIndica si se debe mostrar la lista de resultados de b√∫squeda.\tuseLoadMore\tboolean\tno\ttrue\tIndica si se debe permitir cargar m√°s resultados.\tButtonLoadMoreProps\tOmit<ButtonProps, 'onClick'>\tno\t{ children: 'Load More' }\tPropiedades para el bot√≥n de carga adicional.\tresultList\tInputSearchResultProps[]\tno\tundefined\tLista de resultados de b√∫squeda que se muestran.\tresultEmpty\tReactNode\tno\t<Title tag='h4'>Not Results</Title>\tContenido que se muestra cuando no hay resultados de b√∫squeda.\tresultPreSearch\tReactNode\tno\t<Title tag='h4'>Search</Title>\tContenido que se muestra antes de realizar una b√∫squeda.\tlistTabFilter\tInputSearchTabFilterProps[]\tno\t[]\tLista de filtros por pesta√±as que se pueden aplicar a la b√∫squeda.\tdefaultTabFilterSelected\tInputSearchTabFilterProps[]\tno\t[]\tLista de filtros por pesta√±as seleccionados por defecto.\tonChangeTabFilterSelected\t(selected: InputSearchTabFilterProps[]) => void\tno\tundefined\tFunci√≥n que se ejecuta al cambiar los filtros por pesta√±as seleccionados.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"B√∫squeda b√°sica\n<InputSearch onSearch={async (value) => await fetchResults(value)} />\nB√∫squeda con carga de m√°s resultados\n<InputSearch\n  onSearch={async (value) => await fetchResults(value)}\n  useLoadMore={true}\n/>\nB√∫squeda con filtros por pesta√±as\n<InputSearch\n  onSearch={async (value) => await fetchResults(value)}\n  useTabFilter={true}\n  listTabFilter={[{ id: \"tab1\", text: \"Tab 1\" }]}\n/>"}},"/components/input/select":{"title":"InputSelect","data":{"":"El componente InputSelect proporciona una interfaz interactiva que permite a los usuarios seleccionar opciones de una lista, con la posibilidad de b√∫squeda y personalizaci√≥n avanzada.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente InputSelect, se puede hacer desde fenextjs\nimport { InputSelect } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\toptions\tInputSelectItemOptionBaseProps[]\ts√≠\t\tLista de opciones disponibles en el select.\tfilterOptions\tfunction\tno\tundefined\tFunci√≥n personalizada para filtrar las opciones del select.\tshowOptions\t'hover' | 'focus' | 'focus-hover'\tno\t'focus'\tDefine cu√°ndo mostrar las opciones del select.\thiddenOptions\t'not-hover' | 'not-focus' | 'not-focus-hover'\tno\t'not-hover'\tDefine cu√°ndo ocultar las opciones del select.\tdefaultValue\tInputSelectItemOptionBaseProps\tno\tundefined\tValor por defecto seleccionado en el select.\ttypeSelect\t'div' | 'select' | 'datalist'\tno\t'div'\tDefine el tipo de elemento select.\ttypeSelectStyle\t'normal' | 'normal-out' | 'box' | 'list' | 'checkbox'\tno\t'normal'\tEstilos aplicados al componente select.\tuseSwichtypeSelectStyle\tboolean\tno\tfalse\tPermite alternar entre estilos de tipo select.\tuseTOption\tboolean\tno\tfalse\tIndica si se debe usar una opci√≥n traducida (useTOption).\tvalue\tInputSelectItemOptionBaseProps\tno\t\tValor actual del select.\tnoResult\tInputSelectItemOptionBaseProps\tno\t\tValor que se muestra cuando no hay resultados en la b√∫squeda.\tloaderOption\tInputSelectItemOptionBaseProps\tno\t\tOpci√≥n que se muestra mientras se cargan las opciones.\tselected\tInputSelectItemOptionBaseProps\tno\t\tOpci√≥n actualmente seleccionada.\tcreate\tInputSelectItemOptionBaseProps\tno\t\tOpci√≥n que permite crear un nuevo valor en el select.\tonCreate\tfunction\tno\t\tFunci√≥n que se ejecuta cuando se crea un nuevo valor.\tisSelectClearText\tboolean\tno\tfalse\tIndica si se puede limpiar el texto del select.\tisSelectChangeText\tboolean\tno\ttrue\tIndica si se puede cambiar el texto del select.\tonChange\tfunction\tno\t\tFunci√≥n que se ejecuta cuando cambia el valor seleccionado.\tonChangeData\tfunction\tno\t\tFunci√≥n que se ejecuta cuando cambia el valor de los datos seleccionados.\tonChangeText\tfunction\tno\t\tFunci√≥n que se ejecuta cuando cambia el texto del select.\tonChangeValidate\tfunction\tno\t\tFunci√≥n personalizada de validaci√≥n que se ejecuta cuando cambia el valor del select.\ticonCloseMovil\tReactNode\tno\t<Cancel />\t√çcono que se muestra para cerrar el select en vista m√≥vil.\tclearContent\tReactNode\tno\t'Clear'\tContenido que se muestra para limpiar la selecci√≥n.\tsearchById\tboolean\tno\tfalse\tIndica si la b√∫squeda se realiza por ID.\ticonSearch\tReactNode\tno\t<SVGSearch />\t√çcono de b√∫squeda que se muestra en el select.\tchangeByFirstOptionInOnBlur\tboolean\tno\tfalse\tCambia al valor de la primera opci√≥n cuando el input pierde el foco.\tmaxLengthShowOptions\tnumber\tno\t20\tCantidad m√°xima de opciones que se muestran.\tnItems\tnumber\tno\t\tN√∫mero de √≠tems que se muestran en el select.\tshowOptionIconImg\tboolean\tno\ttrue\tMuestra √≠conos de imagen junto a las opciones del select.\tvalidatorData\tFenextjsValidatorClass\tno\t\tClase de validaci√≥n utilizada para validar los datos de entrada del select.\tforceShowOptionOnLoad\tboolean\tno\tfalse\tForza a mostrar las opciones al cargar el componente.\ticonDelete\tReactNode\tno\t<Trash />\t√çcono personalizado para eliminar una opci√≥n.\tuseSearch\tboolean\tno\ttrue\tDetermina si el selector filtra los elementos por el texto escrito.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"B√°sico\n<InputSelect options={options} />\nInputSelect con filtro de opciones\n<InputSelect options={options} filterOptions={filterOptions} />\nInputSelect con icono de b√∫squeda\n<InputSelect options={options} iconSearch={<SVGSearch />} />\nInputSelect con opci√≥n personalizada de crear\n<InputSelect\n  options={options}\n  onCreate={() => console.log(\"Crear nueva opci√≥n\")}\n/>"}},"/components/input/selectcountrymultiple":{"title":"InputSelectCountryMultiple","data":{"":"El componente InputSelectCountryMultiple permite seleccionar m√∫ltiples pa√≠ses de una lista de opciones, con posibilidad de personalizaci√≥n adicional a trav√©s de las propiedades del componente.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente InputSelectCountryMultiple, se puede hacer desde fenextjs\nimport { InputSelectCountryMultiple } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\t...props\tInputSelectMultipleTProps<CountryProps>\tno\t\tPropiedades adicionales que extienden de InputSelectMultipleTProps, como eventos o configuraciones del componente.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"Selecci√≥n m√∫ltiple de pa√≠ses\n<InputSelectCountryMultiple />\nInputSelectCountryMultiple con estilos personalizados\n<InputSelectCountryMultiple classNameSelect=\"custom-select-multiple\" />\nInputSelectCountryMultiple con opciones predeterminadas\n<InputSelectCountryMultiple\n  value={[\n    { name: \"United States\", isoCode: \"US\" },\n    { name: \"Canada\", isoCode: \"CA\" },\n  ]}\n/>"}},"/components/input/selectcountry":{"title":"InputSelectCountry","data":{"":"El componente InputSelectCountry permite seleccionar un pa√≠s de una lista de pa√≠ses, con la posibilidad de personalizar las clases CSS.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente InputSelectCountry, se puede hacer desde fenextjs\nimport { InputSelectCountry } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\t...props\tInputSelectTProps<CountryProps>\tno\t\tPropiedades adicionales que extienden de InputSelectTProps, como eventos o configuraciones del componente.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"B√°sico\n<InputSelectCountry />\nInputSelectCountry con opciones personalizadas\n<InputSelectCountry\n  classNameSelect=\"custom-select\"\n  classNameList=\"custom-list\"\n/>\nInputSelectCountry con estilos CSS personalizados\n<InputSelectCountry classNameSelect=\"custom-select-class\" />"}},"/components/input/selectcity":{"title":"InputSelectCity","data":{"":"Componente InputSelectCity que permite seleccionar una ciudad bas√°ndose en el pa√≠s y estado seleccionados.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente InputSelectCity, se puede hacer desde fenextjs\nimport { InputSelectCity } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tcountry\tCountryProps\tno\tundefined\tEl pa√≠s seleccionado, utilizado para filtrar las ciudades disponibles.\tstate\tStateProps\tno\tundefined\tEl estado seleccionado, utilizado para filtrar las ciudades disponibles.\t...props\tInputSelectTProps<CityProps>\tno\t\tCualquier otra propiedad que extiende de InputSelectTProps.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"B√°sico\n<InputSelectCity\n  country={{ name: \"United States\", isoCode: \"US\" }}\n  state={{ name: \"California\", isoCode: \"CA\" }}\n/>\nInputSelectCity sin estado\n<InputSelectCity country={{ name: \"United States\", isoCode: \"US\" }} />\nInputSelectCity con todas las ciudades\n<InputSelectCity />"}},"/components/input/selectmultiple":{"title":"InputSelectMultiple","data":{"":"El componente InputSelectMultiple permite seleccionar m√∫ltiples opciones de una lista de elementos. Ofrece funcionalidades avanzadas como validaci√≥n personalizada, eliminaci√≥n de opciones seleccionadas y selecci√≥n de estilo de visualizaci√≥n.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente InputSelectMultiple, se puede hacer desde fenextjs\nimport { InputSelectMultiple } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tclassNameSelectMultiple\tstring\tno\t\"\"\tClase CSS personalizada para el componente select-multiple.\tclassNameSelectMultipleList\tstring\tno\t\"\"\tClase CSS personalizada para la lista de opciones.\tdefaultValue\tInputSelectItemOptionBaseProps<T>[]\tno\t[]\tOpciones predeterminadas seleccionadas al iniciar el componente.\tvalue\tInputSelectItemOptionBaseProps<T>[]\tno\t\tOpciones seleccionadas actualmente.\tonChange\t(v?: InputSelectItemOptionBaseProps<T>[]) => void\tno\t\tFunci√≥n que se ejecuta cuando el valor seleccionado cambia.\tonChangeData\t(v?: T[]) => void\tno\t\tFunci√≥n que se ejecuta cuando los datos seleccionados cambian.\tonChangeValidate\t(e: InputSelectItemOptionBaseProps<T>[]) => Promise<any> | any\tno\t\tFunci√≥n de validaci√≥n personalizada que se ejecuta cuando el valor cambia.\ticonDelete\tReactNode\tno\t<Trash />\tIcono personalizado para eliminar una opci√≥n seleccionada.\ttypeSelectMultipleStyle\t'normal' | 'checkbox'\tno\t'normal'\tDefine el estilo del select m√∫ltiple. Puede ser normal o con casillas de verificaci√≥n (checkbox).\tCustomOptionsSelected\ttypeof InputSelectOption<T>\tno\t\tComponente personalizado para renderizar las opciones seleccionadas.\tvalidatorData\tFenextjsValidatorClass<T[]>\tno\t\tInstancia de FenextjsValidatorClass para validar los datos seleccionados.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"Uso b√°sico de InputSelectMultiple\n<InputSelectMultiple\n  defaultValue={[\n    { label: \"Option 1\", value: 1 },\n    { label: \"Option 2\", value: 2 },\n  ]}\n  onChange={(selected) => console.log(selected)}\n/>\nInputSelectMultiple con validaci√≥n personalizada\n<InputSelectMultiple\n  onChangeValidate={async (selected) => {\n    if (selected.length > 5) {\n      throw new Error(\"No puedes seleccionar m√°s de 5 opciones.\");\n    }\n  }}\n  onChangeData={(data) => console.log(\"Datos seleccionados:\", data)}\n/>"}},"/components/input/selectnumber":{"title":"InputSelectNumber","data":{"":"El componente InputSelectNumber permite la selecci√≥n de un valor num√©rico de una lista de n√∫meros dentro de un rango definido. Ofrece funcionalidades adicionales como la personalizaci√≥n del texto a mostrar para cada n√∫mero.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente InputSelectNumber, se puede hacer desde fenextjs\nimport { InputSelectNumber } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tonChange\t(n?: number) => void\tno\t\tFunci√≥n que se ejecuta cuando el valor seleccionado cambia.\tdefaultValue\tnumber\tno\t\tValor num√©rico por defecto seleccionado.\tmin\tnumber\tno\t\tEl valor m√≠nimo permitido en el rango de selecci√≥n.\tmax\tnumber\tno\t\tEl valor m√°ximo permitido en el rango de selecci√≥n.\tparseText\t(e: number) => string\tno\t\tFunci√≥n utilizada para convertir el n√∫mero seleccionado en una cadena de texto personalizada a mostrar en el select.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"Uso b√°sico de InputSelectNumber\n<InputSelectNumber\n  min={1}\n  max={10}\n  defaultValue={5}\n  onChange={(n) => console.log(\"Valor seleccionado:\", n)}\n/>\nInputSelectNumber con formato personalizado\n<InputSelectNumber\n  min={1}\n  max={20}\n  parseText={(n) => `N√∫mero: ${n}`}\n  onChange={(n) => console.log(\"N√∫mero seleccionado:\", n)}\n/>"}},"/components/input/selectmultiplet":{"title":"InputSelectMultipleT","data":{"":"El componente InputSelectMultipleT es una variante de InputSelectMultiple que permite seleccionar m√∫ltiples opciones de un tipo gen√©rico T. Incluye la funcionalidad de conversi√≥n personalizada para manejar los datos y su representaci√≥n en el select.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente InputSelectMultipleT, se puede hacer desde fenextjs\nimport { InputSelectMultipleT } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tdefaultValue\tT[]\tno\t\tValores por defecto seleccionados en el select.\tvalue\tT[]\tno\t\tValores actualmente seleccionados.\toptions\tT[]\ts√≠\t\tLista de opciones disponibles para seleccionar.\tonChange\t(v?: T[]) => void\tno\t\tFunci√≥n que se ejecuta cuando cambian los valores seleccionados.\tonParse\t(v?: T) => InputSelectItemOptionBaseProps<T>\ts√≠\t\tFunci√≥n utilizada para convertir cada valor del tipo T en una opci√≥n seleccionable para el componente InputSelectMultiple.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"Uso b√°sico de InputSelectMultipleT\nconst options = [\n  { id: 1, name: \"Option 1\" },\n  { id: 2, name: \"Option 2\" },\n  { id: 3, name: \"Option 3\" },\n];\n<InputSelectMultipleT\n  options={options}\n  onParse={(option) => ({ label: option.name, value: option.id })}\n  onChange={(selected) => console.log(selected)}\n/>;\nInputSelectMultipleT con valores por defecto\nconst options = [\n  { id: 1, name: \"Option 1\" },\n  { id: 2, name: \"Option 2\" },\n  { id: 3, name: \"Option 3\" },\n];\n<InputSelectMultipleT\n  defaultValue={[options[0], options[1]]}\n  options={options}\n  onParse={(option) => ({ label: option.name, value: option.id })}\n  onChange={(selected) => console.log(selected)}\n/>;"}},"/components/input/selectoption":{"title":"InputSelectOption","data":{"":"El componente InputSelectOption permite mostrar opciones seleccionables con texto, im√°genes o √≠conos, adem√°s de proporcionar funcionalidades adicionales como la eliminaci√≥n de opciones y la personalizaci√≥n de eventos.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente InputSelectOption, se puede hacer desde fenextjs\nimport { InputSelectOption } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tid\tstring | number\ts√≠\tundefined\tID de la opci√≥n, que puede ser un string o un n√∫mero.\ttext\tstring\ts√≠\tundefined\tTexto que se mostrar√° en la opci√≥n.\timg\tstring\tno\tundefined\tURL de la imagen que se mostrar√° en la opci√≥n, si es proporcionada.\timgComponent\tImgProps\tno\tundefined\tPropiedades para personalizar el componente de imagen (Img).\ticon\tReactNode\tno\tundefined\tIcono que se mostrar√° junto al texto de la opci√≥n.\ttype\t'div' | 'option' | 'multiple'\tno\t'div'\tDefine el tipo de opci√≥n que se renderiza: div, option, o multiple.\tdisabled\tboolean\tno\tfalse\tIndica si la opci√≥n est√° deshabilitada.\tselected\tboolean\tno\tfalse\tIndica si la opci√≥n est√° seleccionada.\thidden\tboolean\tno\tfalse\tIndica si la opci√≥n est√° oculta.\tonClick\t(item: InputSelectOptionBaseProps) => void\tno\tundefined\tFunci√≥n que se ejecuta al hacer click en la opci√≥n.\tonDelete\t(item: InputSelectOptionBaseProps) => void\tno\tundefined\tFunci√≥n que se ejecuta al eliminar la opci√≥n.\tisBtn\tboolean\tno\tfalse\tIndica si la opci√≥n se debe comportar como un bot√≥n.\tdata\tT\tno\tundefined\tDatos personalizados asociados con la opci√≥n.\ticonDelete\tReactNode\tno\t<Trash />\tIcono personalizado para la eliminaci√≥n de la opci√≥n.\tclassNameOption\tstring\tno\t''\tClase CSS para personalizar la opci√≥n.\tclassNameOptionImg\tstring\tno\t''\tClase CSS para personalizar la imagen de la opci√≥n.\tclassNameOptionDelete\tstring\tno\t''\tClase CSS para personalizar el bot√≥n de eliminar de la opci√≥n.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"Opci√≥n b√°sica\n<InputSelectOption id={1} text=\"Opci√≥n 1\" />\nOpci√≥n con imagen\n<InputSelectOption id={2} text=\"Opci√≥n 2\" img=\"/path/to/img.jpg\" />\nOpci√≥n con acci√≥n personalizada\n<InputSelectOption\n  id={3}\n  text=\"Opci√≥n 3\"\n  onClick={(item) => console.log(item)}\n/>\nOpci√≥n deshabilitada\n<InputSelectOption id={4} text=\"Opci√≥n 4\" disabled={true} />"}},"/components/input/selectstate":{"title":"InputSelectState","data":{"":"El componente InputSelectState permite seleccionar un estado o provincia dentro de un pa√≠s espec√≠fico. Utiliza la API 'country-state-city-nextjs' para obtener y filtrar los estados seg√∫n el pa√≠s proporcionado.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente InputSelectState, se puede hacer desde fenextjs\nimport { InputSelectState } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tcountry\tCountryProps\tno\tundefined\tObjeto que representa el pa√≠s seleccionado, necesario para filtrar los estados correspondientes.\tid\tstring\tno\tundefined\tID del input select.\tlabel\tstring\tno\tundefined\tEtiqueta para el campo de selecci√≥n de estado.\tclassName\tstring\tno\t''\tClase CSS para personalizar el contenedor del input.\tplaceholder\tstring\tno\tundefined\tTexto de marcador de posici√≥n que aparece cuando no hay selecci√≥n.\tdisabled\tboolean\tno\tfalse\tIndica si el selector de estado est√° deshabilitado.\tvalue\tStateProps\tno\tundefined\tValor seleccionado actualmente en el selector de estado.\tonChange\t(value: StateProps) => void\tno\tundefined\tFunci√≥n que se ejecuta cuando el valor seleccionado cambia.\tisClearable\tboolean\tno\tfalse\tIndica si se puede limpiar el campo de selecci√≥n.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"InputSelectState b√°sico\n<InputSelectState />\nInputSelectState con pa√≠s preseleccionado\n<InputSelectState country={selectedCountry} />\nInputSelectState con cambio de estado\n<InputSelectState onChange={(state) => console.log(state)} />\nInputSelectState deshabilitado\n<InputSelectState disabled={true} />"}},"/components/input/selectt":{"title":"InputSelectT","data":{"":"El componente InputSelectT es un select customizable que permite pasar opciones y valores de un tipo gen√©rico T. Implementa funciones para manejar la conversi√≥n de los elementos seleccionados y permite personalizar la representaci√≥n de los datos.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente InputSelectT, se puede hacer desde fenextjs\nimport { InputSelectT } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tdefaultValue\tT\tno\t\tValor por defecto seleccionado en el select.\tvalue\tT\tno\t\tValor actualmente seleccionado.\toptions\tT[]\ts√≠\t\tLista de opciones disponibles para seleccionar.\tonChange\t(v?: T) => void\tno\t\tFunci√≥n que se ejecuta cuando cambia el valor seleccionado.\tonParse\t(v?: T) => InputSelectItemOptionBaseProps<T>\ts√≠\t\tFunci√≥n utilizada para convertir el valor del tipo T en una opci√≥n seleccionable para el componente InputSelect.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"Uso b√°sico de InputSelectT\nconst options = [\n  { id: 1, name: \"Option 1\" },\n  { id: 2, name: \"Option 2\" },\n];\n<InputSelectT\n  options={options}\n  onParse={(option) => ({ label: option.name, value: option.id })}\n  onChange={(selected) => console.log(selected)}\n/>;\nInputSelectT con valor por defecto\nconst options = [\n  { id: 1, name: \"Option 1\" },\n  { id: 2, name: \"Option 2\" },\n];\n<InputSelectT\n  defaultValue={options[0]}\n  options={options}\n  onParse={(option) => ({ label: option.name, value: option.id })}\n/>;"}},"/components/input/selecttimezone":{"title":"InputSelectTimeZone","data":{"":"El componente InputSelectTimeZone permite a los usuarios seleccionar una zona horaria de una lista predefinida de zonas horarias, con opciones de personalizaci√≥n tanto para la apariencia como para el comportamiento.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente InputSelectTimeZone, se puede hacer desde fenextjs\nimport { InputSelectTimeZone } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tuseTOption\tboolean\tno\tfalse\tIndica si se debe usar la opci√≥n traducida en lugar de los valores predeterminados para las zonas horarias.\tid\tstring\tno\tundefined\tID del input select.\tlabel\tstring\tno\tundefined\tEtiqueta para el campo de selecci√≥n de zona horaria.\tclassName\tstring\tno\t''\tClase CSS para personalizar el contenedor del input.\tplaceholder\tstring\tno\tundefined\tTexto de marcador de posici√≥n que aparece cuando no hay selecci√≥n.\tdisabled\tboolean\tno\tfalse\tIndica si el selector de zona horaria est√° deshabilitado.\tvalue\tTimeZoneProps\tno\tundefined\tValor seleccionado actualmente en el selector de zona horaria.\tonChange\t(value: TimeZoneProps) => void\tno\tundefined\tFunci√≥n que se ejecuta cuando el valor seleccionado cambia.\tisClearable\tboolean\tno\tfalse\tIndica si se puede limpiar el campo de selecci√≥n.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"InputSelectTimeZone b√°sico\n<InputSelectTimeZone />\nInputSelectTimeZone con valor preseleccionado\n<InputSelectTimeZone value={selectedTimeZone} />\nInputSelectTimeZone con cambio de zona horaria\n<InputSelectTimeZone onChange={(zone) => console.log(zone)} />\nInputSelectTimeZone deshabilitado\n<InputSelectTimeZone disabled={true} />"}},"/components/input/selectcsc":{"title":"InputSelectCSC","data":{"":"El componente InputSelectCSC permite seleccionar un pa√≠s, estado y ciudad de manera interrelacionada, facilitando la gesti√≥n de datos geogr√°ficos.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente InputSelectCSC, se puede hacer desde fenextjs\nimport { InputSelectCSC } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tclassNameSelectCSC\tstring\tno\t\tClase CSS personalizada para el select.\tuseContainer\tboolean\tno\ttrue\tDefine si el componente se envuelve en un contenedor div.\tcountry\tInputCSCProps\tno\t\tPropiedades del campo de selecci√≥n para el pa√≠s, incluyendo label y placeholder.\tstate\tInputCSCProps\tno\t\tPropiedades del campo de selecci√≥n para el estado, incluyendo label y placeholder.\tcity\tInputCSCProps\tno\t\tPropiedades del campo de selecci√≥n para la ciudad, incluyendo label y placeholder.\tdefaultValueJsonString\tstring\tno\t\tValor por defecto en formato JSON para inicializar el select.\tvalueJsonString\tstring\tno\t\tValor actual en formato JSON.\tonChangeJsonString\tfunction\tno\t\tFunci√≥n de cambio que devuelve el valor seleccionado en formato JSON.\tparseJson_to_String\tfunction\tno\t\tFunci√≥n para convertir JSON a string.\tparseString_to_Json\tfunction\tno\t\tFunci√≥n para convertir string a JSON.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"Selecci√≥n de pa√≠s, estado y ciudad\n<InputSelectCSC />\nInputSelectCSC con valores predeterminados\n<InputSelectCSC\n  valueJsonString='{\"country\": \"US\", \"state\": \"CA\", \"city\": \"Los Angeles\"}'\n  onChangeJsonString={(value) => console.log(value)}\n/>"}},"/components/input/swich":{"title":"InputSwich","data":{"":"El componente InputSwich permite crear un interruptor (switch) interactivo que los usuarios pueden alternar entre los estados activo e inactivo. Es altamente personalizable en t√©rminos de apariencia y comportamiento.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente InputSwich, se puede hacer desde fenextjs\nimport { InputSwich } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tclassName\tstring\tno\t''\tClase CSS para personalizar el contenedor del interruptor.\tclassNameCicle\tstring\tno\t''\tClase CSS para personalizar el c√≠rculo dentro del interruptor.\tclassNameInactive\tstring\tno\t''\tClase CSS para el estado inactivo del interruptor.\tclassNameActive\tstring\tno\t''\tClase CSS para el estado activo del interruptor.\tname\tstring\tno\t''\tNombre del interruptor que se usar√° como atributo del input.\tonChange\t(e: boolean) => void\tno\tundefined\tFunci√≥n que se ejecuta cuando el estado del interruptor cambia. Recibe un valor booleano que indica si est√° activado o desactivado.\tdefaultValue\tboolean\tno\tfalse\tValor inicial del interruptor cuando se renderiza por primera vez.\tvalue\tboolean\tno\tundefined\tValor actual del interruptor, puede ser controlado externamente.\tdisabled\tboolean\tno\tfalse\tIndica si el interruptor est√° deshabilitado.\tonValidateCheck\t(data: boolean) => Promise<void | boolean> | void | boolean\tno\tasync () => {}\tFunci√≥n para validar el estado del interruptor cuando se cambia. Puede devolver una promesa para manejar validaciones as√≠ncronas.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"InputSwich b√°sico\n<InputSwich />\nInputSwich con valor controlado\n<InputSwich value={true} onChange={(val) => console.log(val)} />\nInputSwich deshabilitado\n<InputSwich disabled={true} />\nInputSwich con validaci√≥n\n<InputSwich\n  onValidateCheck={async (val) => {\n    return val;\n  }}\n/>"}},"/components/input/text":{"title":"InputText","data":{"":"El componente InputText permite al usuario introducir texto en un campo de entrada. Es personalizable y se puede utilizar en formularios y otras interfaces de usuario donde se requiera la entrada de texto.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente InputText, se puede hacer desde fenextjs\nimport { InputText } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tid\tany\tno\t''\tID del campo de entrada.\tname\tany\tno\t''\tNombre del campo de entrada.\tdatalist\tany\tno\tundefined\tNombre del datalist para el campo de entrada.\tvalidator\tFenextjsValidatorClass\tno\tundefined\tClase de validador de Fenextjs para la validaci√≥n de la entrada.\tlabel\tany\tno\t''\tTexto de etiqueta que se muestra para el campo de entrada.\tplaceholder\tstring\tno\t''\tTexto que se muestra en el campo de entrada cuando est√° vac√≠o.\tplaceholderFocus\tstring\tno\tundefined\tTexto de marcador de posici√≥n que se muestra cuando el campo tiene foco.\tdefaultValue\tstring | undefined | null\tno\tundefined\tValor predeterminado para establecer en el campo de entrada.\tvalue\tstring | undefined | null\tno\tundefined\tValor a establecer en el campo de entrada.\ttype\t'text' | 'search' | 'tel' | 'url' | 'password' | 'number' | 'textarea'\tno\t'text'\tTipo de entrada del campo (texto, n√∫mero, contrase√±a, etc.).\tonChange\tfunction\tno\t() => {}\tFunci√≥n que se llama cuando cambia el valor de entrada.\tonBlur\tfunction\tno\t() => {}\tFunci√≥n que se llama cuando el campo pierde el foco.\tonEnter\tfunction\tno\t() => {}\tFunci√≥n que se llama cuando se presiona la tecla Enter.\tonChangeValidate\tfunction\tno\tasync (e: string) => e\tFunci√≥n para la validaci√≥n personalizada de la entrada.\tprops\tany\tno\tundefined\tPropiedades adicionales para pasar al componente de entrada.\ticon\tany\tno\t<></>\tIcono que se muestra dentro del campo de entrada.\ticonPos\t'left' | 'right'\tno\t'right'\tPosici√≥n del icono dentro del campo de entrada.\textraInContentInput\tany\tno\t<></>\tContenido adicional para mostrar dentro del contenedor del campo de entrada.\textraInLabel\tany\tno\t<></>\tContenido adicional para mostrar dentro de la etiqueta del campo.\tdisabled\tboolean\tno\tfalse\tIndica si el campo de entrada est√° deshabilitado.\tshowIcon\tboolean\tno\ttrue\tIndica si se debe mostrar el icono en el campo de entrada.\tclassName\tstring\tno\t''\tClase CSS para el componente de entrada.\terror\tErrorFenextjs\tno\tundefined\tTexto de error del campo de entrada.\terrorWithIsChange\tboolean\tno\ttrue\tMostrar error si ha cambiado.\toptional\tboolean\tno\tfalse\tIndica si el campo es opcional.\toptionalText\tstring\tno\t'(optional)'\tTexto opcional para el campo de entrada.\trequired\tboolean\tno\tfalse\tIndica si el campo es obligatorio.\trequiredText\tstring\tno\t'*'\tTexto para indicar que el campo es obligatorio.\tloader\tboolean\tno\tfalse\tIndica si debe mostrarse un cargador.\tisChange\tboolean | undefined\tno\tundefined\tIndica si el valor ha cambiado.\tuseLoader\tboolean\tno\ttrue\tIndica si se debe usar el cargador.\tinputMode\t'none' | 'text' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search' | undefined\tno\tundefined\tModo de entrada del campo.\tautoComplete\tboolean | string | 'off' | 'on'\tno\toff\tIndica si se debe habilitar la autocompletaci√≥n.\tonKeyDown\tfunction\tno\tundefined\tFunci√≥n para manejar eventos de tecla presionada.\tonWheel\tfunction\tno\tundefined\tFunci√≥n para manejar eventos de rueda del mouse.\tmaxLength\tnumber\tno\tundefined\tLongitud m√°xima para el campo de entrada.\tregExp\tRegExp\tno\tundefined\tExpresi√≥n regular para validar la entrada.\tregExpReplace\tstring\tno\t''\tCadena de reemplazo para la expresi√≥n regular.\tparseText\t(data: string) => string\tno\tundefined\tFunci√≥n para analizar el texto de entrada.\tonChangeEvent\t(e: InputTextChangeEvent) => void\tno\tundefined\tFunci√≥n para manejar el evento de cambio del campo de entrada.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"B√°sico\n<InputText />\nInputText con valor predeterminado\n<InputText defaultValue=\"Texto de ejemplo\" />\nInputText con placeholder\n<InputText placeholder=\"Escribe algo...\" />\nInputText deshabilitado\n<InputText disabled={true} />\nInputText en estado de error\n<InputText\n  error={\n    new ErrorFenextjs({ code: ErrorCode.ERROR, message: \"Campo requerido\" })\n  }\n/>\nInputText con autocompletado\n<InputText autoComplete={\"on\"} />\nInputText con expresi√≥n regular\n<InputText regExp={/^[a-zA-Z]*$/} regExpReplace=\"*\" />\nInputText con evento onKeyDown\n<InputText onKeyDown={(e) => console.log(e.key)} />\nInputText con cargador\n<InputText loader={true} />"}},"/components/input/textselect":{"title":"InputTextSelect","data":{"":"El componente InputTextSelect combina un campo de texto con un men√∫ desplegable (select), permitiendo a los usuarios ingresar texto o seleccionar una opci√≥n predefinida de una lista. Ofrece gran flexibilidad y personalizaci√≥n en t√©rminos de etiquetas, placehoder y validaciones.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente InputTextSelect, se puede hacer desde fenextjs\nimport { InputTextSelect } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tlabel\tany\tno\tundefined\tTexto de la etiqueta que se muestra para el campo de texto y select.\tplaceholderSelect\tstring\tno\tundefined\tTexto que se muestra como placeholder en el campo select.\tplaceholderText\tstring\tno\tundefined\tTexto que se muestra como placeholder en el campo de texto.\tdefaultValue\tPartial<TextSelectProps>\tno\t{}\tValor predeterminado para el componente, incluyendo el texto y la opci√≥n seleccionada.\tvalue\tPartial<TextSelectProps>\tno\tundefined\tValor actual del componente, que puede ser controlado externamente. Incluye el texto y la opci√≥n seleccionada.\tonChange\t(data: Partial<TextSelectProps>) => void\tno\tundefined\tFunci√≥n que se ejecuta al cambiar el valor del texto o del select. Recibe un objeto con las propiedades 'text' y 'select'.\tposSelect\t'left' | 'right'\tno\t'left'\tPosici√≥n del campo select respecto al campo de texto.\tvalidator\tany\tno\tundefined\tValidador personalizado para el campo de texto y select.\terrorWithIsChange\tboolean\tno\tfalse\tDetermina si se debe mostrar el mensaje de error cuando el valor cambia.\terror\tstring | ReactNode\tno\tundefined\tMensaje de error que se muestra cuando la validaci√≥n falla.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"InputTextSelect b√°sico\n<InputTextSelect />\nInputTextSelect con placeholders\n<InputTextSelect\n  placeholderText=\"Ingresa texto\"\n  placeholderSelect=\"Selecciona una opci√≥n\"\n/>\nInputTextSelect con valores predeterminados\n<InputTextSelect\n  defaultValue={{ text: \"Texto inicial\", select: { id: 1, text: \"Opci√≥n 1\" } }}\n/>\nInputTextSelect con onChange\n<InputTextSelect onChange={(data) => console.log(data)} />"}},"/components/input/unit/volumen":{"title":"InputUnitVolumen","data":{"":"El componente InputUnitVolumen permite al usuario seleccionar y gestionar unidades de volumen, ofreciendo opciones predeterminadas y personalizadas. Est√° basado en InputUnitBase y extiende su funcionalidad con opciones espec√≠ficas de volumen.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente InputUnitVolumen, se puede hacer desde fenextjs\nimport { InputUnitVolumen } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tdefaultValue\tPartial<InputUnitVolumenValue>\tno\tundefined\tValor predeterminado para el componente, que incluye el valor y la unidad seleccionados.\tvalue\tPartial<InputUnitVolumenValue>\tno\tundefined\tValor actual del componente, que incluye el valor num√©rico y la unidad seleccionada.\tonChange\t(data: Partial<InputUnitVolumenValue>) => void\tno\tundefined\tFunci√≥n que se ejecuta al cambiar el valor o la unidad, devolviendo los datos actualizados.\toptions\tUnit_Volumen[]\tno\tObject.keys(Unit_Volumen).map((e) => Unit_Volumen[e])\tOpciones de unidades de volumen disponibles para seleccionar.\tclassName\tstring\tno\t''\tClase CSS para personalizar el estilo del componente.\tclassNameDisabled\tstring\tno\t''\tClase CSS para el estado deshabilitado del componente.\tclassNameInput\tstring\tno\t''\tClase CSS para el campo de entrada de texto.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"Uso b√°sico\n<InputUnitVolumen />\nCon valor predeterminado\n<InputUnitVolumen defaultValue={{ value: 10, unit: \"liters\" }} />\nCon funci√≥n onChange\n<InputUnitVolumen onChange={(data) => console.log(data)} />"}},"/components/input/unit/distance":{"title":"InputUnitDistance","data":{"":"El componente InputUnitDistance permite a los usuarios ingresar un valor num√©rico junto con una unidad de medida de distancia seleccionable.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente InputUnitDistance, se puede hacer desde fenextjs\nimport { InputUnitDistance } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tdefaultValue\tPartial<InputUnitDistanceValue>\tno\t{}\tValor por defecto del componente, incluye el valor num√©rico y la unidad de medida de distancia.\tvalue\tPartial<InputUnitDistanceValue>\tno\tundefined\tValor actual del componente, incluye el valor num√©rico y la unidad de medida de distancia.\tonChange\t(data: Partial<InputUnitDistanceValue>) => void\tno\tundefined\tFunci√≥n que se ejecuta cuando el valor o la unidad cambia, recibe el objeto con value y unit.\toptions\tUnit_Distance[]\tno\tObject.keys(Unit_Distance).map((e) => Unit_Distance[e])\tOpciones disponibles para las unidades de medida de distancia, definidas por el tipo Unit_Distance.\tclassName\tstring\tno\tundefined\tClase CSS personalizada para el componente principal.\tclassNameSelect\tstring\tno\tundefined\tClase CSS personalizada para el select de unidades.\tclassNameInput\tstring\tno\tundefined\tClase CSS personalizada para el input del valor num√©rico.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"InputUnitDistance b√°sico\n<InputUnitDistance options={[\"m\", \"km\", \"mi\"]} />\nInputUnitDistance con valor y unidad iniciales\n<InputUnitDistance\n  defaultValue={{ value: 5, unit: \"km\" }}\n  options={[\"m\", \"km\", \"mi\"]}\n/>\nInputUnitDistance con funci√≥n onChange\n<InputUnitDistance\n  options={[\"m\", \"mi\"]}\n  onChange={(data) => console.log(data)}\n/>"}},"/components/input/unit/weight":{"title":"InputUnitWeight","data":{"":"El componente InputUnitWeight permite al usuario seleccionar y gestionar unidades de peso, ofreciendo opciones predeterminadas y personalizadas. Est√° basado en InputUnitBase y extiende su funcionalidad con opciones espec√≠ficas de peso.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente InputUnitWeight, se puede hacer desde fenextjs\nimport { InputUnitWeight } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tdefaultValue\tPartial<InputUnitWeightValue>\tno\tundefined\tValor predeterminado para el componente, que incluye el valor y la unidad seleccionados.\tvalue\tPartial<InputUnitWeightValue>\tno\tundefined\tValor actual del componente, que incluye el valor num√©rico y la unidad seleccionada.\tonChange\t(data: Partial<InputUnitWeightValue>) => void\tno\tundefined\tFunci√≥n que se ejecuta al cambiar el valor o la unidad, devolviendo los datos actualizados.\toptions\tUnit_Weight[]\tno\tObject.keys(Unit_Weight).map((e) => Unit_Weight[e])\tOpciones de unidades de peso disponibles para seleccionar.\tclassName\tstring\tno\t''\tClase CSS para personalizar el estilo del componente.\tclassNameDisabled\tstring\tno\t''\tClase CSS para el estado deshabilitado del componente.\tclassNameInput\tstring\tno\t''\tClase CSS para el campo de entrada de texto.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"Uso b√°sico\n<InputUnitWeight />\nCon valor predeterminado\n<InputUnitWeight defaultValue={{ value: 5, unit: \"kilograms\" }} />\nCon funci√≥n onChange\n<InputUnitWeight onChange={(data) => console.log(data)} />"}},"/components/input/unit/base":{"title":"InputUnitBase","data":{"":"El componente InputUnitBase permite a los usuarios ingresar un valor num√©rico junto con una unidad de medida seleccionable.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente InputUnitBase, se puede hacer desde fenextjs\nimport { InputUnitBase } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tdefaultValue\tPartial<InputUnitValue>\tno\t{}\tValor por defecto del componente, incluye el valor num√©rico y la unidad de medida.\tvalue\tPartial<InputUnitValue>\tno\tundefined\tValor actual del componente, incluye el valor num√©rico y la unidad de medida.\tonChange\t(data: Partial<InputUnitValue>) => void\tno\tundefined\tFunci√≥n que se ejecuta cuando el valor o la unidad cambia, recibe el objeto con value y unit.\toptions\tUnit_All[]\ts√≠\tundefined\tOpciones disponibles para las unidades de medida, definidas por el tipo Unit_All.\tclassName\tstring\tno\tundefined\tClase CSS personalizada para el componente principal.\tclassNameSelect\tstring\tno\tundefined\tClase CSS personalizada para el select de unidades.\tclassNameInput\tstring\tno\tundefined\tClase CSS personalizada para el input del valor num√©rico.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"InputUnitBase b√°sico\n<InputUnitBase options={[\"cm\", \"in\", \"ft\"]} />\nInputUnitBase con valor y unidad iniciales\n<InputUnitBase\n  defaultValue={{ value: 10, unit: \"cm\" }}\n  options={[\"cm\", \"in\", \"ft\"]}\n/>\nInputUnitBase con funci√≥n onChange\n<InputUnitBase options={[\"kg\", \"g\"]} onChange={(data) => console.log(data)} />"}},"/components/input/upload":{"title":"InputUpload","data":{"":"El componente InputUpload permite a los usuarios cargar archivos, proporcionando opciones de previsualizaci√≥n y una interfaz personalizable para seleccionar o arrastrar y soltar archivos.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente InputUpload, se puede hacer desde fenextjs\nimport { InputUpload } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\ttitle\tReactNode\tno\t\"Drag and drop here\"\tT√≠tulo mostrado en el √°rea de carga de archivos.\ttext\tReactNode\tno\t\"Drag and drop your file or template here.\"\tTexto adicional que se muestra en el √°rea de carga de archivos.\ttitleFile\tReactNode\tno\tundefined\tT√≠tulo personalizado que se muestra al seleccionar un archivo.\ttextFile\tReactNode\tno\tundefined\tTexto personalizado que se muestra al seleccionar un archivo.\ttextPreview\tReactNode\tno\t\"Preview File\"\tTexto que se muestra para la previsualizaci√≥n del archivo.\ticon\tReactNode\tno\t<Upload2 />\tIcono que se muestra en el √°rea de carga.\ticonFile\tReactNode\tno\t\"\"\tIcono que se muestra junto con el archivo cargado.\tbtn\tReactNode\tno\t\"Choose File\"\tTexto o componente personalizado para el bot√≥n de selecci√≥n de archivo.\ttagPreview\t\"embed\" | \"img\"\tno\t\"embed\"\tEtiqueta HTML usada para mostrar la previsualizaci√≥n del archivo. Puede ser 'embed' o 'img'.\tcustomPreview\t(data: FileProps) => ReactNode\tno\tundefined\tFunci√≥n personalizada para renderizar la previsualizaci√≥n del archivo.\tloader\tboolean\tno\tfalse\tDetermina si se muestra un indicador de carga mientras se sube el archivo.\ticonLoader\tReactNode\tno\t<LoaderSpinner />\tIcono o componente que se muestra mientras el archivo est√° en proceso de carga.\tparseProgress\t(e: number) => string\tno\t(e) => Uploading . . . $\\{e.toFixed(0)\\}%\tFunci√≥n que permite personalizar el texto de progreso de la carga de archivos.\tonChange\t(file: File) => void\tno\tundefined\tFunci√≥n que se ejecuta cuando el archivo cambia, recibe el archivo seleccionado.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"InputUpload b√°sico\n<InputUpload />\nInputUpload con texto personalizado\n<InputUpload\n  title=\"Sube tu archivo aqu√≠\"\n  text=\"Arrastra y suelta tu archivo o selecci√≥nalo desde tu dispositivo\"\n/>\nInputUpload con previsualizaci√≥n de imagen\n<InputUpload tagPreview=\"img\" />\nInputUpload con un bot√≥n personalizado\n<InputUpload btn={<Button>Cargar Archivo</Button>} />"}},"/components/lavalamp":{"title":"LavaLamp","data":{"":"El componente LavaLamp genera un fondo animado que simula el efecto de una l√°mpara de lava con m√∫ltiples elementos flotantes. Los elementos pueden personalizarse en estilo, tama√±o, animaci√≥n y cantidad.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente LavaLamp, se puede hacer desde fenextjs\nimport { LavaLamp } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tnItems\tnumber\tno\t20\tN√∫mero de elementos flotantes en la l√°mpara de lava.\tstyles\tCSSProperties\tno\t{ width: \"100%\", height: \"500px\",background: \"linear-gradient(45deg,var(--fenext-color-blue) 0%,var(--fenext-color-teal) 100%)\"}\tEstilos generales aplicados al contenedor de la l√°mpara de lava.\tstylesElement\tLavaLampStylesElement[]\tno\t\tEstilos aplicados a los elementos individuales flotantes en la l√°mpara de lava.\tranges\tLavaLampRangeStylesProps\tno\t{}\tPropiedades de rango aleatorio para determinar el movimiento, escala y posici√≥n de los elementos.\tclassName\tstring\tno\t''\tClase CSS adicional para personalizar el contenedor del componente.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"Uso b√°sico\n<LavaLamp />\nCon estilos personalizados\n<LavaLamp styles={{ width: \"80%\", height: \"600px\" }} />\nCon elementos personalizados\n<LavaLamp stylesElement={[{ width: \"200px\", background: \"red\" }]} />"}},"/components/layout/grid/gridmenuleft":{"title":"LayoutGridMenuLeft","data":{"":"El componente LayoutGridMenuLeft organiza el contenido en un dise√±o de cuadr√≠cula, con un men√∫ a la izquierda que puede mostrarse u ocultarse. Adem√°s, admite alertas, carga de p√°gina y otros elementos opcionales.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente LayoutGridMenuLeft, se puede hacer desde fenextjs\nimport { LayoutGridMenuLeft } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tuseAlertHook\tboolean\tno\ttrue\tIndica si se debe renderizar el componente de alerta (AlertHook).\talertHookProps\tAlertHookProps\tno\t{}\tPropiedades para configurar el AlertHook.\tloader\tboolean\tno\tfalse\tIndica si la p√°gina est√° en estado de carga, mostrando un indicador de carga.\tmenuLeft\tReactNode\tno\tundefined\tContenido que se renderiza en el men√∫ izquierdo del layout.\tmenuLeftActive\tboolean\tno\ttrue\tIndica si el men√∫ izquierdo est√° activo.\tmenuLeftMovilActive\tboolean\tno\tfalse\tIndica si el men√∫ izquierdo est√° activo en dispositivos m√≥viles.\tuseHeaderButtonMenu\tboolean\tno\tfalse\tPermite mostrar un bot√≥n en el encabezado para alternar el men√∫.\tusePageProgress\tboolean\tno\ttrue\tHabilita una barra de progreso de la p√°gina.\ttarget\tstring\tno\t'fenext-btn-menu-checkbox'\tEl objetivo del bot√≥n en el men√∫.\tclassName\tstring\tno\t''\tClase CSS para el componente principal.\tclassNameMenuLeft\tstring\tno\t''\tClase CSS para el men√∫ izquierdo.\tclassNameMenuLeftContent\tstring\tno\t''\tClase CSS para el contenido del men√∫ izquierdo.\tclassNameChildren\tstring\tno\t''\tClase CSS para el contenedor de los hijos del componente.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"Uso b√°sico\n<LayoutGridMenuLeft />\nCon men√∫ personalizado\n<LayoutGridMenuLeft menuLeft={<CustomMenu />} />\nCon estado de carga\n<LayoutGridMenuLeft loader={true} />"}},"/components/layout/grid/gridmenutopleft":{"title":"LayoutGridMenuTopLeft","data":{"":"Este componente combina el dise√±o de men√∫ superior y el men√∫ lateral izquierdo, permitiendo una estructura flexible para mostrar contenido, alertas y un indicador de progreso de p√°gina.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente LayoutGridMenuTopLeft, se puede hacer desde fenextjs\nimport { LayoutGridMenuTopLeft } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tuseAlertHook\tboolean\tno\ttrue\tIndica si se debe renderizar el componente de alerta (AlertHook).\talertHookProps\tAlertHookProps\tno\t{}\tPropiedades para el componente AlertHook.\tloader\tboolean\tno\tfalse\tIndica si la p√°gina est√° en estado de carga, mostrando un indicador de carga.\tmenuTop\tReactNode\tno\tundefined\tElemento del men√∫ superior dentro del layout.\tmenuLeft\tReactNode\tno\tundefined\tElemento del men√∫ lateral izquierdo dentro del layout.\tmenuLeftActive\tboolean\tno\ttrue\tIndica si el men√∫ lateral izquierdo est√° activo.\tmenuLeftMovilActive\tboolean\tno\tfalse\tIndica si el men√∫ lateral izquierdo est√° activo en dispositivos m√≥viles.\tuseHeaderButtonMenu\tboolean\tno\tfalse\tIndica si el bot√≥n del men√∫ en el header est√° habilitado.\tusePageProgress\tboolean\tno\ttrue\tIndica si se debe mostrar la barra de progreso de la p√°gina.\tclassName\tstring\tno\t''\tClase CSS personalizada para el contenedor del layout.\tclassNameLoader\tstring\tno\t''\tClase CSS personalizada para el indicador de carga.\tclassNameChildren\tstring\tno\t''\tClase CSS personalizada para el contenido de los hijos.\tclassNameMenuTop\tstring\tno\t''\tClase CSS personalizada para el men√∫ superior.\tclassNameMenuLeft\tstring\tno\t''\tClase CSS personalizada para el men√∫ lateral izquierdo.\tclassNameMenuLeftContent\tstring\tno\t''\tClase CSS personalizada para el contenido del men√∫ lateral izquierdo.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"B√°sico\n<LayoutGridMenuTopLeft />\nCon men√∫ superior y lateral\n<LayoutGridMenuTopLeft\n  menuTop={<div>Men√∫ Top</div>}\n  menuLeft={<div>Men√∫ Izquierdo</div>}\n/>\nCon barra de progreso deshabilitada\n<LayoutGridMenuTopLeft usePageProgress={false} />\nCon alertas personalizadas\n<LayoutGridMenuTopLeft\n  useAlertHook={true}\n  alertHookProps={{ message: \"Alerta\" }}\n/>"}},"/components/layout/grid/gridmenutop":{"title":"LayoutGridMenuTop","data":{"":"El componente LayoutGridMenuTop es un dise√±o de cuadr√≠cula que incluye un men√∫ superior y permite gestionar una barra de progreso de p√°gina, mostrar alertas personalizadas y un indicador de carga.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente LayoutGridMenuTop, se puede hacer desde fenextjs\nimport { LayoutGridMenuTop } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tuseAlertHook\tboolean\tno\ttrue\tIndica si se debe renderizar el componente de alerta (AlertHook).\talertHookProps\tAlertHookProps\tno\t{}\tPropiedades para el componente AlertHook.\tloader\tboolean\tno\tfalse\tIndica si la p√°gina est√° en estado de carga, mostrando un indicador de carga.\tmenuTop\tReactNode\tno\tundefined\tElemento del men√∫ superior dentro del layout.\tusePageProgress\tboolean\tno\ttrue\tIndica si se debe mostrar la barra de progreso de p√°gina.\tclassName\tstring\tno\t''\tClase CSS personalizada para el contenedor del layout.\tclassNameLoader\tstring\tno\t''\tClase CSS personalizada para el indicador de carga.\tclassNameChildren\tstring\tno\t''\tClase CSS personalizada para el contenido de los hijos.\tclassNameMenuTop\tstring\tno\t''\tClase CSS personalizada para el men√∫ superior.","funcionalidad-de-alerthook#Funcionalidad de AlertHook":"Si 'useAlertHook' est√° habilitado, el componente de alerta (AlertHook) se renderiza con las propiedades proporcionadas en 'alertHookProps'.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"B√°sico\n<LayoutGridMenuTop />\nCon men√∫ superior\n<LayoutGridMenuTop menuTop={<div>Men√∫</div>} />\nCon barra de progreso deshabilitada\n<LayoutGridMenuTop usePageProgress={false} />\nCon alertas personalizadas\n<LayoutGridMenuTop useAlertHook={true} alertHookProps={{ message: \"Alerta\" }} />"}},"/components/link":{"title":"Link","data":{"":"El componente Link es una representaci√≥n personalizada de un enlace que utiliza Next.js Link para manejar la navegaci√≥n entre p√°ginas. Soporta propiedades espec√≠ficas para controlar el comportamiento del enlace, como el destino, la pol√≠tica de referenciaci√≥n y la clase CSS para personalizaci√≥n adicional.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente Link, se puede hacer desde fenextjs\nimport { Link } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tclassName\tstring\tno\t''\tClase CSS para personalizar el estilo del enlace.\tchildren\tReactNode\tno\t''\tContenido o texto que se muestra dentro del enlace.\ttarget\t'_self' | '_blank' | '_parent' | '_top'\tno\t'_self'\tDefine el destino donde se abrir√° el enlace.\treferrerPolicy\tstring\tno\t''\tPol√≠tica de referencia que se debe usar al navegar a trav√©s del enlace.\trel\tstring\tno\t''\tEspecifica la relaci√≥n entre el documento actual y el enlace.\thref\tstring\ts√≠\t''\tURL a la que se navega cuando se hace click en el enlace.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"Enlace b√°sico\n<Link href=\"/about\">About Us</Link>\nEnlace con apertura en nueva pesta√±a\n<Link href=\"/contact\" target=\"_blank\">\n  Contact Us\n</Link>"}},"/components/loader/current":{"title":"Loader","data":{"":"El componente Loader se utiliza para mostrar un indicador de carga. Se puede personalizar utilizando una clase CSS espec√≠fica para adaptar su estilo.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente Loader, se puede hacer desde fenextjs\nimport { Loader } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tclassNameLoader\tstring\tno\t''\tClase CSS para personalizar el estilo del indicador de carga.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"Loader b√°sico\n<Loader />\nLoader con clase personalizada\n<Loader classNameLoader=\"custom-loader\" />"}},"/components/loader/line":{"title":"LoaderLine","data":{"":"El componente LoaderLine se utiliza para mostrar un indicador de carga en forma de l√≠nea. Se puede personalizar tanto su altura como su estilo utilizando una clase CSS espec√≠fica.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente LoaderLine, se puede hacer desde fenextjs\nimport { LoaderLine } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tclassNameLoaderLine\tstring\tno\t''\tClase CSS para personalizar el estilo de la l√≠nea del indicador de carga.\theight\tnumber\tno\t20\tAltura de la l√≠nea del indicador de carga, en p√≠xeles.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"LoaderLine b√°sico\n<LoaderLine />\nLoaderLine con altura personalizada\n<LoaderLine height={30} />\nLoaderLine con clase personalizada\n<LoaderLine classNameLoaderLine=\"custom-loader-line\" />"}},"/components/loader/spinner":{"title":"LoaderSpinner","data":{"":"El componente LoaderSpinner se utiliza para mostrar un indicador de carga en forma de spinner o c√≠rculo giratorio. Se puede personalizar su estilo utilizando una clase CSS espec√≠fica.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente LoaderSpinner, se puede hacer desde fenextjs\nimport { LoaderSpinner } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tclassNameLoaderSpinner\tstring\tno\t''\tClase CSS para personalizar el estilo del spinner.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"LoaderSpinner b√°sico\n<LoaderSpinner />\nLoaderSpinner con clase personalizada\n<LoaderSpinner classNameLoaderSpinner=\"custom-loader-spinner\" />"}},"/components/loader/user":{"title":"LoaderUser","data":{"":"El componente LoaderUser muestra un indicador de carga simulando la carga de informaci√≥n de un usuario, incluyendo imagen, nombre y correo electr√≥nico. Se pueden personalizar las clases CSS para cada parte del componente.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente LoaderUser, se puede hacer desde fenextjs\nimport { LoaderUser } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tclassNameLoaderUser\tstring\tno\t''\tClase CSS para personalizar el contenedor del componente del usuario cargando.\tclassNameLoaderUserImg\tstring\tno\t''\tClase CSS para personalizar la imagen del indicador de carga del usuario.\tclassNameLoaderUserName\tstring\tno\t''\tClase CSS para personalizar el nombre del indicador de carga del usuario.\tclassNameLoaderUserEmail\tstring\tno\t''\tClase CSS para personalizar el correo electr√≥nico del indicador de carga del usuario.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"LoaderUser b√°sico\n<LoaderUser />\nLoaderUser con clases personalizadas\n<LoaderUser\n  classNameLoaderUser=\"custom-user\"\n  classNameLoaderUserImg=\"custom-img\"\n/>"}},"/components/media/input":{"title":"MediaInput","data":{"":"El componente MediaInput permite a los usuarios seleccionar o cargar im√°genes a trav√©s de una interfaz que incluye botones y galer√≠as de im√°genes. Admite m√∫ltiples selecciones y permite personalizaci√≥n a trav√©s de varios props, como t√≠tulos, iconos y comportamiento del modal.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente MediaInput, se puede hacer desde fenextjs\nimport { MediaInput } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tclassName\tstring\tno\t''\tClase CSS para personalizar el contenedor del componente MediaInput.\ttitleView\tstring\tno\t'Upload Image'\tT√≠tulo que se muestra en la vista de carga de im√°genes.\ttextView\tstring\tno\t'Click for select or upload Image.'\tTexto que se muestra en la vista de carga de im√°genes.\ticonView\tReactNode\tno\tundefined\tIcono que se muestra junto al t√≠tulo y texto de la vista de carga.\tdefaultValue\tImgDataProps[] | ImgDataProps\tno\tundefined\tValor por defecto del componente, que puede ser una o varias im√°genes.\tmultiple\tboolean\tno\tfalse\tDefine si se pueden seleccionar m√∫ltiples im√°genes.\tonChange\t(data: ImgDataProps[] | ImgDataProps | undefined) => void\tno\tundefined\tFunci√≥n que se ejecuta cuando cambian los datos seleccionados o cargados.\tButtonUploadProps\tOmit<ButtonProps, 'onClick'>\tno\t{ children: 'Upload Image', full: true }\tPropiedades del bot√≥n de subida de im√°genes.\tMediaPageProps\tOmit<MediaPageProps, 'onChange' | 'multiple' | 'defaultValue'>\tno\t{}\tPropiedades adicionales para la galer√≠a de medios.\tModalProps\tPick<ModalBaseBaseProps, 'type'>\tno\t{ type: 'full' }\tPropiedades del modal que contiene la galer√≠a de im√°genes.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"MediaInput b√°sico\n<MediaInput />\nMediaInput con m√∫ltiples im√°genes\n<MediaInput multiple={true} />\nMediaInput con valores predeterminados\n<MediaInput defaultValue={defaultImages} />"}},"/components/modal/base":{"title":"ModalBase","data":{"":"El componente ModalBase proporciona una base flexible para modales con diferentes posiciones, tipos de cierre y opciones de visibilidad.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente ModalBase, se puede hacer desde fenextjs\nimport { ModalBase } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tactive\tboolean\tno\tfalse\tIndica si el modal est√° activo.\tactiveName\tboolean | null\tno\tundefined\tIndica si el nombre espec√≠fico del modal est√° activo.\tactiveNameLast\tboolean | null\tno\tundefined\tIndica si el √∫ltimo nombre activo del modal est√° activo.\tchildrenUseActiveForShowHidden\tboolean\tno\tfalse\tDetermina si los elementos secundarios utilizan el estado activo para mostrarse u ocultarse.\tdisabledClose\tboolean\tno\tfalse\tIndica si el cierre del modal est√° deshabilitado.\tuseRender\tboolean\tno\ttrue\tDetermina si el modal utiliza renderizaci√≥n condicional.\ttype\t'top' | 'left' | 'right' | 'bottom' | 'center' | 'full' | 'layout-grid' | 'top-right' | 'top-left' | 'bottom-right' | 'bottom-left'\tno\t'center'\tDefine el tipo de modal o la posici√≥n en la que se muestra.\ttypeClose\t'out' | 'inset' | 'none'\tno\t'out'\tEspecifica el tipo de bot√≥n de cierre para el modal.\tonClose\tfunction\tno\tundefined\tFunci√≥n que se ejecuta al cerrar el modal.\tname\tstring\tno\tundefined\tNombre identificador del modal.\tnameLocalStorage\tstring\tno\tundefined\tNombre clave en localStorage para el modal.\tcloseComponent\tReactNode\tno\t<Close />\tComponente personalizado de cierre para el modal.\tclassName\tstring\tno\t''\tClase CSS para personalizar el contenedor del modal.\tclassNameBg\tstring\tno\t''\tClase CSS para personalizar el fondo del modal.\tclassNameClose\tstring\tno\t''\tClase CSS para personalizar el icono de cierre del modal.\tclassNameContent\tstring\tno\t''\tClase CSS para personalizar el contenido del modal.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"Modal b√°sico\n<ModalBase active={true} />\nModal con contenido personalizado\n<ModalBase active={true}>Contenido del modal</ModalBase>\nModal con bot√≥n de cierre deshabilitado\n<ModalBase active={true} disabledClose={true} />\nModal con posici√≥n superior derecha\n<ModalBase active={true} type=\"top-right\" />"}},"/components/media/page":{"title":"MediaPage","data":{"":"El componente MediaPage proporciona una interfaz para subir, mostrar y seleccionar im√°genes, con funcionalidades adicionales como eliminaci√≥n, aceptaci√≥n y un header personalizable. Permite manejar tanto una imagen √∫nica como m√∫ltiples im√°genes.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente MediaPage, se puede hacer desde fenextjs\nimport { MediaPage } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tclassName\tstring\tno\t''\tClase CSS para personalizar el contenedor del componente MediaPage.\tmultiple\tboolean\tno\tfalse\tDetermina si se pueden seleccionar o subir m√∫ltiples im√°genes a la vez.\tonChange\t(data: ImgDataProps[] | ImgDataProps | undefined) => void\tno\tundefined\tFunci√≥n que se ejecuta cuando hay cambios en las im√°genes seleccionadas o cargadas.\tonUploadImg\t(data: ImgDataProps) => void\tno\tundefined\tFunci√≥n que se ejecuta cuando se sube una imagen.\tonDeleteImg\t(data: ImgDataProps) => void\tno\tundefined\tFunci√≥n que se ejecuta cuando se elimina una imagen.\tonAcepte\t(data: ImgDataProps[] | ImgDataProps) => void\tno\tundefined\tFunci√≥n que se ejecuta cuando se acepta la selecci√≥n de im√°genes.\tHeaderPage\tReactNode\tno\t\n<Title tag=\"h3\">Media</Title>\n<Text>Upload or Select Imagen.</Text> | Contenido del encabezado de la p√°gina de medios, se puede personalizar. |\n| defaultValue | ImgDataProps[] | ImgDataProps | no | undefined | Valor por defecto del componente, que puede ser una o varias im√°genes. |\n| images | ImgDataProps[] | no | [] | Im√°genes a mostrar en el componente MediaPage. |\n| loaderImages | boolean | no | false | Muestra un cargador mientras las im√°genes est√°n siendo cargadas. |\n| disabledSelectImg | boolean | no | false | Deshabilita la opci√≥n de seleccionar im√°genes. |\n| InputUploadProps | Omit<InputUploadProps, 'onChange' | 'defaultValue' | 'onChangeProgress' | 'onUploadFile' | 'clearAfterUpload'> | no | {\naccept: [\"png\", \"jpg\", \"jpeg\", \"webp\"],\ntitle: \"Upload Imagen\",\ntext: \"Click for select or upload Imagen.\",\n} | Propiedades para personalizar el componente InputUpload utilizado dentro de MediaPage. |\n| ButtonAcceptProps | Omit<ButtonProps, 'onClick'> | no | { children: 'Acepte' } | Propiedades del bot√≥n de aceptaci√≥n. |\n| ButtonCancelProps | Omit<ButtonProps, 'onClick'> | no | { children: 'Cancel' } | Propiedades del bot√≥n de cancelaci√≥n. |\n| isPage | boolean | no | true | Determina si el componente se comporta como una p√°gina completa de medios o como un componente en l√≠nea. |\n| extraContentImgs | ReactNode | no | undefined | Contenido adicional que se puede agregar junto a las im√°genes en MediaPage. |\n| onRenderImg | (data: ImgDataProps) => ReactNode | no | undefined | Funci√≥n que permite renderizar im√°genes personalizadas dentro de la galer√≠a. |","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"MediaPage b√°sico\n<MediaPage />\nMediaPage con im√°genes predeterminadas\n<MediaPage defaultValue={defaultImages} />\nMediaPage con m√∫ltiples im√°genes\n<MediaPage multiple={true} />"}},"/components/modal/modal":{"title":"Modal","data":{"":"El componente Modal permite crear una ventana modal personalizable con opciones de activaci√≥n, cierre y renderizado condicional, heredando propiedades de ModalBase.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente Modal, se puede hacer desde fenextjs\nimport { Modal } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tElementActionModalActive\tReactNode\tno\tundefined\tElemento que activa el modal al hacer clic.\tdisabledElementActionModalActive\tboolean\tno\tfalse\tIndica si el elemento activador del modal est√° deshabilitado.\tonActive\tfunction\tno\tundefined\tFunci√≥n que se ejecuta cuando el modal se activa.\tactiveByNameLocalStorage\tboolean\tno\tfalse\tIndica si el estado activo del modal se almacena en localStorage.\tactiveByNameContentLocalStorage\tboolean\tno\tfalse\tDetermina si el contenido del modal activo se almacena en localStorage.\tclassNameElementActionModalActive\tstring\tno\t''\tClase CSS para el elemento activador del modal.\tclassNameModal\tModalBaseClassProps\tno\t{}\tObjeto que contiene las clases CSS personalizables del modal.\tchildren\tReactNode\tno\tundefined\tContenido o elementos a mostrar dentro del modal.\tactive\tboolean\tno\tundefined\tDetermina si el modal est√° activo.\tonClose\tfunction\tno\tundefined\tFunci√≥n que se ejecuta al cerrar el modal.\ttype\t'top' | 'left' | 'right' | 'bottom' | 'center' | 'full' | 'layout-grid' | 'top-right' | 'top-left' | 'bottom-right' | 'bottom-left'\tno\t'center'\tDefine el tipo o la posici√≥n del modal.\ttypeClose\t'out' | 'inset' | 'none'\tno\t'out'\tEspecifica el tipo de bot√≥n de cierre para el modal.\tdisabledClose\tboolean\tno\tfalse\tIndica si el cierre del modal est√° deshabilitado.\tuseRender\tboolean\ts√≠\tfalse\tDetermina si el modal usa renderizado condicional.\tname\tstring\tno\tundefined\tNombre identificador del modal.\tnameLocalStorage\tstring\tno\tundefined\tClave de almacenamiento en localStorage para el estado del modal.\tcloseComponent\tReactNode\tno\tundefined\tComponente personalizado de cierre para el modal.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"Modal b√°sico\n<Modal active={true}>Contenido del modal</Modal>\nModal con cierre deshabilitado\n<Modal active={true} disabledClose={true} />\nModal con activador personalizado\n<Modal ElementActionModalActive={<button>Abrir Modal</button>} />\nModal con posici√≥n superior derecha\n<Modal active={true} type=\"top-right\" />"}},"/components/pageprogress":{"title":"PageProgress","data":{"":"El componente PageProgress muestra una barra de progreso visual durante los cambios de ruta en Next.js, indicando al usuario el estado de carga de la p√°gina.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente PageProgress, se puede hacer desde fenextjs\nimport { PageProgress } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tclassName\tstring\tno\t''\tClase CSS para personalizar el contenedor de la barra de progreso.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"Barra de progreso b√°sica\n<PageProgress />\nBarra de progreso personalizada\n<PageProgress className=\"mi-clase-personalizada\" />"}},"/components/pagination/paginationnpage":{"title":"PaginationNPage","data":{"":"Componente de selecci√≥n de elementos por p√°gina para la paginaci√≥n, permitiendo seleccionar el n√∫mero de elementos a mostrar en cada p√°gina.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente PaginationNPage, se puede hacer desde fenextjs\nimport { PaginationNPage } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tclassName\tstring\tno\t''\tClase CSS para el contenedor principal del componente de paginaci√≥n.\tdefaultValue\tstring | number\tno\t\tValor por defecto de la opci√≥n seleccionada en el men√∫ desplegable.\tlistNpage\tArray<{ id: string | number; text: string }>\tno\t[{ id: \"10\", text: \"10\" }, { id: \"20\", text: \"20\" }, { id: \"50\", text: \"50\" }, { id: \"100\", text: \"100\" }, { id: \"all\", text: \"All\" }]\tLista de opciones para el n√∫mero de elementos por p√°gina que se puede seleccionar.\tonChangeNPage\t(value: string | number) => void\tno\t\tFunci√≥n de callback que se llama cuando cambia la opci√≥n seleccionada en el men√∫ desplegable.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"Componente de selecci√≥n de n√∫mero de elementos por p√°gina con valor por defecto de 20\n<PaginationNPage defaultValue=\"20\" />\nComponente de selecci√≥n de n√∫mero de elementos por p√°gina con clases personalizadas\n<PaginationNPage className=\"custom-pagination-class\" />\nComponente con callback en cambio de selecci√≥n\n<PaginationNPage\n  onChangeNPage={(value) => console.log(\"Elementos por p√°gina:\", value)}\n/>"}},"/components/pagination/paginationall":{"title":"Pagination","data":{"":"El componente Pagination permite la navegaci√≥n de contenido paginado y ofrece opciones de personalizaci√≥n de estilo para adaptarse a diferentes dise√±os y temas.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente Pagination, se puede hacer desde fenextjs\nimport { Pagination } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tclassName\tstring\tno\t''\tClase CSS para el contenedor principal de la paginaci√≥n.\tclassNameItemPage\tPaginationItemPageClassProps\tno\t{}\tObjeto con las clases CSS para personalizar el componente de cada p√°gina.\tclassNameNPage\tPaginationNPageClassProps\tno\t{}\tObjeto con las clases CSS para personalizar el componente de selecci√≥n de n√∫mero de p√°gina.\tshowItemPage\tboolean\tno\ttrue\tDetermina si se debe mostrar el componente de cada p√°gina en la paginaci√≥n.\tshowNPage\tboolean\tno\ttrue\tDetermina si se debe mostrar el componente de selecci√≥n de n√∫mero de p√°gina en la paginaci√≥n.\tlistNpage\tArray<{ id: string; text: string }>\tno\t[\t\n{ id: \"10\", text: \"10\" },\n{ id: \"20\", text: \"20\" },\n{ id: \"50\", text: \"50\" },\n{ id: \"100\", text: \"100\" },\n{ id: \"all\", text: \"All\" }\n] | Lista de opciones de n√∫mero de p√°gina para mostrar en la selecci√≥n de paginaci√≥n. |","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"Paginaci√≥n b√°sica\n<Pagination />\nPaginaci√≥n con selecci√≥n de n√∫mero de p√°gina oculta\n<Pagination showNPage={false} />\nPaginaci√≥n personalizada\n<Pagination className=\"mi-clase-personalizada\" />"}},"/components/pagination/paginationitempage":{"title":"PaginationItemPage","data":{"":"Componente de paginaci√≥n que permite navegar entre p√°ginas de una lista de elementos, con opciones de personalizaci√≥n para los iconos y las clases CSS.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente PaginationItemPage, se puede hacer desde fenextjs\nimport { PaginationItemPage } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tclassNameContent\tstring\tno\t''\tClase CSS para el contenedor principal de la paginaci√≥n.\tclassNameUp\tstring\tno\t''\tClase CSS para el bot√≥n 'Go Up'.\tclassNamePre\tstring\tno\t''\tClase CSS para el bot√≥n de p√°gina anterior.\tclassNameCurrent\tstring\tno\t''\tClase CSS para el n√∫mero de la p√°gina actual.\tclassNameCurrentItem\tstring\tno\t''\tClase CSS para el elemento de la p√°gina actual.\tclassNameNext\tstring\tno\t''\tClase CSS para el bot√≥n de la p√°gina siguiente.\tclassNameDown\tstring\tno\t''\tClase CSS para el bot√≥n 'Go Down'.\ticons\tobject\tno\t{ up: <PaginationUp />, pre: <PaginationPre />, next: <PaginationNext />, down: <PaginationDown /> }\tObjetos de iconos personalizados para cada bot√≥n de la paginaci√≥n.\tdefaultPage\tnumber\tno\t0\tP√°gina por defecto a mostrar al montar el componente.\tnItems\tnumber\ts√≠\t\tN√∫mero total de elementos a paginar.\tnItemsPage\tnumber\tno\t10\tN√∫mero de elementos a mostrar por p√°gina.\tdisabled\tboolean\tno\tfalse\tDeshabilita la navegaci√≥n del componente si se establece en true.\thiddenIfNItemsSmallerThanOrEqualNItemsPage\tboolean\tno\ttrue\tOculta la paginaci√≥n si el n√∫mero de elementos es menor o igual que los elementos por p√°gina.\tonChangePage\t(page: number) => void\tno\t\tFunci√≥n de callback que se llama cuando cambia la p√°gina.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"Paginaci√≥n b√°sica con 50 elementos y 10 elementos por p√°gina\n<PaginationItemPage nItems={50} />\nPaginaci√≥n con estilos personalizados y deshabilitada\n<PaginationItemPage nItems={50} classNameContent=\"custom-class\" disabled />\nPaginaci√≥n con callback en cambio de p√°gina\n<PaginationItemPage\n  nItems={50}\n  onChangePage={(page) => console.log(\"P√°gina actual:\", page)}\n/>"}},"/components/portal":{"title":"Portal","data":{"":"El componente Portal permite renderizar sus elementos secundarios (children) en un contenedor DOM espec√≠fico, separado de la jerarqu√≠a DOM principal de la aplicaci√≥n. Utiliza ReactDOM.createPortal para realizar esta funcionalidad.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente Portal, se puede hacer desde fenextjs\nimport { Portal } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tcontainer\tElement | DocumentFragment\tno\tdocument.body\tElemento DOM donde se montar√°n los elementos secundarios. Si no se proporciona, el body del documento se usa como contenedor predeterminado.\tchildren\tReactNode\ts√≠\tN/A\tContenido que se renderizar√° dentro del portal.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"Portal b√°sico\n<Portal>\n  <div>Contenido en Portal</div>\n</Portal>\nPortal con contenedor espec√≠fico\n<Portal container={document.getElementById(\"mi-contenedor\")}>\n  <div>Contenido en un contenedor espec√≠fico</div>\n</Portal>"}},"/components/print/page":{"title":"PrintPage","data":{"":"El componente PrintPage permite renderizar contenido listo para impresi√≥n y proporciona un hook usePrintData para gestionar la carga y obtenci√≥n de datos necesarios para la impresi√≥n.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente PrintPage, se puede hacer desde fenextjs\nimport { PrintPage } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tclassName\tstring\tno\t''\tClase CSS para personalizar el contenedor del componente PrintPage.\tonComponent\t(data: PrintPageComponentProps<T>) => ReactNode\ts√≠\tN/A\tFunci√≥n que retorna el contenido a renderizar dentro del componente de impresi√≥n, aceptando datos de tipo PrintPageComponentProps\\<T\\>.\tdata\tT | undefined\tno\tundefined\tDatos utilizados dentro del componente para la impresi√≥n, gestionados a trav√©s del hook usePrintData.\tload\tboolean\tno\tfalse\tIndica si el componente est√° en estado de carga, mostrando un indicador de carga si es true.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"PrintPage b√°sico\n<PrintPage\n  onComponent={({ data, load }) => (\n    <div>\n      {load\n        ? \"Cargando...\"\n        : data\n          ? \"Contenido listo para imprimir\"\n          : \"Sin datos\"}\n    </div>\n  )}\n/>\nPrintPage con clase personalizada\n<PrintPage\n  className=\"mi-clase\"\n  onComponent={({ data, load }) => (\n    <div>\n      {load ? \"Cargando...\" : data ? \"Datos cargados\" : \"Sin datos disponibles\"}\n    </div>\n  )}\n/>"}},"/components/progress/line":{"title":"ProgressLine","data":{"":"El componente ProgressLine muestra una barra de progreso lineal que indica el avance de una tarea o el porcentaje completado. Incluye una opci√≥n para mostrar el porcentaje num√©rico junto a la barra.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente ProgressLine, se puede hacer desde fenextjs\nimport { ProgressLine } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tclassName\tstring\tno\t''\tClase CSS para personalizar el contenedor del componente ProgressLine.\tp\tnumber\ts√≠\tN/A\tValor de progreso representado en la barra, como un n√∫mero entre 0 y 100.\tshowP\tboolean\tno\ttrue\tIndica si el valor num√©rico del progreso (p) se muestra junto a la barra.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"ProgressLine b√°sico\n<ProgressLine p={75} />\nProgressLine con progreso visible\n<ProgressLine p={50} showP={true} />\nProgressLine con clase personalizada\n<ProgressLine p={90} className=\"mi-clase\" />"}},"/components/print/iframe":{"title":"PrintIframe","data":{"":"El componente PrintIframe permite renderizar contenido dentro de un iframe y proporciona una interfaz para imprimirlo. Utiliza el hook usePrintIframe para gestionar la funcionalidad de impresi√≥n en un iframe.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente PrintIframe, se puede hacer desde fenextjs\nimport { PrintIframe } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tclassName\tstring\tno\t''\tClase CSS para personalizar el contenedor del componente PrintIframe.\tonComponent\t(data: PrintIframeComponentProps) => ReactNode\ts√≠\tN/A\tFunci√≥n que retorna el contenido a renderizar dentro del iframe, aceptando datos de tipo PrintIframeComponentProps.\tloader\tboolean\tno\tfalse\tIndica si el iframe est√° en estado de carga, mostrando un indicador de carga.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"PrintIframe b√°sico\n<PrintIframe\n  onComponent={({ loader }) => (\n    <div>{loader ? \"Cargando...\" : \"Contenido a imprimir\"}</div>\n  )}\n/>\nPrintIframe con clase personalizada\n<PrintIframe\n  className=\"mi-clase\"\n  onComponent={({ loader }) => (\n    <div>{loader ? \"Cargando...\" : \"Contenido listo\"}</div>\n  )}\n/>"}},"/components/progress/circle":{"title":"ProgressCircle","data":{"":"El componente ProgressCircle muestra un c√≠rculo de progreso visual que indica el avance de una tarea o porcentaje completado. Ofrece una opci√≥n para mostrar el porcentaje num√©rico en el centro del c√≠rculo.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente ProgressCircle, se puede hacer desde fenextjs\nimport { ProgressCircle } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tclassName\tstring\tno\t''\tClase CSS para personalizar el contenedor del componente ProgressCircle.\tp\tnumber\ts√≠\tN/A\tValor de progreso representado en el c√≠rculo, como un n√∫mero entre 0 y 100.\tshowP\tboolean\tno\ttrue\tIndica si el valor num√©rico del progreso (p) se muestra en el centro del c√≠rculo.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"ProgressCircle b√°sico\n<ProgressCircle p={75} />\nProgressCircle con progreso visible\n<ProgressCircle p={50} showP={true} />\nProgressCircle con clase personalizada\n<ProgressCircle p={90} className=\"mi-clase\" />"}},"/components/schedule/day":{"title":"ScheduleDay","data":{"":"El componente ScheduleDay permite a los usuarios seleccionar un rango de fechas para un d√≠a espec√≠fico y a√±ade m√∫ltiples intervalos de tiempo si es necesario. Utiliza el componente InputDateRange para manejar los intervalos de fecha/hora.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente ScheduleDay, se puede hacer desde fenextjs\nimport { ScheduleDay } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tclassName\tstring\tno\t''\tClase CSS para personalizar el contenedor del componente ScheduleDay.\tdefaultValue\tScheduleDayValueType\tno\t[[undefined, undefined]]\tValor inicial del campo de entrada, representado como un array de rangos de fechas.\tvalue\tScheduleDayValueType\tno\tundefined\tValor actual del campo de entrada, usado para el control del componente desde el exterior.\tonChange\t(v: ScheduleDayValueType) => void\tno\tN/A\tFunci√≥n callback para manejar cambios en el valor del campo de entrada.\tButtonProps\tOmit<ButtonProps, 'onClick'>\tno\t{ children: 'Add Time Range' }\tProps para personalizar el bot√≥n que a√±ade nuevos intervalos de tiempo.\tpropsStart\tInputDateRangeBaseProps\tno\t{ label: 'Start time', placeholder: 'Start time' }\tProps espec√≠ficos para el campo de hora de inicio del rango de fecha.\tpropsEnd\tInputDateRangeBaseProps\tno\t{ label: 'Final hour', placeholder: 'Final hour' }\tProps espec√≠ficos para el campo de hora de fin del rango de fecha.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"Uso b√°sico del ScheduleDay\n<ScheduleDay onChange={(value) => console.log(value)} />\nScheduleDay con valor predeterminado\n<ScheduleDay defaultValue={[[new Date(2023, 0, 1), new Date(2023, 0, 2)]]} />\nScheduleDay con bot√≥n personalizado\n<ScheduleDay\n  ButtonProps={{\n    children: \"A√±adir rango de tiempo\",\n    className: \"mi-clase-boton\",\n  }}\n/>"}},"/components/schedule/weekly":{"title":"ScheduleWeekly","data":{"":"El componente ScheduleWeekly permite a los usuarios gestionar horarios semanales seleccionando intervalos de tiempo espec√≠ficos para cada d√≠a de la semana. Utiliza ScheduleDay y CollapseMultiple para representar los horarios diarios en un formato de colapso.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente ScheduleWeekly, se puede hacer desde fenextjs\nimport { ScheduleWeekly } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tclassName\tstring\tno\t''\tClase CSS para personalizar el contenedor del componente ScheduleWeekly.\ttitle\tReactNode\tno\t'Schedule Weekly'\tT√≠tulo del componente ScheduleWeekly.\tdefaultValue\tScheduleWeeklyValueType\tno\t{}\tValor inicial del horario semanal, estructurado por d√≠as de la semana.\tvalue\tScheduleWeeklyValueType\tno\tundefined\tValor actual del horario semanal, usado para el control del componente desde el exterior.\tonChange\t(v: ScheduleWeeklyValueType) => void\tno\tN/A\tFunci√≥n callback para manejar cambios en el valor del horario semanal.\tCollapseMultipleProps\tOmit<CollapseMultipleProps, 'items'>\tno\t{ name: 'schedule', type: 'radio', defaultActive: 0 }\tProps para personalizar el comportamiento del componente CollapseMultiple que envuelve cada d√≠a de la semana.\tonParseHeaderDay\t(v: DaysEnum) => ReactNode\tno\tundefined\tFunci√≥n para personalizar el encabezado de cada d√≠a de la semana en el colapso.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"Uso b√°sico del ScheduleWeekly\n<ScheduleWeekly onChange={(value) => console.log(value)} />\nScheduleWeekly con t√≠tulo personalizado\n<ScheduleWeekly title=\"Horario Semanal\" />\nScheduleWeekly con CollapseMultipleProps personalizados\n<ScheduleWeekly\n  CollapseMultipleProps={{ type: \"checkbox\", defaultActive: [0, 1] }}\n/>"}},"/components/share":{"title":"Share","data":{"":"El componente Share permite a los usuarios compartir contenido a trav√©s de diversas plataformas como WhatsApp, Facebook, Twitter, correo electr√≥nico o copiar el enlace. Incluye personalizaci√≥n de botones y t√≠tulos.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente Share, se puede hacer desde fenextjs\nimport { Share } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tclassName\tstring\tno\t''\tClase CSS para personalizar el contenedor del componente Share.\tButtonProps\tButtonProps\tno\t{ children: 'Share' }\tProps del componente Button para personalizar el bot√≥n de compartir.\tTitleProps\tTitleProps\tno\t{ children: 'Share', tag: 'h2' }\tProps del componente Title para personalizar el t√≠tulo de la ventana de compartir.\tshare\tstring\tno\t''\tTexto que se comparte en las redes sociales o se copia en el portapapeles.\tshareList\tShareListType[]\tno\t['whatsapp', 'facebook', 'x', 'email', 'copy']\tLista de plataformas de redes sociales o acciones de compartir disponibles en el componente.\tshowShareCopy\tboolean\tno\tfalse\tIndica si se debe mostrar el bot√≥n de copia para compartir el texto.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"Uso b√°sico del Share\n<Share share=\"http://example.com\" />\nShare con t√≠tulo personalizado\n<Share TitleProps={{ children: \"Compartir en redes\" }} />\nShare con opciones espec√≠ficas de redes sociales\n<Share shareList={[\"whatsapp\", \"twitter\"]} />\nShare con bot√≥n de copia de enlace visible\n<Share showShareCopy={true} />"}},"/components/slider":{"title":"Slider","data":{"":"El componente Slider permite crear un carrusel de elementos con opciones de personalizaci√≥n de cantidad de √≠tems visibles, tiempo de animaci√≥n y bucle autom√°tico. Incluye controles de navegaci√≥n y estilos personalizados.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente Slider, se puede hacer desde fenextjs\nimport { Slider } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tclassName\tstring\tno\t''\tClase CSS para personalizar el contenedor principal del componente Slider.\tclassNameContent\tstring\tno\t''\tClase CSS para personalizar el contenedor de contenido del slider.\tclassNameItem\tstring\tno\t''\tClase CSS para personalizar cada √≠tem dentro del slider.\tclassNameDogs\tstring\tno\t''\tClase CSS para personalizar el contenedor de elementos de slider.\tclassNameDog\tstring\tno\t''\tClase CSS para personalizar un elemento individual dentro del contenedor de slider.\tclassNameArrows\tstring\tno\t''\tClase CSS para personalizar las flechas de navegaci√≥n del slider.\tclassNameArrowPre\tstring\tno\t''\tClase CSS para personalizar la flecha de navegaci√≥n anterior.\tclassNameArrowNext\tstring\tno\t''\tClase CSS para personalizar la flecha de navegaci√≥n siguiente.\titems\tReactNode[]\tno\t[]\tArreglo de elementos que se mostrar√°n dentro del slider.\tnItemsDesktop\tnumber\tno\t3\tN√∫mero de elementos visibles en pantallas de escritorio.\tnItemsTable\tnumber\tno\t2\tN√∫mero de elementos visibles en pantallas de tabletas.\tnItemsPhone\tnumber\tno\t1\tN√∫mero de elementos visibles en pantallas de tel√©fonos.\ttimeDelay\tnumber\tno\t4000\tTiempo de espera en milisegundos antes de avanzar autom√°ticamente al siguiente √≠tem.\ttimeAnimation\tnumber\tno\t500\tDuraci√≥n de la animaci√≥n en milisegundos para mover el slider.\tloop\tboolean\tno\ttrue\tDetermina si el slider se reproduce en bucle o se detiene al final.\tseparationItems\tnumber\tno\t16\tEspacio de separaci√≥n en p√≠xeles entre cada √≠tem del slider.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"Uso b√°sico del Slider\n<Slider items={[<Item1 />, <Item2 />, <Item3 />]} />\nSlider con 4 √≠tems en escritorio y 2 en tablet\n<Slider nItemsDesktop={4} nItemsTable={2} />\nSlider con animaci√≥n de 1 segundo y sin bucle\n<Slider timeAnimation={1000} loop={false} />\nSlider con espacio de separaci√≥n de 32px entre √≠tems\n<Slider separationItems={32} />"}},"/components/steps":{"title":"Steps","data":{"":"El componente Steps proporciona una interfaz para mostrar y navegar entre pasos en un proceso secuencial, permitiendo personalizar el contenido, la navegaci√≥n y la apariencia de cada paso.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente Steps, se puede hacer desde fenextjs\nimport { Steps } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\titems\tStepsItemProps[]\ts√≠\t[]\tLos elementos que representan cada paso, incluyendo el contenido, etiqueta, √≠cono y estado del paso.\tdefaultStep\tnumber\tno\t0\tEl paso mostrado inicialmente.\tstep\tnumber\tno\tundefined\tDefine manualmente el paso mostrado.\tuseArrowKey\tboolean\tno\ttrue\tIndica si se pueden usar las teclas de flecha para navegar entre los pasos.\tbtnPrev\tReactNode\tno\t\"Previous\"\tContenido del bot√≥n de retroceso.\tbtnNext\tReactNode\tno\t\"Next\"\tContenido del bot√≥n de avance.\tdisabledBtnPrev\tboolean\tno\tfalse\tDeshabilita el bot√≥n de retroceso.\tdisabledBtnNext\tboolean\tno\tfalse\tDeshabilita el bot√≥n de avance.\tonPrev\t(step: number) => Promise<void> | void\tno\tundefined\tFunci√≥n que se ejecuta al hacer click en el bot√≥n de retroceso.\tonNext\t(step: number) => Promise<void> | void\tno\tundefined\tFunci√≥n que se ejecuta al hacer click en el bot√≥n de avance.\tonSetStep\t(step: number) => void\tno\tundefined\tFunci√≥n que se ejecuta al establecer un nuevo paso.\tstepPos\t'top' | 'left' | 'right'\tno\t'left'\tPosici√≥n de la lista de pasos.\tshowCurrentStepNStep\tboolean\tno\tfalse\tMuestra el paso actual junto al total de pasos.\tuseDogs\tboolean\tno\tfalse\tIndica si se debe utilizar un comportamiento especial (documentaci√≥n adicional requerida).\tclassName\tstring\tno\t\"\"\tClase CSS para el contenedor del componente.\tclassNameContentSteps\tstring\tno\t\"\"\tClase CSS para el contenedor de los pasos.\tclassNameListSteps\tstring\tno\t\"\"\tClase CSS para la lista de pasos.\tclassNameContentItems\tstring\tno\t\"\"\tClase CSS para los elementos de contenido.\tclassNameStep\tstring\tno\t\"\"\tClase CSS para cada paso.\tclassNameStepActive\tstring\tno\t\"\"\tClase CSS para el paso activo.\tclassNameItem\tstring\tno\t\"\"\tClase CSS para cada √≠tem.\tclassNameItemActive\tstring\tno\t\"\"\tClase CSS para el √≠tem activo.\tclassNameStepCircle\tstring\tno\t\"\"\tClase CSS para el c√≠rculo del paso.\tclassNameStepLabel\tstring\tno\t\"\"\tClase CSS para la etiqueta del paso.\tclassNameContentBtn\tstring\tno\t\"\"\tClase CSS para el contenedor de los botones de navegaci√≥n.\tclassNameBtn\tstring\tno\t\"\"\tClase CSS para los botones de navegaci√≥n.\tclassNameBtnNext\tstring\tno\t\"\"\tClase CSS para el bot√≥n de avance.\tclassNameBtnPrev\tstring\tno\t\"\"\tClase CSS para el bot√≥n de retroceso.\tforceShowBtnPrev\tboolean\tno\tfalse\tFuerza la visibilidad del bot√≥n de retroceso.\tforceShowBtnNext\tboolean\tno\tfalse\tFuerza la visibilidad del bot√≥n de avance.","stepsitemprops#StepsItemProps":"Los items de step tienen su propios parametros:\nParametro\tTipo\tDescripci√≥n\tlabel\tReactNode\tLabel del elemento.\ticon\tReactNode\tIcon del elemento.\tcontent\tReactNode\tContenido del elemento.\tstatus\t\"none\" | \"ok\" | \"error\"\tEstatus del elemento.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"Ejemplo b√°sico\n<Steps\n  items={[{ label: \"Paso 1\", content: <div>Contenido del Paso 1</div> }]}\n/>\nEjemplo con pasos personalizados\n<Steps\n  items={[\n    { label: \"Inicio\", content: <div>Contenido Inicio</div> },\n    { label: \"Fin\", content: <div>Contenido Fin</div> },\n  ]}\n  stepPos=\"top\"\n/>\nCon botones deshabilitados\n<Steps disabledBtnPrev={true} disabledBtnNext={true} />"}},"/components/swichview/swichviewlist":{"title":"SwichViewList","data":{"":"El componente SwichViewList permite al usuario alternar entre diferentes vistas o √≠tems mediante una lista de opciones visuales, cada una identificada por un √≠cono y un identificador √∫nico.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente SwichViewList, se puede hacer desde fenextjs\nimport { SwichViewList } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tclassName\tstring\tno\t\"\"\tClase CSS para el contenedor del componente.\tdefaultValue\tT\tno\tundefined\tValor predeterminado de la opci√≥n seleccionada.\tonChange\t(e?: T) => void\tno\tundefined\tFunci√≥n de cambio que se ejecuta al seleccionar una nueva opci√≥n.\tlist\t{ id: T; icon: ReactNode; }[]\tno\t[]\tLista de √≠tems con √≠conos y identificadores √∫nicos para cada opci√≥n.\tname\tstring\tno\t\"fenext-swich-view\"\tNombre del grupo de opciones, √∫til para identificaci√≥n en formularios.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"Ejemplo b√°sico\n<SwichViewList\n  list={[\n    { id: \"1\", icon: <Icon1 /> },\n    { id: \"2\", icon: <Icon2 /> },\n  ]}\n/>\nCon valor predeterminado y funci√≥n de cambio\n<SwichViewList\n  defaultValue=\"1\"\n  onChange={(e) => console.log(\"Seleccionado:\", e)}\n  list={[\n    { id: \"1\", icon: <Icon1 /> },\n    { id: \"2\", icon: <Icon2 /> },\n  ]}\n/>\nUso en un formulario\n<SwichViewList\n  name=\"viewSwitch\"\n  list={[\n    { id: \"grid\", icon: <GridIcon /> },\n    { id: \"list\", icon: <ListIcon /> },\n  ]}\n/>"}},"/components/stepscircle":{"title":"StepsCircle","data":{"":"El componente StepsCircle presenta una serie de pasos circulares que se pueden recorrer, proporcionando opciones de personalizaci√≥n y control de pasos.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente StepsCircle, se puede hacer desde fenextjs\nimport { StepsCircle } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tclassName\tstring\tno\t\"\"\tClase CSS para el contenedor del componente.\titems\tStepsCircleItemProps[]\tno\t[]\tLista de elementos de paso con contenido y funciones de click opcionales.\tdefaultStep\tnumber\tno\tundefined\tEl paso que se mostrar√° inicialmente.\tvalueStep\tnumber\tno\tundefined\tPaso actual cuando se controla externamente.\tdisabled\tboolean\tno\tfalse\tDeshabilita la interacci√≥n con el componente.","stepscircleitemprops#StepsCircleItemProps":"Los items de step tienen su propios parametros:\nParametro\tTipo\tDescripci√≥n\tchildren\tReactNode\tContenido del elemento.\tonClick\tfunction\tFuncion al hacer click en el elemento.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"Ejemplo b√°sico\n<StepsCircle\n  items={[{ children: <div>Paso 1</div> }, { children: <div>Paso 2</div> }]}\n/>\nCon paso predeterminado\n<StepsCircle\n  items={[{ children: <div>Inicio</div> }, { children: <div>Fin</div> }]}\n  defaultStep={0}\n/>\nEjemplo con deshabilitaci√≥n\n<StepsCircle\n  disabled={true}\n  items={[{ children: <div>Paso deshabilitado</div> }]}\n/>"}},"/components/swichview/swichviewselect":{"title":"SwichViewSelect","data":{"":"El componente SwichViewSelect permite al usuario alternar entre diferentes vistas de selecci√≥n mediante opciones visuales, representadas por √≠conos espec√≠ficos para cada vista de selecci√≥n.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente SwichViewSelect, se puede hacer desde fenextjs\nimport { SwichViewSelect } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tclassName\tstring\tno\t\"\"\tClase CSS para el contenedor del componente.\tdefaultValue\t\"fenext-swich-view-select-box\" | \"fenext-swich-view-select-list\" | \"fenext-swich-view-select-normal\"\tno\t\"fenext-swich-view-select-normal\"\tValor predeterminado de la vista de selecci√≥n inicial.\tonChange\t(e?: SwichViewSelectType) => void\tno\tundefined\tFunci√≥n que se ejecuta al seleccionar una nueva vista.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"Ejemplo b√°sico\n<SwichViewSelect />\nCon valor predeterminado y funci√≥n de cambio\n<SwichViewSelect\n  defaultValue=\"fenext-swich-view-select-box\"\n  onChange={(e) => console.log(\"Vista seleccionada:\", e)}\n/>\nAplicando una clase personalizada\n<SwichViewSelect className=\"custom-class\" />"}},"/components/swichview/swichviewtable":{"title":"SwichViewTable","data":{"":"El componente SwichViewTable permite a los usuarios alternar entre diferentes vistas de tabla mediante iconos espec√≠ficos para cada opci√≥n de visualizaci√≥n.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente SwichViewTable, se puede hacer desde fenextjs\nimport { SwichViewTable } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tclassName\tstring\tno\t\"\"\tClase CSS para el contenedor del componente.\tdefaultValue\t\"fenext-swich-view-table-box\" | \"fenext-swich-view-table-list\"\tno\t\"fenext-swich-view-table-list\"\tVista de tabla predeterminada que se muestra al cargar el componente.\tonChange\t(e?: SwichViewTableType) => void\tno\tundefined\tFunci√≥n que se ejecuta cuando se selecciona una nueva vista de tabla.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"Ejemplo b√°sico\n<SwichViewTable />\nCon valor predeterminado y funci√≥n de cambio\n<SwichViewTable\n  defaultValue=\"fenext-swich-view-table-box\"\n  onChange={(e) => console.log(\"Vista de tabla seleccionada:\", e)}\n/>\nAplicando una clase personalizada\n<SwichViewTable className=\"custom-table-class\" />"}},"/components/tab":{"title":"Tab","data":{"":"El componente Tab permite la creaci√≥n de pesta√±as con contenidos asociados, personalizables en clases CSS y comportamiento.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente Tab, se puede hacer desde fenextjs\nimport { Tab } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tclassName\tstring\tno\t\"\"\tClase CSS para el contenedor del componente.\tclassNameContentHead\tstring\tno\t\"\"\tClase CSS para el contenedor del encabezado del contenido de las pesta√±as.\tclassNameHead\tstring\tno\t\"\"\tClase CSS para el encabezado de la pesta√±a.\tclassNameHeadItem\tstring\tno\t\"\"\tClase CSS para cada elemento del encabezado de la pesta√±a.\tclassNameHeadItemActive\tstring\tno\t\"\"\tClase CSS para el elemento activo del encabezado de la pesta√±a.\tclassNameBody\tstring\tno\t\"\"\tClase CSS para el contenedor del cuerpo de las pesta√±as.\tclassNameBodyItem\tstring\tno\t\"\"\tClase CSS para cada elemento del cuerpo de la pesta√±a.\titems\tTabItemProps[]\tno\t[]\tLista de objetos que representan las pesta√±as con encabezado y cuerpo.\tdefaultTab\tnumber\tno\t0\t√çndice de la pesta√±a a mostrar por defecto.\tactiveTab\tnumber\tno\tundefined\t√çndice de la pesta√±a actualmente activa.\tonChange\t(item: TabItemProps) => void\tno\tundefined\tFunci√≥n a ejecutar al cambiar de pesta√±a.\ttabScrollActive\tboolean\tno\tfalse\tDetermina si las pesta√±as deben estar en modo de desplazamiento al seleccionar.\tvalidataTabOneHiddenHeader\tboolean\tno\ttrue\tOculta el encabezado de las pesta√±as si solo hay una pesta√±a presente.\tuseCount\tboolean\tno\tfalse\tPermite mostrar un contador de elementos en el encabezado de la pesta√±a.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"Ejemplo b√°sico\n<Tab\n  items={[\n    { id: \"tab1\", head: \"Tab 1\", body: \"Contenido 1\" },\n    { id: \"tab2\", head: \"Tab 2\", body: \"Contenido 2\" },\n  ]}\n/>\nCon clase personalizada y funci√≥n de cambio\n<Tab\n  className=\"custom-tab\"\n  onChange={(item) => console.log(\"Pesta√±a seleccionada:\", item)}\n/>\nCon contador de elementos en el encabezado\n<Tab\n  items={[\n    {\n      id: \"tab1\",\n      head: \"Tab 1\",\n      body: \"Contenido 1\",\n      useCount: true,\n      count: 3,\n      singular: \"elemento\",\n      plural: \"elementos\",\n    },\n  ]}\n  useCount={true}\n/>"}},"/components/table":{"title":"Table","data":{"":"El componente Table permite mostrar una tabla de datos con funcionalidades avanzadas como paginaci√≥n, selecci√≥n de elementos, ordenaci√≥n, y m√°s.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente Table, se puede hacer desde fenextjs\nimport { Table } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tclassNameContent\tstring\tno\t\"\"\tClase CSS para el contenedor principal de la tabla.\tclassNameContentTable\tstring\tno\t\"\"\tClase CSS para el contenedor del elemento de la tabla.\tclassNameTable\tstring\tno\t\"\"\tClase CSS para el elemento de la tabla.\tclassNameTHead\tstring\tno\t\"\"\tClase CSS para el encabezado de la tabla.\tclassNameTBody\tstring\tno\t\"\"\tClase CSS para el cuerpo de la tabla.\tclassNameThr\tstring\tno\t\"\"\tClase CSS para las filas del encabezado de la tabla.\tclassNameTr\tstring\tno\t\"\"\tClase CSS para las filas de la tabla.\tclassNameTh\tstring\tno\t\"\"\tClase CSS para las celdas del encabezado de la tabla.\tclassNameTd\tstring\tno\t\"\"\tClase CSS para las celdas del cuerpo de la tabla.\tclassNameContentPagination\tstring\tno\t\"\"\tClase CSS para el contenedor de la paginaci√≥n.\tclassNameLoader\tstring\tno\t\"\"\tClase CSS para el elemento del cargador.\tname\tstring\ts√≠\t\tNombre de la tabla.\titems\tT[]\ts√≠\t\tArreglo de datos a mostrar en la tabla.\theader\tTableHeader<T>\ts√≠\t\tConfiguraci√≥n del encabezado de la tabla.\tpagination\tPaginationProps\tno\t\tPropiedades opcionales de la paginaci√≥n de la tabla.\tshowPagination\tboolean\tno\ttrue\tIndica si se debe mostrar la paginaci√≥n en la tabla.\tloader\tboolean\tno\tfalse\tMuestra un cargador mientras se cargan los datos de la tabla.\ttypeLoader\t\"spinner\" | \"line\"\tno\t\"line\"\tTipo de cargador a mostrar.\tuseCheckbox\tboolean\tno\ttrue\tSi se deben incluir casillas de verificaci√≥n en la tabla.\tonChecked\t(items: T[]) => void\tno\t\tFunci√≥n a ejecutar al seleccionar elementos de la tabla.\tonOrderBy\t(order: { id: keyof T; order: \"ASC\" | \"DESC\" }) => void\tno\t\tFunci√≥n a ejecutar para ordenar los datos de la tabla.\tonShowHidden\t(showHidden: { id: keyof T; showHidden: \"SHOW\" | \"HIDDEN\" }) => void\tno\t\tFunci√≥n para mostrar u ocultar columnas de la tabla.\tnotResult\tReactNode\tno\t<div>There is not results</div>\tComponente a mostrar cuando no hay resultados en la tabla.\tactionsCheckbox\tOmit<TableActionCheckboxProps<T>, \"actionAllCheckbox\" | \"data\">\tno\t\tPropiedades para las acciones de selecci√≥n m√∫ltiple de la tabla.\tactionsCheckboxSelectAll\tReactNode\tno\t\"Select All\"\tComponente para seleccionar todas las casillas de verificaci√≥n.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"Tabla b√°sica con datos\n<Table\n  name=\"sampleTable\"\n  items={[\n    { id: 1, name: \"Item 1\" },\n    { id: 2, name: \"Item 2\" },\n  ]}\n  header={[\n    { id: \"id\", th: \"ID\" },\n    { id: \"name\", th: \"Name\" },\n  ]}\n/>\nTabla con paginaci√≥n y selecci√≥n m√∫ltiple\n<Table\n  name=\"paginatedTable\"\n  items={[\n    { id: 1, name: \"Item A\" },\n    { id: 2, name: \"Item B\" },\n  ]}\n  header={[\n    { id: \"id\", th: \"ID\" },\n    { id: \"name\", th: \"Name\" },\n  ]}\n  pagination={{ current: 1, total: 10 }}\n  useCheckbox={true}\n/>\nTabla con ordenaci√≥n y cargador\n<Table\n  name=\"sortableTable\"\n  items={[\n    { id: 1, name: \"Alpha\" },\n    { id: 2, name: \"Beta\" },\n  ]}\n  header={[\n    { id: \"id\", th: \"ID\", parse: (item) => `#${item}` },\n    { id: \"name\", th: \"Name\" },\n  ]}\n  loader={true}\n  typeLoader=\"spinner\"\n/>"}},"/components/text":{"title":"Text","data":{"":"Componente Text que permite mostrar diferentes elementos de texto (p, strong, small, etc.) con soporte para un indicador de carga en forma de l√≠neas de esqueleto.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente Text, se puede hacer desde fenextjs\nimport { Text } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tclassName\tstring\tno\t\"\"\tClase CSS para el contenedor principal del componente.\ttag\t\"p\" | \"strong\" | \"small\" | \"em\" | \"b\" | \"del\" | \"i\" | \"mark\" | \"ins\" | \"sub\" | \"sup\"\tno\t\"p\"\tDefine la etiqueta HTML que se utiliza para el texto. Permite diferentes opciones como p, strong, small, etc.\tloader\tboolean\tno\tfalse\tDetermina si se muestra un indicador de carga. Cuando es true, muestra l√≠neas de carga en lugar del contenido.\tnLineLoader\tnumber\tno\t3\tN√∫mero de l√≠neas de esqueleto que se muestran cuando loader est√° activo.\tchildren\tReactNode\tno\t\tContenido que se mostrar√° dentro del componente Text si loader es false.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"Uso b√°sico del componente Text\n<Text tag=\"strong\" className=\"text-strong\">\n  Texto destacado\n</Text>\nUso del componente Text con el loader activo\n<Text loader={true} nLineLoader={5} />"}},"/components/tableactioncheckbox":{"title":"TableActionCheckbox","data":{"":"Componente TableActionCheckbox que permite realizar acciones sobre un conjunto de datos seleccionados en una tabla, con la opci√≥n de seleccionar todos los elementos usando una casilla de verificaci√≥n.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente TableActionCheckbox, se puede hacer desde fenextjs\nimport { TableActionCheckbox } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tclassName\tstring\tno\t\"\"\tClase CSS para el contenedor principal del componente.\tactionAllCheckbox\tInputCheckboxProps\tno\t\tPropiedades para la casilla de verificaci√≥n que permite seleccionar o deseleccionar todos los elementos.\tactions\t((data: T[]) => ReactNode)[]\tno\t\tArreglo de funciones que toman los datos seleccionados como par√°metro y devuelven un elemento React. Cada funci√≥n representa una acci√≥n que se puede ejecutar en los datos seleccionados.\tdata\tT[]\tno\t\tArreglo de datos en el que se aplicar√°n las acciones definidas.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"Uso b√°sico del TableActionCheckbox\n<TableActionCheckbox\n  className=\"my-checkbox\"\n  data={[\n    { id: 1, name: \"Item 1\" },\n    { id: 2, name: \"Item 2\" },\n  ]}\n  actionAllCheckbox={{ label: \"Select All\" }}\n/>\nUso con acciones personalizadas\n<TableActionCheckbox\n  data={[\n    { id: 1, name: \"Item 1\" },\n    { id: 2, name: \"Item 2\" },\n  ]}\n  actions={[\n    (selectedData) => (\n      <button onClick={() => console.log(selectedData)}>Delete</button>\n    ),\n    (selectedData) => (\n      <button onClick={() => console.log(selectedData)}>Edit</button>\n    ),\n  ]}\n/>"}},"/components/theme":{"title":"Theme","data":{"":"El componente Theme permite gestionar y representar visualmente los temas de la aplicaci√≥n, utilizando la funcionalidad y componentes proporcionados por fenextjs-svg y fenextjs-hook.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente Theme, se puede hacer desde fenextjs\nimport { Theme } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tclassName\tstring\tno\t''\tClase CSS para personalizar el contenedor del componente.\tclassNameItem\tstring\tno\t''\tClase CSS para los elementos dentro del componente.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"B√°sico\n<Theme />\nCon clases personalizadas\n<Theme className=\"custom-theme\" classNameItem=\"custom-theme-item\" />"}},"/components/title":{"title":"Title","data":{"":"El componente Title representa un t√≠tulo de encabezado con soporte para diferentes niveles (h1 a h6), opcionalmente muestra un loader y permite personalizaci√≥n mediante clases CSS.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente Title, se puede hacer desde fenextjs\nimport { Title } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\ttag\t'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6'\tno\t'h1'\tDefine el nivel de encabezado que se utiliza para el componente.\tloader\tboolean\tno\tfalse\tIndica si el componente est√° en estado de carga, mostrando un indicador de carga.\tclassName\tstring\tno\t''\tClase CSS para personalizar el contenedor del t√≠tulo.\tchildren\tReactNode\ts√≠\tundefined\tContenido o texto que se muestra dentro del t√≠tulo.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"T√≠tulo b√°sico\n<Title>Mi t√≠tulo</Title>\nT√≠tulo con nivel h2\n<Title tag=\"h2\">Subt√≠tulo</Title>\nT√≠tulo con loader\n<Title loader={true}>Cargando...</Title>\nT√≠tulo personalizado con clase\n<Title className=\"custom-title\">T√≠tulo personalizado</Title>"}},"/components/tooltip":{"title":"Tooltip","data":{"":"El componente Tooltip muestra informaci√≥n adicional en un cuadro emergente cuando el usuario se desplaza sobre un elemento o interact√∫a con √©l. La posici√≥n del tooltip puede ajustarse en los ejes X e Y.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente Tooltip, se puede hacer desde fenextjs\nimport { Tooltip } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tclassName\tstring\tno\t''\tClase CSS para personalizar el contenedor del tooltip.\tchildren\tReactNode\tno\tundefined\tContenido o elemento que activar√° la visualizaci√≥n del tooltip.\ttooltip\tReactNode\tno\tundefined\tContenido del tooltip que se mostrar√° al usuario.\tpositionX\t'center' | 'right' | 'left'\tno\t'center'\tPosici√≥n horizontal del tooltip en relaci√≥n con el elemento activador.\tpositionY\t'center' | 'top' | 'bottom'\tno\t'top'\tPosici√≥n vertical del tooltip en relaci√≥n con el elemento activador.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"Tooltip b√°sico\n<Tooltip tooltip=\"Texto de ayuda\">Hover aqu√≠</Tooltip>\nTooltip con posici√≥n ajustada\n<Tooltip tooltip=\"Texto de ayuda\" positionX=\"right\" positionY=\"bottom\">\n  Hover aqu√≠\n</Tooltip>\nTooltip con clase personalizada\n<Tooltip tooltip=\"Texto de ayuda\" className=\"custom-tooltip\">\n  Hover aqu√≠\n</Tooltip>"}},"/components/twocolsticky":{"title":"TwoColSticky","data":{"":"El componente TwoColSticky crea una disposici√≥n de dos columnas, donde una columna es fija (sticky) y la otra es desplazable. Se puede personalizar la posici√≥n de la columna sticky, y las clases CSS para cada secci√≥n.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente TwoColSticky, se puede hacer desde fenextjs\nimport { TwoColSticky } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tclassName\tstring\tno\t''\tClase CSS para personalizar el contenedor principal del componente.\tclassNameChildren\tstring\tno\t''\tClase CSS para la columna desplazable del componente.\tclassNameColSticky\tstring\tno\t''\tClase CSS para la columna sticky del componente.\tchildren\tReactNode\tno\tundefined\tContenido que se mostrar√° en la columna desplazable.\tcolSticky\tReactNode\tno\tundefined\tContenido que se mostrar√° en la columna sticky.\tposCol\t'left' | 'right'\tno\t'left'\tPosici√≥n de la columna sticky en el componente.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"TwoColSticky b√°sico\n<TwoColSticky colSticky={<div>Sticky Content</div>}>\n  Scrollable Content\n</TwoColSticky>\nTwoColSticky con columna sticky a la derecha\n<TwoColSticky colSticky={<div>Sticky Content</div>} posCol=\"right\">\n  Scrollable Content\n</TwoColSticky>\nTwoColSticky con clases personalizadas\n<TwoColSticky\n  colSticky={<div>Sticky Content</div>}\n  className=\"custom-container\"\n  classNameChildren=\"custom-children\"\n  classNameColSticky=\"custom-sticky\"\n>\n  Scrollable Content\n</TwoColSticky>"}},"/components/user":{"title":"User","data":{"":"El componente User muestra informaci√≥n de un usuario, incluyendo su imagen, nombre, y correo electr√≥nico. Tambi√©n incluye una opci√≥n de cargador para mostrar un indicador de carga cuando la informaci√≥n del usuario no est√° disponible.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente User, se puede hacer desde fenextjs\nimport { User } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tuser\tPartial<UserProps>\tno\tundefined\tObjeto con la informaci√≥n del usuario, como nombre, imagen, y correo electr√≥nico.\tloader\tboolean\tno\tfalse\tIndica si se debe mostrar el cargador en lugar de la informaci√≥n del usuario.\tclassName\tstring\tno\t''\tClase CSS para personalizar el contenedor principal del componente.\tclassNamePicture\tstring\tno\t''\tClase CSS para personalizar el contenedor de la imagen del usuario.\tclassNameImg\tstring\tno\t''\tClase CSS para la imagen del usuario.\tclassNameName\tstring\tno\t''\tClase CSS para el nombre del usuario.\tclassNameLetter\tstring\tno\t''\tClase CSS para la inicial del nombre del usuario cuando no se tiene imagen.\tclassNameEmail\tstring\tno\t''\tClase CSS para el correo electr√≥nico del usuario.\tclassNameLoader\tLoaderUserClassProps\tno\t{}\tClase CSS para el componente de cargador cuando se muestra en lugar de los datos del usuario.","userprops#UserProps":"Fenextjs posee su interface estandar para:\nPropiedad\tTipo\tDescripci√≥n\tstatus\tUserStatusProps\tEstatus del usuario.\tid\tstring\tId del usuario.\ttoken\tstring\ttoken del usuario.\tname\tstring\tNombre del usuario.\timg\tImgDataProps\tAvatar del usuario.\trole\tUserRoleProps\tRol del usuario.\tphone\tPhoneProps\tTelefono del usuario.\temail\tstring\tCorreo del usuario.\tdateCreate\tDate\tFecha de creacion del usuario.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"User b√°sico\n<User\n  user={{\n    name: \"John Doe\",\n    email: \"john@example.com\",\n  }}\n/>\nUser con imagen de perfil\n<User\n  user={{\n    name: \"Jane Doe\",\n    email: \"jane@example.com\",\n    image: \"/path/to/image.jpg\",\n  }}\n/>\nUser con cargador\n<User loader={true} />\nUser con clases personalizadas\n<User\n  user={{ name: \"John Doe\" }}\n  className=\"custom-container\"\n  classNameName=\"custom-name\"\n/>"}},"/date":{"title":"FenextjsDate","data":{"":"Clase para manipular fechas, proporcionando m√©todos para sumar unidades de tiempo, formatear, validar y comparar fechas.","importaci√≥n#Importaci√≥n":"Para importar el componente FenextjsDate, se puede hacer desde fenextjs\nimport { FenextjsDate } from \"fenextjs\";","setoncallback#setOnCallback":"Establece el callback que se ejecutar√° al modificar la fecha.","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tcallback\t(date: Date) => void\ts√≠\t\tFunci√≥n callback a ejecutar.","usos#Usos":"Establecer un callback para actualizaci√≥n de fecha\nconst fenextDate = new FenextjsDate();\nfenextDate.setOnCallback((date) => console.log(\"Fecha actualizada:\", date));","addtime#addTime":"Agrega una cantidad de tiempo en milisegundos a la fecha actual.","par√°metros-1#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\ttime\tnumber\ts√≠\t\tTiempo en milisegundos para agregar.","usos-1#Usos":"Agregar milisegundos a la fecha actual\nconst fenextDate = new FenextjsDate(new Date());\nfenextDate.addTime(60000); // Agrega 1 minuto en milisegundos","addmilliseconds#addMilliseconds":"Agrega una cantidad espec√≠fica de milisegundos a la fecha.","par√°metros-2#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tmilliseconds\tnumber\ts√≠\t\tMilisegundos para agregar a la fecha.","usos-2#Usos":"Agregar milisegundos espec√≠ficos\nconst fenextDate = new FenextjsDate(new Date());\nfenextDate.addMilliseconds(500); // Agrega 500 milisegundos","addseconds#addSeconds":"Agrega una cantidad de segundos a la fecha actual.","par√°metros-3#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tseconds\tnumber\ts√≠\t\tSegundos para agregar.","usos-3#Usos":"Agregar segundos a la fecha actual\nconst fenextDate = new FenextjsDate(new Date());\nfenextDate.addSeconds(10); // Agrega 10 segundos","addminutes#addMinutes":"Agrega una cantidad de minutos a la fecha actual.","par√°metros-4#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tminutes\tnumber\ts√≠\t\tMinutos para agregar.","usos-4#Usos":"Agregar minutos a la fecha actual\nconst fenextDate = new FenextjsDate(new Date());\nfenextDate.addMinutes(30); // Agrega 30 minutos","addhours#addHours":"Agrega una cantidad de horas a la fecha actual.","par√°metros-5#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\thours\tnumber\ts√≠\t\tHoras para agregar.","usos-5#Usos":"Agregar horas a la fecha actual\nconst fenextDate = new FenextjsDate(new Date());\nfenextDate.addHours(5); // Agrega 5 horas","adddate#addDate":"Agrega una cantidad de d√≠as a la fecha actual.","par√°metros-6#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tdate\tnumber\ts√≠\t\tD√≠as para agregar.","usos-6#Usos":"Agregar d√≠as a la fecha actual\nconst fenextDate = new FenextjsDate(new Date());\nfenextDate.addDate(10); // Agrega 10 d√≠as","addmonth#addMonth":"Agrega una cantidad de meses a la fecha actual.","par√°metros-7#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tmonth\tnumber\ts√≠\t\tMeses para agregar.","usos-7#Usos":"Agregar meses a la fecha actual\nconst fenextDate = new FenextjsDate(new Date());\nfenextDate.addMonth(3); // Agrega 3 meses","addyear#addYear":"Agrega una cantidad de a√±os a la fecha actual.","par√°metros-8#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tyear\tnumber\ts√≠\t\tA√±os para agregar.","usos-8#Usos":"Agregar a√±os a la fecha actual\nconst fenextDate = new FenextjsDate(new Date());\nfenextDate.addYear(2); // Agrega 2 a√±os","onformat#onFormat":"Devuelve la fecha formateada seg√∫n las opciones dadas.","par√°metros-9#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\toptions\tFenextjsDateFormatOptions\ts√≠\t\tOpciones de formato para la fecha.\tdate\tFenextjsDateValue\tno\t\tFecha para formatear; usa la fecha actual si no se proporciona.","usos-9#Usos":"Formatear la fecha actual\nconst fenextDate = new FenextjsDate(new Date());\nconst formattedDate = fenextDate.onFormat({\n  year: \"numeric\",\n  month: \"2-digit\",\n  day: \"2-digit\",\n});\nconsole.log(\"Fecha formateada:\", formattedDate);","onformatid#onFormatId":"Devuelve la fecha formateada usando un formato identificado por un ID.","par√°metros-10#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tid\tstring\ts√≠\t\tID del formato a usar.\tdate\tFenextjsDateValue\tno\t\tFecha a formatear; usa la fecha actual si no se proporciona.","usos-10#Usos":"Formatear la fecha con un formato identificado\nconst fenextDate = new FenextjsDate({\n  formats: { short: { year: \"numeric\", month: \"2-digit\", day: \"2-digit\" } },\n});\nconst formattedDate = fenextDate.onFormatId(\"short\");\nconsole.log(\"Fecha formateada con ID:\", formattedDate);","getdatebymonth#getDateByMonth":"Devuelve un arreglo de fechas para un mes y a√±o espec√≠ficos.","importaci√≥n-1#Importaci√≥n":"Para importar el componente getDateByMonth, se puede hacer desde fenextjs\nimport { getDateByMonth } from \"fenextjs\";","par√°metros-11#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tmonth\tnumber\ts√≠\t\tN√∫mero del mes (1 para enero, 12 para diciembre).\tyear\tnumber\tno\t\tA√±o para obtener las fechas; usa el a√±o actual si no se proporciona.","usos-11#Usos":"Obtener las fechas de un mes espec√≠fico\nconst fenextDate = new FenextjsDate(new Date());\nconst dates = fenextDate.getDateByMonth(2); // Obtiene las fechas de febrero del a√±o actual\nconsole.log(\"Fechas de febrero:\", dates);","setdatebymonth#setDateByMonth":"Establece la fecha a un mes y a√±o espec√≠ficos.","importaci√≥n-2#Importaci√≥n":"Para importar el componente setDateByMonth, se puede hacer desde fenextjs\nimport { setDateByMonth } from \"fenextjs\";","par√°metros-12#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tmonth\tnumber\ts√≠\t\tN√∫mero del mes (1 para enero, 12 para diciembre).\tyear\tnumber\tno\t\tA√±o para establecer la fecha; usa el a√±o actual si no se proporciona.","usos-12#Usos":"Establecer la fecha a un mes y a√±o espec√≠ficos\nconst fenextDate = new FenextjsDate(new Date());\nfenextDate.setDateByMonth(6, 2023); // Establece la fecha a junio de 2023\nconsole.log(\"Fecha establecida:\", fenextDate);","ongeneratedatebymonth#onGenerateDateByMonth":"Genera una lista de fechas para un mes espec√≠fico.","par√°metros-13#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tdate\tFenextjsDateValue\tno\t\tFecha de referencia para el mes a generar.","usos-13#Usos":"Generar fechas para el mes actual\nconst fenextDate = new FenextjsDate(new Date());\nconst dates = fenextDate.onGenerateDateByMonth();\nconsole.log(\"Fechas del mes:\", dates);","getdatebycalendar#getDateByCalendar":"Devuelve un arreglo de fechas que representa un calendario completo del mes actual, con d√≠as de la semana.","importaci√≥n-3#Importaci√≥n":"Para importar el componente getDateByCalendar, se puede hacer desde fenextjs\nimport { getDateByCalendar } from \"fenextjs\";","usos-14#Usos":"Obtener las fechas de un calendario completo para el mes actual\nconst fenextDate = new FenextjsDate(new Date());\nconst calendarDates = fenextDate.getDateByCalendar(); // Obtiene las fechas del calendario completo del mes actual\nconsole.log(\"Fechas del calendario:\", calendarDates);","setdatebycalendar#setDateByCalendar":"Establece las fechas del calendario con un arreglo de fechas.","importaci√≥n-4#Importaci√≥n":"Para importar el componente setDateByCalendar, se puede hacer desde fenextjs\nimport { setDateByCalendar } from \"fenextjs\";","par√°metros-14#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tcalendarDates\tDate[]\ts√≠\t\tUn arreglo de objetos Date que representa las fechas del calendario completo.","usos-15#Usos":"Establecer un calendario con un arreglo de fechas\nconst fenextDate = new FenextjsDate(new Date());\nconst calendarDates = [new Date(2023, 5, 1), new Date(2023, 5, 2)]; // Un ejemplo de fechas del calendario\nfenextDate.setDateByCalendar(calendarDates); // Establece las fechas del calendario\nconsole.log(\"Fechas del calendario establecidas:\", fenextDate);","ongeneratedatebycalendar#onGenerateDateByCalendar":"Genera una lista de fechas para el mes y a√±o espec√≠ficos, con una vista tipo calendario.","par√°metros-15#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tdate\tFenextjsDateValue\tno\t\tFecha de referencia para generar el calendario.","usos-16#Usos":"Generar fechas para el calendario de un mes\nconst fenextDate = new FenextjsDate(new Date());\nconst calendarDates = fenextDate.onGenerateDateByCalendar();\nconsole.log(\"Fechas del calendario:\", calendarDates);","onvalidateminmax#onValidateMinMax":"Valida si la fecha proporcionada est√° dentro del rango especificado por las fechas m√≠nima y m√°xima.","par√°metros-16#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tmin\tDate\tno\t\tFecha m√≠nima que la fecha proporcionada debe cumplir. Si no se proporciona, no se valida el l√≠mite inferior.\tmax\tDate\tno\t\tFecha m√°xima que la fecha proporcionada debe cumplir. Si no se proporciona, no se valida el l√≠mite superior.\tdate\tDate\tno\t\tFecha que se va a validar. Si no se proporciona, se usa la fecha actual de la instancia.","usos-17#Usos":"Validar si una fecha est√° dentro de un rango espec√≠fico\nconst fenextDate = new FenextjsDate(new Date());\nconst isValid = fenextDate.onValidateMinMax({\n  min: new Date(2023, 0, 1),\n  max: new Date(2023, 11, 31),\n}); // Retorna true si la fecha est√° dentro del rango, false en caso contrario\nconsole.log(isValid);","oncomparedate#onCompareDate":"Compara la fecha actual con otra fecha proporcionada, utilizando los criterios de comparaci√≥n especificados.","par√°metros-17#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tdateCompare\tDate\ts√≠\t\tLa fecha con la que se va a comparar la fecha actual.\tcompare\t{ [id in FenextjsDateCompareType]?: boolean }\ts√≠\t\tUn objeto que contiene los criterios de comparaci√≥n. Puede incluir propiedades como 'FullYear', 'Month', 'Date', etc.","usos-18#Usos":"Comparar dos fechas con diferentes criterios\nconst fenextDate = new FenextjsDate(new Date());\nconst compareResult = fenextDate.onCompareDate({\n  dateCompare: new Date(2023, 0, 1),\n  compare: { FullYear: true, Month: true, Date: true },\n}); // Compara el a√±o, mes y d√≠a de las dos fechas\nconsole.log(compareResult);"}},"/error/badrequest":{"title":"ErrorBadRequest","data":{"":"Clase que representa un error de solicitud incorrecta (HTTP 400) en la biblioteca Fenextjs.","importaci√≥n#Importaci√≥n":"Para importar el componente ErrorBadRequest, se puede hacer desde fenextjs\nimport { ErrorBadRequest } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tcode\tErrorCode\tno\tErrorCode.BAD_REQUEST\tC√≥digo de error espec√≠fico que representa una solicitud incorrecta.\tmessage\tstring\tno\t\"Bad Request\"\tMensaje de error que describe la naturaleza del problema."}},"/error":{"title":"Errores","data":{"":"Fenextjs posee Errores para implementar en Nextjs con el objetivo de mantener un estandar.","instalacion-independiente#Instalacion independiente":"En caso de que solo quieras usar la parte de Errores de Fenextjs sin installar el resto de funcionalidades, puedes hacerlo de siguiente manera:","npm#Npm":"npm i fenextjs-error","bun#Bun":"bun i fenextjs-error","pnpm#Pnpm":"pnpm i fenextjs-error"}},"/error/databaseerror":{"title":"ErrorDatabaseError","data":{"":"Clase que representa un error de base de datos en la biblioteca Fenextjs.","importaci√≥n#Importaci√≥n":"Para importar el componente ErrorDatabaseError, se puede hacer desde fenextjs\nimport { ErrorDatabaseError } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tcode\tErrorCode\tno\tErrorCode.DATABASE_ERROR\tC√≥digo de error espec√≠fico que representa un problema en la base de datos.\tmessage\tstring\tno\t\"Database Error\"\tMensaje de error que describe la naturaleza del problema en la base de datos."}},"/error/fenextjs":{"title":"ErrorFenextjs","data":{"":"Clase base para representar errores en la biblioteca Fenextjs, proporcionando un c√≥digo de error, mensaje y datos opcionales.","importaci√≥n#Importaci√≥n":"Para importar el componente ErrorFenextjs, se puede hacer desde fenextjs\nimport { ErrorFenextjs } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tcode\tErrorCode\tno\tErrorCode.ERROR\tC√≥digo de error espec√≠fico que identifica el tipo de error.\tmessage\tstring\tno\t\"\"\tMensaje de error que describe la naturaleza del problema.\tmsg\tstring\tno\t\"\"\tMensaje adicional del error, sin formato ni modificaci√≥n.\tinput\tstring\tno\t\tTexto opcional que proporciona informaci√≥n adicional sobre el error o el input que lo caus√≥.\tdata\tD\tno\t\tDatos adicionales que pueden acompa√±ar al error, parametrizables seg√∫n el tipo D."}},"/error/filenotfound":{"title":"ErrorFileNotFound","data":{"":"Clase que representa un error de archivo no encontrado en la biblioteca Fenextjs.","importaci√≥n#Importaci√≥n":"Para importar el componente ErrorFileNotFound, se puede hacer desde fenextjs\nimport { ErrorFileNotFound } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tcode\tErrorCode\tno\tErrorCode.FILE_NOT_FOUND\tC√≥digo de error espec√≠fico que indica que el archivo no se encontr√≥.\tmessage\tstring\tno\t\"File not Found\"\tMensaje de error que describe la ausencia del archivo solicitado."}},"/error/forbidden":{"title":"ErrorForbidden","data":{"":"Clase que representa un error de acceso denegado (HTTP 403) en la biblioteca Fenextjs.","importaci√≥n#Importaci√≥n":"Para importar el componente ErrorForbidden, se puede hacer desde fenextjs\nimport { ErrorForbidden } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tcode\tErrorCode\tno\tErrorCode.FORBIDDEN\tC√≥digo de error espec√≠fico que indica que el acceso est√° prohibido.\tmessage\tstring\tno\t\"Forbidden\"\tMensaje de error que describe la restricci√≥n de acceso."}},"/error/googlekey/invalid":{"title":"ErrorGoogleKeyInvalid","data":{"":"Clase que representa un error de clave de Google no v√°lida en la biblioteca Fenextjs.","importaci√≥n#Importaci√≥n":"Para importar el componente ErrorGoogleKeyInvalid, se puede hacer desde fenextjs\nimport { ErrorGoogleKeyInvalid } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tcode\tErrorCode\tno\tErrorCode.GOOGLE_KEY_INVALID\tC√≥digo de error espec√≠fico que indica que la clave de Google proporcionada no es v√°lida.\tmessage\tstring\tno\t\"Invalid Google Key\"\tMensaje de error que describe la invalidez de la clave de Google."}},"/error/input/invalid":{"title":"ErrorInputInvalid","data":{"":"Clase que representa un error de entrada no v√°lida en la biblioteca Fenextjs.","importaci√≥n#Importaci√≥n":"Para importar el componente ErrorInputInvalid, se puede hacer desde fenextjs\nimport { ErrorInputInvalid } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tcode\tErrorCode\tno\tErrorCode.INPUT_INVALID\tC√≥digo de error espec√≠fico que indica que la entrada proporcionada no es v√°lida.\tmessage\tstring\tno\t\"Invalid Input\"\tMensaje de error que describe la naturaleza del error relacionado con la entrada no v√°lida.\tinput\tstring\tno\t\tTexto opcional que proporciona informaci√≥n sobre la entrada que caus√≥ el error."}},"/error/googlekey/notfound":{"title":"ErrorGoogleKeyNotFound","data":{"":"Clase que representa un error de clave de Google no encontrada en la biblioteca Fenextjs.","importaci√≥n#Importaci√≥n":"Para importar el componente ErrorGoogleKeyNotFound, se puede hacer desde fenextjs\nimport { ErrorGoogleKeyNotFound } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tcode\tErrorCode\tno\tErrorCode.GOOGLE_KEY_NOT_FOUND\tC√≥digo de error espec√≠fico que indica que la clave de Google no se encuentra.\tmessage\tstring\tno\t\"Google Key not Found\"\tMensaje de error que describe la ausencia de la clave de Google."}},"/error/input/length":{"title":"ErrorInputLength","data":{"":"Clase que representa un error de longitud de entrada no v√°lida en la biblioteca Fenextjs.","importaci√≥n#Importaci√≥n":"Para importar el componente ErrorInputLength, se puede hacer desde fenextjs\nimport { ErrorInputLength } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tcode\tErrorCode\tno\tErrorCode.INPUT_LENGTH\tC√≥digo de error espec√≠fico que indica que la longitud de la entrada no es v√°lida.\tmessage\tstring\tno\t\"Input not length\"\tMensaje de error que describe la naturaleza del error relacionado con la longitud de la entrada. Si se proporciona una longitud espec√≠fica, el mensaje la incluye.\tinput\tstring\tno\t\tTexto opcional que proporciona informaci√≥n sobre la entrada que caus√≥ el error.\tlength\tnumber | Date\tno\t\tValor opcional que especifica la longitud esperada de la entrada o una fecha asociada con la entrada."}},"/error/input/outofrange":{"title":"ErrorInputOutOfRange","data":{"":"Clase que representa un error de entrada fuera de rango en la biblioteca Fenextjs.","importaci√≥n#Importaci√≥n":"Para importar el componente ErrorInputOutOfRange, se puede hacer desde fenextjs\nimport { ErrorInputOutOfRange } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tcode\tErrorCode\tno\tErrorCode.INPUT_OUT_OF_RANGE\tC√≥digo de error espec√≠fico que indica que la entrada est√° fuera del rango permitido.\tmessage\tstring\tno\t\"Input Out of Range\"\tMensaje de error que describe la naturaleza del error cuando la entrada est√° fuera del rango permitido. Si se proporciona un rango espec√≠fico, el mensaje lo incluir√°.\tinput\tstring\tno\t\tTexto opcional que proporciona informaci√≥n sobre la entrada que caus√≥ el error.\trange\tnumber[]\tno\t\tRango opcional que especifica los valores permitidos para la entrada. El mensaje incluir√° el rango si se proporciona."}},"/error/input/patternmismatch":{"title":"ErrorInputPatternMismatch","data":{"":"Clase que representa un error de coincidencia de patr√≥n de entrada en la biblioteca Fenextjs.","importaci√≥n#Importaci√≥n":"Para importar el componente ErrorInputPatternMismatch, se puede hacer desde fenextjs\nimport { ErrorInputPatternMismatch } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tcode\tErrorCode\tno\tErrorCode.INPUT_PATTERN_MISMATCH\tC√≥digo de error espec√≠fico que indica que la entrada no coincide con el patr√≥n esperado.\tmessage\tstring\tno\t\"Input Pattern Mismatch\"\tMensaje de error que describe la naturaleza del error cuando la entrada no cumple con el patr√≥n esperado.\tinput\tstring\tno\t\tTexto opcional que proporciona informaci√≥n sobre la entrada que caus√≥ el error."}},"/error/input/notequal":{"title":"ErrorInputNotEqual","data":{"":"Clase que representa un error de entrada que no es igual al valor esperado en la biblioteca Fenextjs.","importaci√≥n#Importaci√≥n":"Para importar el componente ErrorInputNotEqual, se puede hacer desde fenextjs\nimport { ErrorInputNotEqual } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tcode\tErrorCode\tno\tErrorCode.INPUT_NOT_EQUAL\tC√≥digo de error espec√≠fico que indica que la entrada no es igual al valor esperado.\tmessage\tstring\tno\t\"Not Equal Input\"\tMensaje de error que describe la naturaleza del error cuando la entrada no es igual al valor esperado. Si se proporciona un valor espec√≠fico con el cual se espera la igualdad, el mensaje lo incluir√°.\tinput\tstring\tno\t\tTexto opcional que proporciona informaci√≥n sobre la entrada que caus√≥ el error.\tequal\tany\tno\t\tValor opcional que especifica el valor con el cual se esperaba que la entrada fuera igual."}},"/error/input/required":{"title":"ErrorInputRequired","data":{"":"Clase que representa un error de entrada obligatoria en la biblioteca Fenextjs.","importaci√≥n#Importaci√≥n":"Para importar el componente ErrorInputRequired, se puede hacer desde fenextjs\nimport { ErrorInputRequired } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tcode\tErrorCode\tno\tErrorCode.INPUT_REQUIRED\tC√≥digo de error espec√≠fico que indica que la entrada es obligatoria y no se proporcion√≥.\tmessage\tstring\tno\t\"Input Required\"\tMensaje de error que describe la naturaleza del error cuando la entrada requerida no se proporciona.\tinput\tstring\tno\t\tTexto opcional que proporciona informaci√≥n sobre la entrada que caus√≥ el error."}},"/error/input/toolong":{"title":"ErrorInputTooLong","data":{"":"Clase que representa un error de entrada demasiado larga en la biblioteca Fenextjs.","importaci√≥n#Importaci√≥n":"Para importar el componente ErrorInputTooLong, se puede hacer desde fenextjs\nimport { ErrorInputTooLong } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tcode\tErrorCode\tno\tErrorCode.INPUT_TOO_LONG\tC√≥digo de error espec√≠fico que indica que la entrada es demasiado larga.\tmessage\tstring\tno\t\"Input Too Long\"\tMensaje de error que describe la naturaleza del error cuando la entrada excede la longitud m√°xima permitida. Si se proporciona un valor m√°ximo, el mensaje lo incluir√°.\tinput\tstring\tno\t\tTexto opcional que proporciona informaci√≥n sobre la entrada que caus√≥ el error.\tmax\tnumber | Date\tno\t\tValor opcional que especifica la longitud m√°xima permitida para la entrada. El mensaje incluir√° este valor si se proporciona."}},"/error/input/tooshort":{"title":"ErrorInputTooShort","data":{"":"Clase que representa un error de entrada demasiado corta en la biblioteca Fenextjs.","importaci√≥n#Importaci√≥n":"Para importar el componente ErrorInputTooShort, se puede hacer desde fenextjs\nimport { ErrorInputTooShort } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tcode\tErrorCode\tno\tErrorCode.INPUT_TOO_SHORT\tC√≥digo de error espec√≠fico que indica que la entrada es demasiado corta.\tmessage\tstring\tno\t\"Input Too Short\"\tMensaje de error que describe la naturaleza del error cuando la entrada es m√°s corta que la longitud m√≠nima permitida. Si se proporciona un valor m√≠nimo, el mensaje lo incluir√°.\tinput\tstring\tno\t\tTexto opcional que proporciona informaci√≥n sobre la entrada que caus√≥ el error.\tmin\tnumber | Date\tno\t\tValor opcional que especifica la longitud m√≠nima permitida para la entrada. El mensaje incluir√° este valor si se proporciona."}},"/error/input/valuetoohigh":{"title":"ErrorInputValueTooHigh","data":{"":"Clase que representa un error de valor de entrada demasiado alto en la biblioteca Fenextjs.","importaci√≥n#Importaci√≥n":"Para importar el componente ErrorInputValueTooHigh, se puede hacer desde fenextjs\nimport { ErrorInputValueTooHigh } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tcode\tErrorCode\tno\tErrorCode.INPUT_VALUE_TOO_HIGH\tC√≥digo de error espec√≠fico que indica que el valor de la entrada es demasiado alto.\tmessage\tstring\tno\t\"Input Value Too High\"\tMensaje de error que describe la naturaleza del error cuando el valor de la entrada excede el valor m√°ximo permitido. Si se proporciona un valor m√°ximo, el mensaje lo incluir√°.\tinput\tstring\tno\t\tTexto opcional que proporciona informaci√≥n sobre la entrada que caus√≥ el error.\tmax\tnumber | Date\tno\t\tValor opcional que especifica el valor m√°ximo permitido para la entrada. El mensaje incluir√° este valor si se proporciona."}},"/error/internalservererror":{"title":"ErrorInternalServerError","data":{"":"Clase que representa un error de servidor interno (HTTP 500) en la biblioteca Fenextjs.","importaci√≥n#Importaci√≥n":"Para importar el componente ErrorInternalServerError, se puede hacer desde fenextjs\nimport { ErrorInternalServerError } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tcode\tErrorCode\tno\tErrorCode.INTERNAL_SERVER_ERROR\tC√≥digo de error espec√≠fico que indica un error interno del servidor.\tmessage\tstring\tno\t\"Internal Server Error\"\tMensaje de error que describe la naturaleza del error cuando ocurre un fallo interno del servidor."}},"/error/input/valuetoolow":{"title":"ErrorInputValueTooLow","data":{"":"Clase que representa un error de valor de entrada demasiado bajo en la biblioteca Fenextjs.","importaci√≥n#Importaci√≥n":"Para importar el componente ErrorInputValueTooLow, se puede hacer desde fenextjs\nimport { ErrorInputValueTooLow } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tcode\tErrorCode\tno\tErrorCode.INPUT_VALUE_TOO_LOW\tC√≥digo de error espec√≠fico que indica que el valor de la entrada es demasiado bajo.\tmessage\tstring\tno\t\"Input Value Too Low\"\tMensaje de error que describe la naturaleza del error cuando el valor de la entrada es inferior al valor m√≠nimo permitido. Si se proporciona un valor m√≠nimo, el mensaje lo incluir√°.\tinput\tstring\tno\t\tTexto opcional que proporciona informaci√≥n sobre la entrada que caus√≥ el error.\tmin\tnumber | Date\tno\t\tValor opcional que especifica el valor m√≠nimo permitido para la entrada. El mensaje incluir√° este valor si se proporciona."}},"/error/methodnotallowed":{"title":"ErrorMethodNotAllowed","data":{"":"Clase que representa un error de m√©todo no permitido (HTTP 405) en la biblioteca Fenextjs.","importaci√≥n#Importaci√≥n":"Para importar el componente ErrorMethodNotAllowed, se puede hacer desde fenextjs\nimport { ErrorMethodNotAllowed } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tcode\tErrorCode\tno\tErrorCode.METHOD_NOT_ALLOWED\tC√≥digo de error espec√≠fico que indica que el m√©todo HTTP utilizado no est√° permitido.\tmessage\tstring\tno\t\"Method Not Allowed\"\tMensaje de error que describe la naturaleza del problema cuando se intenta usar un m√©todo HTTP no permitido."}},"/error/networkerror":{"title":"ErrorNetworkError","data":{"":"Clase que representa un error de red en la biblioteca Fenextjs.","importaci√≥n#Importaci√≥n":"Para importar el componente ErrorNetworkError, se puede hacer desde fenextjs\nimport { ErrorNetworkError } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tcode\tErrorCode\tno\tErrorCode.NETWORK_ERROR\tC√≥digo de error espec√≠fico que indica un error relacionado con la red.\tmessage\tstring\tno\t\"Network Error\"\tMensaje de error que describe la naturaleza del problema relacionado con la red."}},"/error/notacceptable":{"title":"ErrorNotAcceptable","data":{"":"Clase que representa un error de recurso no aceptable (HTTP 406) en la biblioteca Fenextjs.","importaci√≥n#Importaci√≥n":"Para importar el componente ErrorNotAcceptable, se puede hacer desde fenextjs\nimport { ErrorNotAcceptable } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tcode\tErrorCode\tno\tErrorCode.NOT_ACCEPTABLE\tC√≥digo de error espec√≠fico que indica que el recurso solicitado no es aceptable seg√∫n los encabezados de la solicitud.\tmessage\tstring\tno\t\"Not Acceptable\"\tMensaje de error que describe la naturaleza del error cuando el recurso solicitado no es aceptable."}},"/error/notimplemented":{"title":"ErrorNotImplemented","data":{"":"Clase que representa un error de m√©todo no implementado (HTTP 501) en la biblioteca Fenextjs.","importaci√≥n#Importaci√≥n":"Para importar el componente ErrorNotImplemented, se puede hacer desde fenextjs\nimport { ErrorNotImplemented } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tcode\tErrorCode\tno\tErrorCode.NOT_IMPLEMENTED\tC√≥digo de error espec√≠fico que indica que el servidor no soporta el m√©todo solicitado.\tmessage\tstring\tno\t\"Not Implemented\"\tMensaje de error que describe la naturaleza del problema cuando un m√©todo no est√° implementado en el servidor."}},"/error/pagenotfound":{"title":"ErrorPageNotFound","data":{"":"Clase que representa un error de p√°gina no encontrada (HTTP 404) en la biblioteca Fenextjs.","importaci√≥n#Importaci√≥n":"Para importar el componente ErrorPageNotFound, se puede hacer desde fenextjs\nimport { ErrorPageNotFound } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tcode\tErrorCode\tno\tErrorCode.PAGE_NOT_FOUND\tC√≥digo de error espec√≠fico que indica que la p√°gina solicitada no se encuentra en el servidor.\tmessage\tstring\tno\t\"Page not Found\"\tMensaje de error que describe la naturaleza del problema cuando la p√°gina solicitada no est√° disponible."}},"/error/requesttimeout":{"title":"ErrorRequestTimeout","data":{"":"Clase que representa un error de tiempo de espera de la solicitud (HTTP 408) en la biblioteca Fenextjs.","importaci√≥n#Importaci√≥n":"Para importar el componente ErrorRequestTimeout, se puede hacer desde fenextjs\nimport { ErrorRequestTimeout } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tcode\tErrorCode\tno\tErrorCode.REQUEST_TIMEOUT\tC√≥digo de error espec√≠fico que indica que el servidor no recibi√≥ una solicitud completa en el tiempo esperado.\tmessage\tstring\tno\t\"Request Timeout\"\tMensaje de error que describe la naturaleza del problema cuando se excede el tiempo de espera para una solicitud."}},"/error/servererror":{"title":"ErrorServerError","data":{"":"Clase que representa un error de servidor interno (HTTP 500) en la biblioteca Fenextjs.","importaci√≥n#Importaci√≥n":"Para importar el componente ErrorServerError, se puede hacer desde fenextjs\nimport { ErrorServerError } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tcode\tErrorCode\tno\tErrorCode.SERVER_ERROR\tC√≥digo de error espec√≠fico que indica que el servidor encontr√≥ un error inesperado.\tmessage\tstring\tno\t\"Internal Server Error\"\tMensaje de error que describe la naturaleza del problema cuando el servidor encuentra un error interno."}},"/error/timeout":{"title":"ErrorTimeout","data":{"":"Clase que representa un error de tiempo de espera en la solicitud (HTTP 408) en la biblioteca Fenextjs.","importaci√≥n#Importaci√≥n":"Para importar el componente ErrorTimeout, se puede hacer desde fenextjs\nimport { ErrorTimeout } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tcode\tErrorCode\tno\tErrorCode.TIMEOUT\tC√≥digo de error espec√≠fico que indica que la solicitud ha excedido el tiempo de espera permitido.\tmessage\tstring\tno\t\"Request Timeout\"\tMensaje de error que describe la naturaleza del problema cuando se excede el tiempo de espera para la solicitud."}},"/error/serviceunavailable":{"title":"ErrorServiceUnavailable","data":{"":"Clase que representa un error de servicio no disponible (HTTP 503) en la biblioteca Fenextjs.","importaci√≥n#Importaci√≥n":"Para importar el componente ErrorServiceUnavailable, se puede hacer desde fenextjs\nimport { ErrorServiceUnavailable } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tcode\tErrorCode\tno\tErrorCode.SERVICE_UNAVAILABLE\tC√≥digo de error espec√≠fico que indica que el servicio no est√° disponible temporalmente.\tmessage\tstring\tno\t\"Service Unavailable\"\tMensaje de error que describe la naturaleza del problema cuando el servicio no est√° disponible."}},"/error/unauthorized":{"title":"ErrorUnauthorized","data":{"":"Clase que representa un error de acceso no autorizado (HTTP 401) en la biblioteca Fenextjs.","importaci√≥n#Importaci√≥n":"Para importar el componente ErrorUnauthorized, se puede hacer desde fenextjs\nimport { ErrorUnauthorized } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tcode\tErrorCode\tno\tErrorCode.UNAUTHORIZED\tC√≥digo de error espec√≠fico que indica que el usuario no est√° autorizado para realizar la acci√≥n solicitada.\tmessage\tstring\tno\t\"Unauthorized\"\tMensaje de error que describe la naturaleza del problema cuando el acceso est√° prohibido por falta de autorizaci√≥n."}},"/error/toomanyrequests":{"title":"ErrorTooManyRequests","data":{"":"Clase que representa un error de demasiadas solicitudes (HTTP 429) en la biblioteca Fenextjs.","importaci√≥n#Importaci√≥n":"Para importar el componente ErrorTooManyRequests, se puede hacer desde fenextjs\nimport { ErrorTooManyRequests } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tcode\tErrorCode\tno\tErrorCode.TOO_MANY_REQUESTS\tC√≥digo de error espec√≠fico que indica que se ha excedido el l√≠mite de solicitudes permitidas.\tmessage\tstring\tno\t\"Too Many Requests\"\tMensaje de error que describe la naturaleza del problema cuando se excede el l√≠mite de solicitudes."}},"/error/usertoken/invalid":{"title":"ErrorUserTokenInvalid","data":{"":"Clase que representa un error de token de usuario inv√°lido (HTTP 401) en la biblioteca Fenextjs.","importaci√≥n#Importaci√≥n":"Para importar el componente ErrorUserTokenInvalid, se puede hacer desde fenextjs\nimport { ErrorUserTokenInvalid } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tcode\tErrorCode\tno\tErrorCode.USER_TOKEN_INVALID\tC√≥digo de error espec√≠fico que indica que el token de usuario proporcionado es inv√°lido.\tmessage\tstring\tno\t\"Invalid Token\"\tMensaje de error que describe la naturaleza del problema cuando el token de usuario no es v√°lido."}},"/error/usertoken/notfound":{"title":"ErrorUserTokenNotFound","data":{"":"Clase que representa un error cuando el token de usuario no se encuentra (HTTP 401) en la biblioteca Fenextjs.","importaci√≥n#Importaci√≥n":"Para importar el componente ErrorUserTokenNotFound, se puede hacer desde fenextjs\nimport { ErrorUserTokenNotFound } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tcode\tErrorCode\tno\tErrorCode.USER_TOKEN_NOT_FOUND\tC√≥digo de error espec√≠fico que indica que el token de usuario no fue encontrado.\tmessage\tstring\tno\t\"Token not Found\"\tMensaje de error que describe la naturaleza del problema cuando el token de usuario no se encuentra."}},"/firebase":{"title":"FenextFirebase","data":{"":"Clase principal para inicializar y manejar las funcionalidades de Firebase en el proyecto, proporcionando acceso a la base de datos y al almacenamiento.","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tconfig\tFenextFirebaseConfigProps\ts√≠\t\tConfiguraci√≥n necesaria para inicializar Firebase, incluyendo claves y URLs de Firebase.","usos#Usos":"Inicializar y usar la clase FenextFirebase\nconst firebaseConfig = {\n  /* Configuraci√≥n de Firebase */\n};\nconst fenextFirebase = new FenextFirebase({ config: firebaseConfig });\n// Acceder a la base de datos\nfenextFirebase.database.Ref(\"/users\").onGet();\n// Acceder al almacenamiento\nfenextFirebase.storega.Ref(\"/images/user1\").onUploadBase64(base64Data);","getconfig#getConfig":"Obtiene la configuraci√≥n actual utilizada para inicializar Firebase.","usos-1#Usos":"Establecer referencia y obtener datos\nconst fb = new FenextFirebase({ config });\nfb.getConfig();","getapp#getApp":"Obtiene la instancia de la aplicaci√≥n de Firebase. Si no est√° inicializada, la crea.","usos-2#Usos":"Establecer referencia y obtener datos\nconst fb = new FenextFirebase({ config });\nfb.getApp();"}},"/firebase/database":{"title":"DataBase","data":{"":"Clase que permite interactuar con Firebase Database, proporcionando m√©todos para obtener y establecer datos en una referencia espec√≠fica.","ref#Ref":"Define la referencia de la base de datos en la ruta especificada.","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tpath\tstring\ts√≠\t\tRuta en la base de datos para la referencia.","onget#onGet":"Obtiene datos de la base de datos en la referencia actual o en la consulta especificada.","par√°metros-1#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tquery\tstring\tno\t\tRuta adicional en la referencia actual de la que se desea obtener los datos. Por defecto es la ra√≠z ('/').","usos#Usos":"Establecer referencia y obtener datos\nconst fb = new FenextFirebase({ config });\nfb.database.Ref(\"/users\").onGet();","onset#onSet":"Establece datos en la referencia actual de la base de datos.","par√°metros-2#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tvalue\tany\ts√≠\t\tDatos que se desean guardar en la referencia actual.","usos-1#Usos":"Establecer datos en una referencia\nconst fb = new FenextFirebase({ app, config });\nfb.database.Ref(\"/settings\").onSet({ theme: \"dark\" });"}},"/firebase/interface":{"title":"Interfaces","data":{"":"Interfaces utilizadas en la configuraci√≥n y operaciones de la clase FenextFirebase.","ongetbase64props#onGetBase64Props":"Opciones para configurar el tipo de dato al obtener un archivo en formato Base64 desde Firebase Storage.","importaci√≥n#Importaci√≥n":"Para importar el componente onGetBase64Props, se puede hacer desde fenextjs\nimport { onGetBase64Props } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tdataType\tstring\tno\t\tPrefijo que especifica el tipo MIME del archivo en formato Base64. Ejemplo: 'data:image/png;base64,'.","fenextfirebaseconfigprops#FenextFirebaseConfigProps":"Propiedades de configuraci√≥n requeridas para inicializar la conexi√≥n con Firebase, incluyendo URL de almacenamiento y base de datos.","importaci√≥n-1#Importaci√≥n":"Para importar el componente FenextFirebaseConfigProps, se puede hacer desde fenextjs\nimport { FenextFirebaseConfigProps } from \"fenextjs\";","par√°metros-1#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tapiKey\tstring\ts√≠\t\tClave API de Firebase para la autenticaci√≥n en el proyecto.\tauthDomain\tstring\ts√≠\t\tDominio de autenticaci√≥n asociado con el proyecto de Firebase.\tprojectId\tstring\ts√≠\t\tIdentificador √∫nico del proyecto en Firebase.\tstorageBucket\tstring\ts√≠\t\tBucket de almacenamiento en Firebase para los archivos.\tmessagingSenderId\tstring\ts√≠\t\tIdentificador del remitente para el servicio de mensajer√≠a de Firebase.\tappId\tstring\ts√≠\t\tIdentificador de la aplicaci√≥n en Firebase.\tstorageUrl\tstring\ts√≠\t\tURL del servicio de almacenamiento en Firebase.\tdatabaseUrl\tstring\ts√≠\t\tURL de la base de datos de Firebase."}},"/functions":{"title":"Funciones","data":{"":"Fenextjs posee Funciones para implementar en Nextjs con el objetivo de agilizar el desarrollo.","lista-de-funciones-disponibles#Lista de Funciones disponibles":"Card\nConfig\nEnv log\nId\nSleep\nStringifycircular\n_t\nDonwload\nImg\nHtml\ngetSpaceParent\nParse\nAddress\nBuffer\nCity\nCountry\nCsc\nCsv\nDate\nEnum\nFile\nMoney\nNumber\nNumberCount\nPhone\nState\nUnit\nImg\nbase64Scale\nbase64ToImgData","instalacion-independiente#Instalacion independiente":"En caso de que solo quieras usar la parte de Funciones de Fenextjs sin installar el resto de funcionalidades, puedes hacerlo de siguiente manera:","npm#Npm":"npm i fenextjs-functions","bun#Bun":"bun i fenextjs-functions","pnpm#Pnpm":"pnpm i fenextjs-functions"}},"/firebase/storage":{"title":"Storage","data":{"":"Clase para interactuar con Firebase Storage, proporcionando m√©todos para cargar, eliminar y obtener archivos en formato Base64 o URL.","ref#Ref":"Define la referencia de almacenamiento en la ruta especificada.","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tpath\tstring\ts√≠\t\tRuta en Firebase Storage para la referencia.","onuploadbase64#onUploadBase64":"Sube un archivo en formato Base64 a la referencia actual en Firebase Storage.","par√°metros-1#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tbase64\tstring\ts√≠\t\tCadena en formato Base64 del archivo a subir.","usos#Usos":"Subir archivo en formato Base64\nconst fb = new FenextFirebase({ config });\nfb.storage.Ref(\"/images/avatar.png\").onUploadBase64(base64String);","ondelete#onDelete":"Elimina el archivo en la referencia actual de Firebase Storage.","usos-1#Usos":"Eliminar archivo en Firebase Storage\nconst fb = new FenextFirebase({ config });\nfb.storage.Ref(\"/images/avatar.png\").onDelete();","ongetbase64#onGetBase64":"Obtiene el archivo en la referencia actual de Firebase Storage en formato Base64.","par√°metros-2#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tprops\tonGetBase64Props\tno\t\tOpciones para personalizar el formato de datos (por defecto: 'data:image/png;base64,').","usos-2#Usos":"Obtener archivo en formato Base64\nconst fb = new FenextFirebase({ config });\nfb.storage.Ref(\"/images/avatar.png\").onGetBase64();","ongeturl#onGetUrl":"Obtiene la URL de descarga del archivo en la referencia actual de Firebase Storage.","usos-3#Usos":"Definir referencia y obtener URL\nconst fb = new FenextFirebase({ config });\nfb.storage.Ref(\"/images/avatar.png\").onGetUrl();"}},"/functions/card":{"title":"GetCardType","data":{"":"La funci√≥n GetCardType permite identificar el tipo de tarjeta (VISA, Mastercard, AMEX, etc.) a partir de un n√∫mero dado.","importaci√≥n#Importaci√≥n":"Para importar el componente GetCardType, se puede hacer desde fenextjs\nimport { GetCardType } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tn\tnumber | string\ts√≠\t\tN√∫mero de la tarjeta que se analizar√° para determinar su tipo. Puede ser un valor num√©rico o un string.","card_enum#Card_Enum":"Enumeraci√≥n que define los tipos de tarjetas disponibles.\nNombre\tDescripcion\tDefault\tVISA\tTipo de tarjeta VISA.\tnull\tMASTERCARD\tTipo de tarjeta Mastercard.\tnull\tAMEX\tTipo de tarjeta American Express.\tnull\tDISCOVER\tTipo de tarjeta Discover.\tnull\tDINERS\tTipo de tarjeta Diners Club.\tnull\tDINERS_CARTE_BLANCHE\tTipo de tarjeta Diners Club Carte Blanche.\tnull\tJCB\tTipo de tarjeta JCB.\tnull\tVISA_ELECTRON\tTipo de tarjeta Visa Electron.\tnull\tOTHER\tTipo de tarjeta desconocido o no reconocido.\tnull","returns#Returns":"Parametro\tTipo\tDescripcion\tCard_Enum\tCard_Enum\tEl tipo de tarjeta identificado, representado por el enumerado Card_Enum.","usos#Usos":"Detectar tipo de tarjeta VISA\nGetCardType(\"4111111111111111\"); // Retorna Card_Enum.VISA\nDetectar tipo de tarjeta Mastercard\nGetCardType(\"5500000000000004\"); // Retorna Card_Enum.MASTERCARD\nDetectar tipo de tarjeta desconocida\nGetCardType(\"1234567890\"); // Retorna Card_Enum.OTHER"}},"/functions/cleantextfortranslate":{"title":"cleanTextForTranslate","data":{"":"La funci√≥n cleanTextForTranslate permite limpiar un string para poder traducirlo.","importaci√≥n#Importaci√≥n":"Para importar el componente cleanTextForTranslate, se puede hacer desde fenextjs\nimport { cleanTextForTranslate } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\ttext\tstring\ts√≠\t\tTexto a tranducir.","returns#Returns":"Parametro\tTipo\tDescripcion\ttext\tstring\tTexto Limpio para traducir.","usos#Usos":"Limpiar espacios\ncleanTextForTranslate(\"Text          Text2\"); // Retorna \"Text Text2\"\nLimpiar espacios iniciales o finales\nGetCardType(\" Text \"); // Retorna \"Text\"\nLimpiar saltos de linea\ncleanTextForTranslate(\"Text \\n Text2\"); // Retorna \"Text Text2\""}},"/functions/config":{"title":"CONFIG","data":{"":"Objeto de configuraci√≥n que determina el estado de ciertas funcionalidades en funci√≥n de las variables de entorno definidas.","importaci√≥n#Importaci√≥n":"Para importar el componente CONFIG, se puede hacer desde fenextjs\nimport { CONFIG } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tEMPY\tboolean\ts√≠\t\tIndica si la funcionalidad EMPY est√° habilitada. Se activa si la variable de entorno NEXT_PUBLIC_EMPY es igual a 'TRUE'.\tMODATA\tboolean\ts√≠\t\tIndica si la funcionalidad MODATA est√° habilitada. Se activa si la variable de entorno NEXT_PUBLIC_MODATA es igual a 'TRUE'.\tLOG\tboolean\ts√≠\t\tIndica si la funcionalidad de registro de LOG est√° habilitada. Se activa si la variable de entorno NEXT_PUBLIC_LOG es igual a 'TRUE'.","usos#Usos":"Uso de CONFIG\nif (CONFIG.LOG) {\n  console.log(\"Logging is enabled.\");\n}\nVerificar MODATA\nif (CONFIG.MODATA) {\n  console.log(\"MODATA functionality is active.\");\n}\nCondicionar funcionalidad seg√∫n EMPY\nif (CONFIG.EMPY) {\n  console.log(\"EMPY feature is enabled.\");\n}"}},"/functions/html/getspaceparent":{"title":"GetSpaceParent","data":{"":"Funci√≥n que calcula el espacio entre un elemento y su primer contenedor padre con overflow configurado (hidden, scroll, o auto) o hasta el body.","importaci√≥n#Importaci√≥n":"Para importar el componente GetSpaceParent, se puede hacer desde fenextjs\nimport { GetSpaceParent } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\telement\tHTMLElement\ts√≠\t\tElemento HTML para el cual se calcular√°n los espacios relativos a su contenedor padre.","returns#Returns":"Parametro\tTipo\tDescripcion\tspaces\t{ spaceTop: number; spaceLeft: number; spaceRight: number; spaceBottom: number; }\tObjeto que contiene las distancias (en p√≠xeles) entre el elemento y los bordes superior, izquierdo, derecho y inferior de su contenedor padre.","usos#Usos":"Calcular espacios de un elemento dentro de su contenedor padre\nconst spaces = GetSpaceParent(document.getElementById(\"myElement\"));\nconsole.log(\n  spaces.spaceTop,\n  spaces.spaceLeft,\n  spaces.spaceRight,\n  spaces.spaceBottom,\n);"}},"/functions/env_log":{"title":"env_log","data":{"":"Funci√≥n que imprime un mensaje en la consola si la variable de entorno NEXT_PUBLIC_LOG est√° configurada como 'TRUE'.","importaci√≥n#Importaci√≥n":"Para importar el componente env_log, se puede hacer desde fenextjs\nimport { env_log } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tdata\tany\ts√≠\t\tEl mensaje de log que se imprimir√° en la consola.\toptions\tObject\tno\t\tOpciones para personalizar el mensaje de log.\toptions.name\tstring\tno\t\tNombre que aparece junto al mensaje de log en la consola, en may√∫sculas.\toptions.color\tstring\tno\t\tColor del texto del mensaje de log en la consola. El valor predeterminado es 'white'.","returns#Returns":"Parametro\tTipo\tDescripcion\tvoid\tvoid\tEsta funci√≥n no tiene valor de retorno.","usos#Usos":"Imprimir mensaje de log b√°sico\nenv_log(\"This is a log message\");\nImprimir mensaje de log con nombre y color\nenv_log(\"This is a log message\", { name: \"Info\", color: \"blue\" });"}},"/functions/donwload/img":{"title":"getBase64ForImageDonwload","data":{"":"Funci√≥n asincr√≥nica que convierte una imagen de una URL en una cadena en formato Base64.","importaci√≥n#Importaci√≥n":"Para importar el componente getBase64ForImageDonwload, se puede hacer desde fenextjs\nimport { getBase64ForImageDonwload } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\turl\tstring\ts√≠\t\tURL de la imagen que se descargar√° y convertir√° a Base64.","returns#Returns":"Parametro\tTipo\tDescripcion\tBase64String\tPromise<string>\tUna promesa que se resuelve con la representaci√≥n en Base64 de la imagen especificada por la URL.","usos#Usos":"Convertir imagen a Base64\nconst base64String = await getBase64ForImageDonwload({\n  url: \"https://example.com/image.jpg\",\n});\nconsole.log(base64String);"}},"/functions/id":{"title":"generateRandomID","data":{"":"Funci√≥n que genera un identificador √∫nico combinando la marca de tiempo actual y un n√∫mero aleatorio.","importaci√≥n#Importaci√≥n":"Para importar el componente generateRandomID, se puede hacer desde fenextjs\nimport { generateRandomID } from \"fenextjs\";","returns#Returns":"Parametro\tTipo\tDescripcion\trandomID\tstring\tUna cadena √∫nica generada combinando el tiempo actual y un valor aleatorio.","usos#Usos":"Generar un ID √∫nico\nconst uniqueID = generateRandomID();\nconsole.log(uniqueID);"}},"/functions/parse/address":{"title":"parseAddress","data":{"":"Conjunto de funciones para convertir entre un objeto AddressGoogle y su representaci√≥n en cadena JSON.","parseaddress_to_string#parseAddress_to_String":"Funci√≥n que convierte un objeto de tipo AddressGoogle en una cadena JSON.","importaci√≥n#Importaci√≥n":"Para importar el componente parseAddress_to_String, se puede hacer desde fenextjs\nimport { parseAddress_to_String } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tdata\tAddressGoogle | undefined | null\ts√≠\t\tObjeto AddressGoogle que se convertir√° a cadena JSON.","returns#Returns":"Parametro\tTipo\tDescripcion\tjsonString\tstring\tCadena JSON que representa el objeto AddressGoogle o una cadena vac√≠a en caso de error.","usos#Usos":"Convertir un objeto AddressGoogle a cadena\nconst address = { formatted_address: \"123 Main St\" };\nconst jsonString = parseAddress_to_String(address);\nconsole.log(jsonString);","parsestring_to_address#parseString_to_Address":"Funci√≥n que convierte una cadena JSON en un objeto de tipo AddressGoogle. Si la conversi√≥n falla, retorna un objeto con la cadena como formatted_address.","importaci√≥n-1#Importaci√≥n":"Para importar el componente parseString_to_Address, se puede hacer desde fenextjs\nimport { parseString_to_Address } from \"fenextjs\";","par√°metros-1#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tdata\tstring | undefined | null\ts√≠\t\tCadena JSON que representa un objeto AddressGoogle.","returns-1#Returns":"Parametro\tTipo\tDescripcion\taddressObject\tAddressGoogle\tObjeto AddressGoogle resultante de la cadena JSON, o un objeto con formatted_address en caso de error.","usos-1#Usos":"Convertir una cadena JSON a un objeto AddressGoogle\nconst jsonString = '{\"formatted_address\": \"123 Main St\"}';\nconst address = parseString_to_Address(jsonString);\nconsole.log(address);"}},"/functions/parse/country":{"title":"parseCountry","data":{"":"Conjunto de funciones para convertir entre un objeto CountryProps y su representaci√≥n en cadena JSON.","parsecountry_to_string#parseCountry_to_String":"Funci√≥n que convierte un objeto de tipo CountryProps en una cadena JSON. Si el objeto es nulo o indefinido, retorna undefined.","importaci√≥n#Importaci√≥n":"Para importar el componente parseCountry_to_String, se puede hacer desde fenextjs\nimport { parseCountry_to_String } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tdata\tCountryProps | undefined | null\ts√≠\t\tObjeto CountryProps que se convertir√° a cadena JSON.","returns#Returns":"Parametro\tTipo\tDescripcion\tjsonString\tstring | undefined\tCadena JSON que representa el objeto CountryProps o undefined si el objeto es nulo o indefinido.","usos#Usos":"Convertir un objeto CountryProps a cadena\nconst country = { id: 1, code: \"US\", text: \"United States\" };\nconst jsonString = parseCountry_to_String(country);\nconsole.log(jsonString);","parsestring_to_country#parseString_to_Country":"Funci√≥n que convierte una cadena JSON en un objeto de tipo CountryProps. Si la conversi√≥n falla o el dato es nulo, retorna un objeto con valores predeterminados. Tambi√©n, si el objeto no tiene una imagen asignada, la obtiene usando la funci√≥n getRuteCountryImg.","importaci√≥n-1#Importaci√≥n":"Para importar el componente parseString_to_Country, se puede hacer desde fenextjs\nimport { parseString_to_Country } from \"fenextjs\";","par√°metros-1#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tdata\tstring | undefined | null\ts√≠\t\tCadena JSON que representa un objeto CountryProps.","returns-1#Returns":"Parametro\tTipo\tDescripcion\tcountryObject\tCountryProps | undefined\tObjeto CountryProps resultante de la cadena JSON, o un objeto con valores predeterminados en caso de error o datos nulos. Si el objeto no tiene una imagen asignada, se obtiene usando la funci√≥n getRuteCountryImg.","usos-1#Usos":"Convertir una cadena JSON a un objeto CountryProps y obtener la imagen del pa√≠s\nconst jsonString = '{\"id\": 1, \"code\": \"US\", \"text\": \"United States\"}';\nconst country = parseString_to_Country(jsonString);\nconsole.log(country);"}},"/functions/parse/buffer":{"title":"parseBufferToBase64","data":{"":"Funci√≥n que convierte un ArrayBuffer en una cadena Base64.","importaci√≥n#Importaci√≥n":"Para importar el componente parseBufferToBase64, se puede hacer desde fenextjs\nimport { parseBufferToBase64 } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tbuffer\tArrayBuffer\ts√≠\t\tEl buffer de datos que se convertir√° a una cadena Base64.","returns#Returns":"Parametro\tTipo\tDescripcion\tbase64String\tstring\tCadena Base64 que representa los datos del ArrayBuffer.","usos#Usos":"Convertir un ArrayBuffer a Base64\nconst buffer = new ArrayBuffer(8);\nconst base64String = parseBufferToBase64(buffer);\nconsole.log(base64String);"}},"/functions/parse/city":{"title":"parseCity","data":{"":"Conjunto de funciones para convertir entre un objeto CityProps y su representaci√≥n en cadena JSON.","parsecity_to_string#parseCity_to_String":"Funci√≥n que convierte un objeto de tipo CityProps en una cadena JSON. Si el objeto es nulo o indefinido, retorna undefined.","importaci√≥n#Importaci√≥n":"Para importar el componente parseCity_to_String, se puede hacer desde fenextjs\nimport { parseCity_to_String } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tdata\tCityProps | undefined | null\ts√≠\t\tObjeto CityProps que se convertir√° a cadena JSON.","returns#Returns":"Parametro\tTipo\tDescripcion\tjsonString\tstring | undefined\tCadena JSON que representa el objeto CityProps o undefined si el objeto es nulo o indefinido.","usos#Usos":"Convertir un objeto CityProps a cadena\nconst city = { id: 1, id_country: 10, id_state: 5, text: \"New York\" };\nconst jsonString = parseCity_to_String(city);\nconsole.log(jsonString);","parsestring_to_city#parseString_to_City":"Funci√≥n que convierte una cadena JSON en un objeto de tipo CityProps. Si la conversi√≥n falla o el dato es nulo, retorna un objeto con valores predeterminados.","importaci√≥n-1#Importaci√≥n":"Para importar el componente parseString_to_City, se puede hacer desde fenextjs\nimport { parseString_to_City } from \"fenextjs\";","par√°metros-1#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tdata\tstring | undefined | null\ts√≠\t\tCadena JSON que representa un objeto CityProps.","returns-1#Returns":"Parametro\tTipo\tDescripcion\tcityObject\tCityProps | undefined\tObjeto CityProps resultante de la cadena JSON, o un objeto con valores predeterminados en caso de error o datos nulos.","usos-1#Usos":"Convertir una cadena JSON a un objeto CityProps\nconst jsonString =\n  '{\"id\": 1, \"id_country\": 10, \"id_state\": 5, \"text\": \"New York\"}';\nconst city = parseString_to_City(jsonString);\nconsole.log(city);"}},"/functions/parse/csc":{"title":"parseCSC","data":{"":"Conjunto de funciones para convertir entre un objeto CSCProps (Country, State, City) y su representaci√≥n en cadena (CSCStringProps).","parsecsc_to_cscstring#parseCSC_to_CSCString":"Funci√≥n que convierte un objeto de tipo CSCProps en una representaci√≥n de cadena (CSCStringProps).","importaci√≥n#Importaci√≥n":"Para importar el componente parseCSC_to_CSCString, se puede hacer desde fenextjs\nimport { parseCSC_to_CSCString } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tdata\tCSCProps | undefined | null\ts√≠\t\tObjeto CSCProps que contiene los datos de pa√≠s, estado y ciudad para convertir a cadena.","returns#Returns":"Parametro\tTipo\tDescripcion\tcscStringObject\tCSCStringProps | undefined\tObjeto CSCStringProps con los datos convertidos a cadenas, o undefined en caso de entrada inv√°lida.","usos#Usos":"Convertir un objeto CSCProps a representaci√≥n en cadena\nconst cscData = { country: {...}, state: {...}, city: {...} };\nconst cscString = parseCSC_to_CSCString(cscData);\nconsole.log(cscString);","parsecscstring_to_csc#parseCSCString_to_CSC":"Funci√≥n que convierte una representaci√≥n en cadena (CSCStringProps) en un objeto CSCProps.","importaci√≥n-1#Importaci√≥n":"Para importar el componente parseCSCString_to_CSC, se puede hacer desde fenextjs\nimport { parseCSCString_to_CSC } from \"fenextjs\";","par√°metros-1#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tdata\tCSCStringProps | undefined | null\ts√≠\t\tRepresentaci√≥n en cadena de un objeto CSC (CSCStringProps) que contiene los datos de pa√≠s, estado y ciudad.","returns-1#Returns":"Parametro\tTipo\tDescripcion\tcscObject\tCSCProps | undefined\tObjeto CSCProps con los datos convertidos de cadena a objetos, o undefined en caso de entrada inv√°lida.","usos-1#Usos":"Convertir una representaci√≥n en cadena a objeto CSCProps\nconst cscStringData = {\n  country: \"countryString\",\n  state: \"stateString\",\n  city: \"cityString\",\n};\nconst cscObject = parseCSCString_to_CSC(cscStringData);\nconsole.log(cscObject);"}},"/functions/parse/csv":{"title":"parseCsvToJson","data":{"":"Convierte un archivo CSV a un objeto JSON, usando la primera l√≠nea como encabezados y las siguientes como valores. Soporta campos con el car√°cter de separaci√≥n '|' y otros posibles errores de formato.","importaci√≥n#Importaci√≥n":"Para importar el componente parseCsvToJson, se puede hacer desde fenextjs\nimport { parseCsvToJson } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tcsv\tstring\ts√≠\t\tCadena de texto que contiene el contenido del archivo CSV.","returns#Returns":"Parametro\tTipo\tDescripcion\tresult\t{ headers: string[], data: any[] }\tObjeto que contiene los encabezados y los datos convertidos a formato JSON. Si ocurre un error durante el procesamiento, retorna un objeto vac√≠o.","usos#Usos":"Convertir un archivo CSV en formato JSON\nconst csvData = '\"Name\",\"Age\",\"Profession\"\n\"John\",25,\"Engineer\"\n\"Jane\",30,\"Designer\"';\nconst parsedData = parseCsvToJson(csvData);\nconsole.log(parsedData); // { headers: [\"Name\", \"Age\", \"Profession\"], data: [{ Name: \"John\", Age: 25, Profession: \"Engineer\" }, { Name: \"Jane\", Age: 30, Profession: \"Designer\" }] }"}},"/functions/parse/date":{"title":"parseDateTimeFunctions","data":{"":"Funciones utilitarias para trabajar con fechas y horas, como convertir fechas en cadenas de texto y parsear texto a fechas. Soporta formatos como 'YYYY-MM-DD', 'date', 'month', 'week', y 'time'.","parsedateyyyymmdd#parseDateYYYYMMDD":"Convierte un objeto Date en una cadena con formato 'YYYY-MM-DD'.","importaci√≥n#Importaci√≥n":"Para importar el componente parseDateYYYYMMDD, se puede hacer desde fenextjs\nimport { parseDateYYYYMMDD } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tdate\tDate\ts√≠\t\tEl objeto Date a convertir.","returns#Returns":"Parametro\tTipo\tDescripcion\tresult\tstring\tCadena de texto en formato 'YYYY-MM-DD'.","usos#Usos":"Convertir una fecha a formato 'YYYY-MM-DD'.\nconst date = new Date(2024, 10, 8);\nconst formattedDate = parseDateYYYYMMDD(date); // \"2024-11-08\"","parsetexttodate#parseTextToDate":"Convierte un texto en una fecha seg√∫n el tipo especificado ('date', 'month', 'week', 'time').","importaci√≥n-1#Importaci√≥n":"Para importar el componente parseTextToDate, se puede hacer desde fenextjs\nimport { parseTextToDate } from \"fenextjs\";","par√°metros-1#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tprops\tparseTextToDateProps\ts√≠\t\tObjeto con el texto a convertir y el tipo de fecha.","returns-1#Returns":"Parametro\tTipo\tDescripcion\tresult\tDate\tFecha resultante despu√©s de la conversi√≥n.","usos-1#Usos":"Convertir un texto en una fecha (por ejemplo, para un formato 'YYYY-MM-DD').\nconst date = parseTextToDate({ text: \"2024-11-08\", type: \"date\" }); // Date object for November 8, 2024","parsedatetotext#parseDateToText":"Convierte una fecha en una cadena de texto seg√∫n el tipo especificado ('date', 'month', 'week', 'time', o 'YYYY-MM-DD').","importaci√≥n-2#Importaci√≥n":"Para importar el componente parseDateToText, se puede hacer desde fenextjs\nimport { parseDateToText } from \"fenextjs\";","par√°metros-2#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tdate\tDate\tno\t\tLa fecha a convertir en texto. Si no se proporciona, se usar√° la fecha actual.\ttype\tTypeDate | 'YYYY-MM-DD'\ts√≠\t\tEl tipo de texto a crear a partir de la fecha.","returns-2#Returns":"Parametro\tTipo\tDescripcion\tresult\tstring\tLa fecha convertida en una cadena de texto.","usos-2#Usos":"Convertir una fecha en texto con formato 'YYYY-MM-DD'.\nconst date = new Date(2024, 10, 8);\nconst formattedDate = parseDateToText({ date, type: \"YYYY-MM-DD\" }); // \"2024-11-08\"","getmonthvalue#getMonthValue":"Obtiene el valor del mes en formato 'yyyy-mm' a partir de una fecha dada.","importaci√≥n-3#Importaci√≥n":"Para importar el componente getMonthValue, se puede hacer desde fenextjs\nimport { getMonthValue } from \"fenextjs\";","par√°metros-3#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tdate\tDate\ts√≠\t\tLa fecha de la cual obtener el valor del mes.","returns-3#Returns":"Parametro\tTipo\tDescripcion\tresult\tstring\tEl valor del mes en formato 'yyyy-mm'.","usos-3#Usos":"Obtener el valor del mes de una fecha.\nconst date = new Date(2024, 10, 8);\nconst monthValue = getMonthValue(date); // \"2024-11\"","getweekvalue#getWeekValue":"Obtiene el valor de la semana en formato 'yyyy-Www' a partir de una fecha dada.","importaci√≥n-4#Importaci√≥n":"Para importar el componente getWeekValue, se puede hacer desde fenextjs\nimport { getWeekValue } from \"fenextjs\";","par√°metros-4#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tdate\tDate\ts√≠\t\tLa fecha de la cual obtener el valor de la semana.","returns-4#Returns":"Parametro\tTipo\tDescripcion\tresult\tstring\tEl valor de la semana en formato 'yyyy-Www'.","usos-4#Usos":"Obtener el valor de la semana de una fecha.\nconst date = new Date(2024, 10, 8);\nconst weekValue = getWeekValue(date); // \"2024-W45\"","gettimevalue#getTimeValue":"Obtiene el valor de la hora en formato 'hh:mm' a partir de una fecha dada.","importaci√≥n-5#Importaci√≥n":"Para importar el componente getTimeValue, se puede hacer desde fenextjs\nimport { getTimeValue } from \"fenextjs\";","par√°metros-5#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tdate\tDate\ts√≠\t\tLa fecha de la cual obtener el valor de la hora.","returns-5#Returns":"Parametro\tTipo\tDescripcion\tresult\tstring\tEl valor de la hora en formato 'hh:mm'.","usos-5#Usos":"Obtener el valor de la hora de una fecha.\nconst date = new Date(2024, 10, 8, 14, 30);\nconst timeValue = getTimeValue(date); // \"14:30\"","parsedatetimeformat#parseDateTimeFormat":"Obtiene una representaci√≥n de la fecha en un formato personalizado utilizando opciones locales y de formato.","importaci√≥n-6#Importaci√≥n":"Para importar el componente parseDateTimeFormat, se puede hacer desde fenextjs\nimport { parseDateTimeFormat } from \"fenextjs\";","par√°metros-6#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tdate\tDate\ts√≠\t\tLa fecha para formatear.\toptions\tparseDateTimeFormatOptions\ts√≠\t\tOpciones de formato personalizadas.","returns-6#Returns":"Parametro\tTipo\tDescripcion\tresult\tstring\tLa fecha formateada seg√∫n las opciones especificadas.","usos-6#Usos":"Formatear una fecha usando opciones personalizadas.\nconst date = new Date(2024, 10, 8, 14, 30);\nconst formattedDate = parseDateTimeFormat(date, {\n  weekday: \"long\",\n  year: \"numeric\",\n  month: \"short\",\n  day: \"numeric\",\n}); // \"Monday, Nov 8, 2024\""}},"/functions/parse/enum":{"title":"parseEnum","data":{"":"Conjunto de funciones y tipos para manejar la conversi√≥n de enums a valores espec√≠ficos o cadenas.","parseenum_to_v#parseEnum_to_V":"Funci√≥n que convierte un valor de enum a un valor espec√≠fico (V) usando un mapeo proporcionado.","importaci√≥n#Importaci√≥n":"Para importar el componente parseEnum_to_V, se puede hacer desde fenextjs\nimport { parseEnum_to_V } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tsw\tparseEnum_to_V_SW<T, V>\ts√≠\t\tObjeto de mapeo entre claves del enum y sus valores.\toptions\tparseEnum_to_V_Options<V>\tno\t\tOpciones adicionales, incluyendo el valor que se retorna cuando el valor es nulo o indefinido.","returns#Returns":"Parametro\tTipo\tDescripcion\tmappedValue\tV | string\tValor correspondiente al tipo en el mapeo o el valor por defecto si es nulo/indefinido.","usos#Usos":"Convertir un enum a un valor espec√≠fico usando parseEnum_to_V\nconst statusMap = { ACTIVE: \"Activo\", INACTIVE: \"Inactivo\" };\nconst parseStatus = parseEnum_to_V(statusMap, { valueNull: \"Desconocido\" });\nconst status = parseStatus(\"ACTIVE\"); // Retorna \"Activo\"","parseenum_to_string#parseEnum_to_String":"Funci√≥n que convierte un valor de enum a una cadena usando un mapeo proporcionado.","importaci√≥n-1#Importaci√≥n":"Para importar el componente parseEnum_to_String, se puede hacer desde fenextjs\nimport { parseEnum_to_String } from \"fenextjs\";","par√°metros-1#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tsw\tparseEnum_to_String_SW<T>\ts√≠\t\tObjeto de mapeo entre claves del enum y sus representaciones en cadena.\toptions\tparseEnum_to_String_Options\tno\t\tOpciones adicionales para definir un valor de retorno en caso de que sea nulo o indefinido.","returns-1#Returns":"Parametro\tTipo\tDescripcion\tmappedString\tstring\tCadena correspondiente al tipo en el mapeo o el valor por defecto si es nulo/indefinido.","usos-1#Usos":"Convertir un enum a una cadena usando parseEnum_to_String\nconst roleMap = { ADMIN: \"Administrador\", USER: \"Usuario\" };\nconst parseRole = parseEnum_to_String(roleMap, { valueNull: \"Desconocido\" });\nconst role = parseRole(\"ADMIN\"); // Retorna \"Administrador\""}},"/functions/parse/file":{"title":"parseFile","data":{"":"Funci√≥n para leer el contenido de un archivo, con soporte para leer como texto o como URL de datos y con una funci√≥n de progreso opcional.","importaci√≥n#Importaci√≥n":"Para importar el componente parseFile, se puede hacer desde fenextjs\nimport { parseFile } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tfile\tany\ts√≠\t\tEl archivo a leer.\toptions\t{ fileText?: boolean; updateProgress: (progress: number) => void; }\ts√≠\t\tOpciones de configuraci√≥n, incluyendo fileText y updateProgress.","returns#Returns":"Parametro\tTipo\tDescripcion\tfileContents\tPromise<any>\tUna promesa que se resuelve con el contenido del archivo, ya sea en formato texto o base64.","usos#Usos":"Leer un archivo como texto con progreso de carga\nconst file = new File([\"Hello, world!\"], \"hello.txt\", { type: \"text/plain\" });\nconst updateProgress = (progress) => console.log(\"Progreso:\", progress);\nparseFile(file, { updateProgress, fileText: true })\n  .then((content) => console.log(\"Contenido del archivo:\", content))\n  .catch((error) => console.error(\"Error al leer el archivo:\", error));"}},"/functions/parse/img/base64scale":{"title":"parseImgBase64Scale","data":{"":"Funci√≥n para escalar una imagen en formato base64 ajustando su ancho, altura y calidad.","importaci√≥n#Importaci√≥n":"Para importar el componente parseImgBase64Scale, se puede hacer desde fenextjs\nimport { parseImgBase64Scale } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tbase64\tstring\ts√≠\t\tCadena en formato base64 que representa la imagen.\twidth\tnumber\ts√≠\t\tAncho deseado para la imagen escalada.\theight\tnumber | 'auto'\tno\t'auto'\tAltura deseada para la imagen escalada. Si se establece en 'auto', se ajustar√° autom√°ticamente para mantener la proporci√≥n.\tquality\tnumber\tno\t1\tCalidad de la imagen resultante en un rango de 0 a 1, donde 1 representa la m√°xima calidad.","returns#Returns":"Parametro\tTipo\tDescripcion\tcompressedBase64\tstring | undefined\tCadena en formato base64 de la imagen escalada y comprimida, o undefined si ocurre un error.","usos#Usos":"Escalar una imagen en base64 con ancho fijo y altura autom√°tica\nconst base64Image = \"data:image/jpeg;base64,...\";\nconst scaledImage = await parseImgBase64Scale({\n  base64: base64Image,\n  width: 200,\n  height: \"auto\",\n  quality: 0.8,\n});\nconsole.log(scaledImage);"}},"/functions/parse/img/base64toimgdata":{"title":"parseBase64ToImgData","data":{"":"Funci√≥n para generar m√∫ltiples versiones escaladas de una imagen en base64, que var√≠an en tama√±o y calidad, y estructurarlas en un objeto de tipo ImgDataProps.","importaci√≥n#Importaci√≥n":"Para importar el componente parseBase64ToImgData, se puede hacer desde fenextjs\nimport { parseBase64ToImgData } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tbase64\tstring\ts√≠\t\tCadena en formato base64 que representa la imagen original.\tname\tstring\tno\t\tNombre opcional de la imagen.\tquality\tnumber\tno\t\tCalidad de las im√°genes generadas, en un rango de 0 a 1. El valor predeterminado es 1.","returns#Returns":"Parametro\tTipo\tDescripcion\tImg\tImgDataProps\tObjeto ImgDataProps que contiene la imagen original en base64 y m√∫ltiples versiones escaladas en distintas resoluciones.","usos#Usos":"Generar versiones escaladas de una imagen en base64\nconst base64Image = \"data:image/jpeg;base64,...\";\nconst imageData = await parseBase64ToImgData({\n  base64: base64Image,\n  name: \"sample_image\",\n  quality: 0.8,\n});\nconsole.log(imageData);"}},"/functions/parse/money":{"title":"parseMoney","data":{"":"Convierte un n√∫mero o una cadena a un formato de dinero (por ejemplo, '$1,000.00').","importaci√≥n#Importaci√≥n":"Para importar el componente parseMoney, se puede hacer desde fenextjs\nimport { parseMoney } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tn\tnumber | string\ts√≠\t\tEl n√∫mero o cadena que se debe formatear como dinero.\toptions\tIntl.NumberFormatOptions\tno\t\tOpciones para personalizar el formato de n√∫mero. Se pasa al m√©todo Intl.NumberFormat.","returns#Returns":"Parametro\tTipo\tDescripcion\tformattedMoney\tstring\tLa cadena formateada en formato de dinero, incluyendo el s√≠mbolo '$'.","usos#Usos":"Formatear un n√∫mero\nconst money = parseMoney(1000.5);\nconsole.log(money); // \"$1,000.50\"\nFormatear una cadena\nconst money = parseMoney(\"1500\");\nconsole.log(money); // \"$1,500.00\"\nUsar con opciones\nconst money = parseMoney(2500.75, { style: \"currency\", currency: \"USD\" });\nconsole.log(money); // \"$2,500.75\""}},"/functions/parse/number":{"title":"parseNumber","data":{"":"Parses una cadena o n√∫mero a un n√∫mero formateado.","importaci√≥n#Importaci√≥n":"Para importar el componente parseNumber, se puede hacer desde fenextjs\nimport { parseNumber } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tn\tnumber | string\ts√≠\t\tEl n√∫mero o cadena que se debe analizar y convertir en n√∫mero.","returns#Returns":"Parametro\tTipo\tDescripcion\tparsedNumber\tnumber\tEl n√∫mero resultante despu√©s de analizar la cadena o n√∫mero de entrada. Si no es posible convertirlo, se devuelve 0.","usos#Usos":"Convertir un n√∫mero\nconst result = parseNumber(1234.56);\nconsole.log(result); // 1234.56\nConvertir una cadena\nconst result = parseNumber(\"$1,234.56\");\nconsole.log(result); // 1234.56\nManejo de entrada inv√°lida\nconst result = parseNumber(\"abc\");\nconsole.log(result); // 0"}},"/functions/parse/numbercount":{"title":"parseNumberCount","data":{"":"Parses una cadena o n√∫mero a una cadena formateada con comas separando los miles y puntos decimales opcionales.","importaci√≥n#Importaci√≥n":"Para importar el componente parseNumberCount, se puede hacer desde fenextjs\nimport { parseNumberCount } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tn\tnumber | string\ts√≠\t\tEl n√∫mero o cadena que se debe analizar y formatear.\toptions\tIntl.NumberFormatOptions\tno\t\tOpciones para personalizar el formato del n√∫mero, como decimales, estilo, etc.","returns#Returns":"Parametro\tTipo\tDescripcion\tformattedNumber\tstring\tLa representaci√≥n en cadena del n√∫mero formateado, con comas separando miles y decimales si se especifica.","usos#Usos":"Formatear un n√∫mero con comas\nconst result = parseNumberCount(1234567.89);\nconsole.log(result); // \"1,234,567.89\"\nFormatear una cadena con comas\nconst result = parseNumberCount(\"1000000\");\nconsole.log(result); // \"1,000,000\"\nUsar con opciones para formato personalizado\nconst result = parseNumberCount(1234567.89, {\n  style: \"currency\",\n  currency: \"USD\",\n});\nconsole.log(result); // \"$1,234,567.89\""}},"/functions/parse/phone":{"title":"parsePhone","data":{"":"Conjunto de funciones para convertir entre un objeto PhoneProps parcial y su representaci√≥n en cadena JSON.","parsephone_to_string#parsePhone_to_String":"Funci√≥n que convierte un objeto parcial de tipo PhoneProps en una cadena JSON.","importaci√≥n#Importaci√≥n":"Para importar el componente parsePhone_to_String, se puede hacer desde fenextjs\nimport { parsePhone_to_String } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tdata\tPartial<PhoneProps> | undefined | null\ts√≠\t\tObjeto PhoneProps parcial que se convertir√° a cadena JSON.","returns#Returns":"Parametro\tTipo\tDescripcion\tjsonString\tstring\tCadena JSON que representa el objeto PhoneProps, o la representaci√≥n en cadena en caso de error.","usos#Usos":"Convertir un objeto PhoneProps parcial a cadena JSON\nconst phone = { code: \"+1\", number: \"1234567890\" };\nconst jsonString = parsePhone_to_String(phone);\nconsole.log(jsonString);","parsestring_to_phone#parseString_to_Phone":"Funci√≥n que convierte una cadena JSON en un objeto parcial de tipo PhoneProps. Si la conversi√≥n falla, retorna un objeto con number, code y tel parseados de la cadena.","importaci√≥n-1#Importaci√≥n":"Para importar el componente parseString_to_Phone, se puede hacer desde fenextjs\nimport { parseString_to_Phone } from \"fenextjs\";","par√°metros-1#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tdata\tstring | undefined | null\ts√≠\t\tCadena JSON que representa un objeto PhoneProps parcial.","returns-1#Returns":"Parametro\tTipo\tDescripcion\tphoneObject\tPartial<PhoneProps>\tObjeto parcial PhoneProps resultante de la cadena JSON, o un objeto con number, code y tel extra√≠dos en caso de error.","usos-1#Usos":"Convertir una cadena JSON a un objeto PhoneProps parcial\nconst jsonString = '{\"code\": \"+1\", \"number\": \"1234567890\"}';\nconst phone = parseString_to_Phone(jsonString);\nconsole.log(phone);"}},"/functions/parse/unit":{"title":"parseUnitToText","data":{"":"Convierte una unidad de medida a su representaci√≥n en texto.","importaci√≥n#Importaci√≥n":"Para importar el componente parseUnitToText, se puede hacer desde fenextjs\nimport { parseUnitToText } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tunit\tUnit_All\ts√≠\t\tLa unidad que se debe convertir a su forma en texto. Puede ser una de las unidades definidas en Unit_Distance, Unit_Volumen o Unit_Weight.","unit_all#Unit_All":"Tipo que agrupa todas las unidades de distancia, volumen y peso disponibles.\nNombre\tDescripcion\tDefault\tUnit_Distance\tUnidades relacionadas con distancias (por ejemplo, metros, cent√≠metros).\tCM\tUnit_Volumen\tUnidades relacionadas con el volumen (por ejemplo, litros, galones).\tL\tUnit_Weight\tUnidades relacionadas con el peso (por ejemplo, kilogramos, gramos).\tKG","returns#Returns":"Parametro\tTipo\tDescripcion\tunitText\tstring\tLa representaci√≥n en texto de la unidad proporcionada.","usos#Usos":"Convertir unidad de distancia\nconst result = parseUnitToText(\"CM\");\nconsole.log(result); // \"cm\"\nConvertir unidad de volumen\nconst result = parseUnitToText(\"FT3\");\nconsole.log(result); // \"pie¬≥\"\nConvertir unidad de peso\nconst result = parseUnitToText(\"KG\");\nconsole.log(result); // \"kg\""}},"/functions/parse/state":{"title":"parseState","data":{"":"Conjunto de funciones para convertir entre un objeto StateProps y su representaci√≥n en cadena JSON.","parsestate_to_string#parseState_to_String":"Funci√≥n que convierte un objeto de tipo StateProps en una cadena JSON.","importaci√≥n#Importaci√≥n":"Para importar el componente parseState_to_String, se puede hacer desde fenextjs\nimport { parseState_to_String } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tdata\tStateProps | undefined | null\ts√≠\t\tObjeto StateProps que se convertir√° a cadena JSON.","returns#Returns":"Parametro\tTipo\tDescripcion\tjsonString\tstring | undefined\tCadena JSON que representa el objeto StateProps, o undefined si la entrada es inv√°lida.","usos#Usos":"Convertir un objeto StateProps a cadena JSON\nconst state = { id: 1, id_country: 10, text: \"California\" };\nconst jsonString = parseState_to_String(state);\nconsole.log(jsonString);","parsestring_to_state#parseString_to_State":"Funci√≥n que convierte una cadena JSON en un objeto de tipo StateProps. Si la conversi√≥n falla, retorna un objeto con la cadena como texto.","importaci√≥n-1#Importaci√≥n":"Para importar el componente parseString_to_State, se puede hacer desde fenextjs\nimport { parseString_to_State } from \"fenextjs\";","par√°metros-1#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tdata\tstring | undefined | null\ts√≠\t\tCadena JSON que representa un objeto StateProps.","returns-1#Returns":"Parametro\tTipo\tDescripcion\tstateObject\tStateProps | undefined\tObjeto StateProps resultante de la cadena JSON, o un objeto con text en caso de error.","usos-1#Usos":"Convertir una cadena JSON a un objeto StateProps\nconst jsonString = '{\"id\": 1, \"id_country\": 10, \"text\": \"California\"}';\nconst state = parseString_to_State(jsonString);\nconsole.log(state);"}},"/functions/sleep":{"title":"sleep","data":{"":"Funci√≥n asincr√≥nica que pausa la ejecuci√≥n durante un tiempo especificado.","importaci√≥n#Importaci√≥n":"Para importar el componente sleep, se puede hacer desde fenextjs\nimport { sleep } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\ttime\tnumber\tno\t\tTiempo en milisegundos para pausar la ejecuci√≥n. El valor predeterminado es 1000 ms (1 segundo).","returns#Returns":"Parametro\tTipo\tDescripcion\tvoid\tPromise<void>\tLa funci√≥n devuelve una promesa que se resuelve despu√©s del tiempo especificado.","usos#Usos":"Pausar la ejecuci√≥n durante 2 segundos\nawait sleep(2000); // Pausa la ejecuci√≥n por 2 segundos\nUsar el valor predeterminado (1 segundo)\nawait sleep(); // Pausa la ejecuci√≥n por 1 segundo"}},"/functions/t":{"title":"_tValidate","data":{"":"La funci√≥n _tValidate permite validar un dato y, si es un string, aplicar una funci√≥n opcional de transformaci√≥n (_t) sobre √©l.","importaci√≥n#Importaci√≥n":"Para importar el componente _tValidate, se puede hacer desde fenextjs\nimport { _tValidate } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\td\tany\ts√≠\t\tDato que ser√° validado. Si es un string, se aplicar√° la funci√≥n de transformaci√≥n _t si est√° definida.\t_t\t_TFunciton\tno\t\tFunci√≥n opcional que transforma el dato si es un string.","returns#Returns":"Parametro\tTipo\tDescripcion\tresult\tany\tRetorna el dato original o el dato transformado si _t fue aplicada.","usos#Usos":"Validar y aplicar funci√≥n de transformaci√≥n\n_tValidate(\"texto\", (d) => d.toUpperCase()); // Retorna 'TEXTO'\nValidar sin funci√≥n de transformaci√≥n\n_tValidate(\"texto\"); // Retorna 'texto'\nValidar con dato no string\n_tValidate(123, (d) => d.toString()); // Retorna 123\nTranductor\n_tValidate(\"Texto a traducir\", functionTranslate); // Retorna \"Text to translate\""}},"/functions/stringifycircular":{"title":"stringifyCircular","data":{"":"Funci√≥n que convierte un objeto en una cadena JSON, manejando referencias circulares para evitar errores en JSON.stringify.","importaci√≥n#Importaci√≥n":"Para importar el componente stringifyCircular, se puede hacer desde fenextjs\nimport { stringifyCircular } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tobj\tobject\ts√≠\t\tObjeto que se convertir√° a cadena JSON, con detecci√≥n de referencias circulares.","returns#Returns":"Parametro\tTipo\tDescripcion\tjsonString\tstring\tCadena JSON resultante del objeto, omitiendo referencias circulares.","usos#Usos":"Convertir objeto con referencias circulares a JSON\nconst obj = {};\nobj.self = obj;\nconst jsonString = stringifyCircular(obj);\nconsole.log(jsonString);"}},"/hook/use_t":{"title":"use_T","data":{"":"El hook use_T permite transformar textos en base a la configuraci√≥n proporcionada.","importaci√≥n#Importaci√≥n":"Para importar el componente use_T, se puede hacer desde fenextjs\nimport { use_T } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\t_t\t_TFunciton\tno\t\tFunci√≥n opcional para transformar el mensaje de entrada.\tuseT\tboolean\tno\ttrue\tIndica si se debe aplicar la funci√≥n _t en la validaci√≥n del mensaje.","returns#Returns":"Parametro\tTipo\tDescripcion\t_t\t(message: any) => any\tFunci√≥n que transforma el mensaje de entrada basado en la configuraci√≥n proporcionada.","usos#Usos":"Validar mensaje\nconst { _t } = use_T({ _t: (msg) => msg.toUpperCase() });\n_t(\"Mensaje a validar\"); // Devuelve mensaje en may√∫sculas\nDesactivar transformaci√≥n\nconst { _t } = use_T({ _t: (msg) => msg.toUpperCase(), useT: false });\n_t(\"Mensaje sin transformaci√≥n\"); // Devuelve mensaje sin aplicar _t"}},"/hook/useaction":{"title":"useAction","data":{"":"El hook useAction permite enviar informaci√≥n o ejecutar acciones entre componentes que no est√°n directamente conectados pero existen en el DOM.","importaci√≥n#Importaci√≥n":"Para importar el componente useAction, se puede hacer desde fenextjs\nimport { useAction } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tname\tstring\ts√≠\t\tNombre √∫nico para diferenciar distintas acciones.\tonActionExecute\t(d?: T) => void\tno\t\tFunci√≥n que se ejecuta al recibir la acci√≥n.\tenv_log\tobject\tno\t\tObjeto que define qu√© eventos ser√°n registrados en la consola.","env_log#env_log":"Dependiendo de los valores en 'true', se mostrar√°n los eventos en la consola:\nNombre\tDescripcion\tDefault\tonActionExecute\tMuestra en consola al ejecutar onActionExecute.\tfalse\tonAction\tMuestra en consola al ejecutar onAction.\tfalse","returns#Returns":"Parametro\tTipo\tDescripcion\tonAction\t(detail?: T) => void\tFunci√≥n que se usa para ejecutar la acci√≥n, se le puede pasar par√°metros si lo necesita.","usos#Usos":"Detectar acci√≥n\nuseAction({ name: \"name_action\", onActionExecute: console.log });\nEjecutar acci√≥n\nconst { onAction } = useAction({ name: \"name_action\" });\nonAction();\nDefiniendo interfaz\nconst { onAction } = useAction<string>({ name: \"name_action\" });\nonAction(\"Data\");"}},"/hook/usealert":{"title":"useAlert","data":{"":"El hook useAlert permite manejar alertas entre componentes, almacenando y ejecutando acciones de alerta de manera centralizada.","importaci√≥n#Importaci√≥n":"Para importar el componente useAlert, se puede hacer desde fenextjs\nimport { useAlert } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tname\tstring\tno\t\"fenextjs-alert\"\tNombre √∫nico que identifica la alerta para gestionar acciones espec√≠ficas.","returns#Returns":"Parametro\tTipo\tDescripcion\talert\tAlertProps<T> | undefined\tObjeto de alerta actual, que puede contener cualquier tipo de dato definido por AlertProps<T> o estar indefinido si no hay alerta activa.\tsetAlert\t(detail?: AlertProps<T>) => void\tFunci√≥n que ejecuta una nueva alerta, almacenando la informaci√≥n pasada como detalle.\tonClearAlert\t() => void\tFunci√≥n para limpiar la alerta actual, estableciendo su valor como indefinido.","usos#Usos":"Detectar alerta\nconst { alert, setAlert, onClearAlert } = useAlert();\nsetAlert({ message: \"Nueva alerta\", type: \"info\" });\nLimpiar alerta\nconst { onClearAlert } = useAlert();\nonClearAlert();"}},"/hook/usedata":{"title":"useData","data":{"":"Hook personalizado para administrar y validar datos con m√∫ltiples opciones para manejar cambios, env√≠o y estados de error.","importaci√≥n#Importaci√≥n":"Para importar el componente useData, se puede hacer desde fenextjs\nimport { useData } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tdefaultData\tT\ts√≠\t\tLos datos predeterminados para inicializar el hook.\toptions\tuseDataOptions<T, M, RT, RM, ET, EM>\tno\t\tUn objeto que contiene varias opciones de configuraci√≥n para el hook.","usedataoptions#useDataOptions":"Opciones para personalizar el comportamiento del hook.\nNombre\tDescripcion\tdata\tDatos opcionales para sobrescribir los datos predeterminados.\trefreshDataIfChangeDefaultData\tOpciones para refrescar los datos si los datos predeterminados cambian.\tonChangeDataAfter\tFunci√≥n de callback que se llama despu√©s de que los datos cambian.\tonDeleteDataAfter\tFunci√≥n de callback que se llama despu√©s de que los datos se eliminan.\tonMemo\tFunci√≥n de memoizaci√≥n para transformar los datos antes de pasarlos como valor memorizado.\tmemoDependencies\tLista de variable que depende onMemo para actualizarce o ejecutarce.\tvalidator\tInstancia de clase validadora para validar los datos de data.\tvalidatorMemo\tInstancia de clase validadora para validar los datos de dataMemo.\tonSubmitData\tFunci√≥n de callback para enviar los datos.\tonAfterSubmitDataOk\tFunci√≥n de callback que se llama despu√©s de un env√≠o √©xitoso de datos.\tonAfterSubmitParseError\tFunci√≥n de callback para manejar errores de an√°lisis.\tonAfterSubmitDataError\tFunci√≥n de callback para manejar errores despu√©s de enviar los datos.\tafterSubmitDataSetIsChangeFalse\tDeterminar si se cambia el valor de isChange despues del terminar onSubmitData.\tonSubmitDataMemo\tFunci√≥n de callback para enviar los datos de dataMemo.\tonAfterSubmitDataMemoOk\tFunci√≥n de callback que se llama despu√©s de un env√≠o √©xitoso de datos de dataMemo.\tonAfterSubmitParseErrorMemo\tFunci√≥n de callback para manejar errores de an√°lisis de dataMemo.\tonAfterSubmitDataMemoError\tFunci√≥n de callback para manejar errores despu√©s de enviar los datos de dataMemo.\tafterSubmitDataMemoSetIsChangeFalse\tDeterminar si se cambia el valor de isChange despues del terminar onSubmitDataMemo.\tautoOnValidate\tIndicador para validar autom√°ticamente los datos.\tenv_log\tObjetos que determinar que variables se muestran en la consola.\tuseGlobalContext\tActivar contexto global para que la data que se maneje en distintos useData, con el mismo nombre de useGlobalContext, este sincronizada. (Solo funciona despues que window cargue). No se recomienda usar para datos sencibles.","usedataoptionsrefreshdataifchangedefaultdataoptions#useDataOptionsRefreshDataIfChangeDefaultDataOptions":"Opciones para refrescar los datos cuando los datos predeterminados cambian.\nNombre\tDescripcion\tDefault\tactive\tIndicador para indicar si los datos deben actualizarse cuando cambian los datos predeterminados.\tfalse\tuseReloadKeyData\tIndicador para recargar la clave de los datos cuando cambian los datos predeterminados.\tfalse","setdataoptions#setDataOptions":"Opciones para configurar los datos.\nNombre\tDescripcion\tDefault\tuseOptionsOnChangeDataAfter\tIndicador para controlar si se debe usar el callback onChangeDataAfter al configurar los datos.\ttrue\tuseSetIsChange\tIndicador para controlar si el estado isChange debe configurarse en true despu√©s de configurar los datos.\ttrue","returns#Returns":"Parametro\tTipo\tDescripcion\tdata\tT\tDatos guardados en useData.\tonChangeData\t(id: keyof T) => (value: typeof data[keyof T], _options?: onChangeDataOptionsProps<T>) => void\tFunci√≥n para manejar los cambios en los datos.\tonDeleteData\t(id: keyof T) => void\tFunci√≥n para eliminar datos.\tisChange\tboolean\tValor que determina si la informacion guardada en data ha cambiado.\tsetData\t(nData: T, optionsData?: setDataOptions) => void\tFunci√≥n para asignar nuevos datos.\tsetDataFunction\t(f: (p: T) => T, optionsData?: setDataOptions) => void\tFunci√≥n para actualizar los datos usando una funci√≥n.\tdataMemo\tM\tDatos guardados en useData y transformados con la funcion onMemo proporcionada.\tsetIsChange\t(f: boolean) => void\tFunci√≥n para actualizar la variable isChange.\tonRestart\tfunction\tFunci√≥n para restablecer los datos a su valor default.\tonConcatData\t(v: Partial<T> | Array<T>) => void\tFunci√≥n para concatenar nuevos datos a los datos actuales.\tkeyData\tnumber\tValor de key asignado a data, que cambia con algunos acciones.\tsetKeyData\t(f: number) => void\tFunci√≥n para actualizar la variable keyData.\tonReloadKeyData\tfunction\tFunci√≥n para actualizar la variable keyData a un numero generado del Time.\tvalidator\tFenextjsValidatorClass\tValidador asignado a data.\tvalidatorData\t{ [id in keyof T]?: FenextjsValidatorClass<any> | undefined; }\tValidador asignado a cada elemento de data.\tvalidatorMemo\tFenextjsValidatorClass\tValidador asignado a dataMemo.\tvalidatorDataMemo\t{ [id in keyof T]?: FenextjsValidatorClass<any> | undefined; }\tValidador asignado a cada elemento de dataMemo.\tisValidData\tboolean | ErrorFenextjs\tValor del resultado de validar data.\tisValidDataMemo\tboolean | ErrorFenextjs\tValor del resultado de validar dataMemo.\tonValidateData\tfunction\tFuncion para ejecutar validator a data y guardar el resultado en isValidData.\tonValidateDataMemo\tfunction\tFuncion para ejecutar validatorMemo a dataMemo y guardar el resultado en isValidDataMemo.\tonSubmitData\t(optionsSubmitData: { data?: T; onSaveData?: (p: { data: T; result: RT }) => T; useValidator?: boolean; }) => void\tFunci√≥n para enviar los datos.\tonSubmitDataMemo\t(optionsSubmitDataMemo: { dataMemo?: M; useValidatorMemo?: boolean; }) => void\tFunci√≥n para enviar datos memorizados.\tloaderSubmit\tboolean\tValor que determina si esta procesando el envio de data con onSubmitData.\tloaderSubmitMemo\tboolean\tValor que determina si esta procesando el envio de dataMemo con onSubmitDataMemo.\tresultSubmitData\tRT\tValor del resultado al ejecutar onSubmitData.\tresultSubmitDataMemo\tRM\tValor del resultado al ejecutar onSubmitDataMemo.\tdataError\tET\tValor del error al ejecutar onSubmitData en caso que ocurra un error.\tdataErrorMemo\tEM\tValor del error al ejecutar onSubmitDataMemo en caso que ocurra un error.\tsetResultSubmitData\tDispatch<SetStateAction<RT | undefined>>\tFuncion para modificar el valor de resultSubmitData.\tsetResultSubmitDataMemo\tDispatch<SetStateAction<RM | undefined>>\tFuncion para modificar el valor de resultSubmitDataMemo.\tsetDataError\tDispatch<SetStateAction<ET | undefined>>\tFuncion para modificar el valor de dataError.\tsetDataErrorMemo\tDispatch<SetStateAction<EM | undefined>>\tFuncion para modificar el valor de dataErrorMemo.","usos#Usos":"Ejecutar y Detectar acci√≥n\nconst { setData } = useData({\n  defaultData: initialData,\n  options: { onChangeDataAfter: console.log },\n});\nsetData(newValue);\nDefiniendo interfaz\nconst { setData } = useData<{ name: string }>({\n  defaultData: { name: \"example\" },\n});\nsetData({ name: \"new name\" });\nUsando para un formulario\ninterface useFormLoginDataProps {\n    email: string;\n    password: string;\n}\nconst {\n    data,\n    onChangeData,\n    onSubmitData,\n    dataError,\n    loaderSubmit,\n    isValidData,\n    validatorData,\n} = useData<\n    useFormLoginDataProps,\n    any,\n    useFormLoginResultProps,\n    any,\n    ErrorFenextjs | undefined\n>(\n    { email: '', password: '' },\n    {\n        onSubmitData: (data)=>{\n            //proceso de login\n        },\n        validator: FenextjsValidator<useFormLoginDataProps>()\n            .setName('onLogin')\n            .isObject({\n                email: FenextjsValidator()\n                    .isString('Email requerido')\n                    .isEmail('Email invalido')\n                    .isRequired('Email requerido',\n                password: FenextjsValidator()\n                    .isString('Contrase√±a requerido')\n                    .isRequired('Contrase√±a es requerida')\n                    .isMinOrEqual(6, 'La contrase√±a es muy corta'),\n            }),\n        onAfterSubmitDataOk: async ({ result }) => {\n            console.log(\"Ingreso √©xitoso\")\n        },\n        onAfterSubmitDataError: ({ error }) => {\n            console.log(\"Ocurrio un error\", error)\n        },\n    },\n);\n<FormBase  onSubmit={onSubmitData}>\n    <InputText\n        id=\"email\"\n        placeholder={'Correo electr√≥nico'}\n        validator={validatorData?.email}\n        onChange={onChangeData('email')}\n        defaultValue={data.email}\n        errorWithIsChange={true}\n    />\n    <InputPassword\n        id=\"password\"\n        placeholder={'Contrase√±a'}\n        validator={validatorData?.password}\n        onChange={onChangeData('password')}\n        defaultValue={data.password}\n        errorWithIsChange={true}\n    />\n    {dataError && <ErrorComponent error={dataError} />}\n    <Button\n        disabled={isValidData !== true}\n        loader={loaderSubmit}\n        onClick={onSubmitData}\n        full={true}\n        size=\"extra-strong\"\n    >\n        Entrar\n    </Button>\n</FormBase>\nUsando useGlobalContext\nconst DATA1 = useData<string>(\n    \"\",\n    {\n        useGlobalContext:\"name-of-context-custom\"\n    },\n);\nconst DATA2 = useData<string>(\n    \"\",\n    {\n        useGlobalContext:\"name-of-context-custom\"\n    },\n);\n<Title>DATA1 value = {DATA1.data}</Title>\n<Title>DATA2 value = {DATA2.data}</Title>\n<Button\n    onClick={()=>{\n        DATA1.setData(\"value1\")\n    }}\n>\n    setData1 to \"value1\"\n</Button>\n<Button\n    onClick={()=>{\n        DATA2.setData(\"value2\")\n    }}\n>\n    setData2 to \"value2\"\n</Button>"}},"/hook/usecsc":{"title":"useCSC","data":{"":"El hook useCSC proporciona funcionalidad para seleccionar Pa√≠s, Estado y Ciudad, cargando din√°micamente los datos relacionados.","importaci√≥n#Importaci√≥n":"Para importar el componente useCSC, se puede hacer desde fenextjs\nimport { useCSC } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tdefaultValue\tCSCProps\tno\t\tValor inicial opcional que define los datos CSC por defecto.\tvalue\tCSCProps\tno\t\tObjeto opcional que contiene el valor actual de los datos CSC seleccionados.\tonChange\t(data: CSCProps) => void\tno\t\tFunci√≥n de callback que se ejecuta al cambiar el valor CSC.\tdefaultValueJsonString\tstring\tno\t\tValor inicial opcional en formato JSON string para los datos CSC.\tvalueJsonString\tstring\tno\t\tCadena JSON opcional que representa el valor actual de los datos CSC.\tonChangeJsonString\t(data: string) => void\tno\t\tFunci√≥n de callback que se ejecuta cuando los datos CSC en formato JSON cambian.\tparseJson_to_String\t(data: CSCProps) => string\tno\t\tFunci√≥n para convertir CSCProps a una cadena JSON, usa parseCSC_to_CSCString si no se proporciona.\tparseString_to_Json\t(data: string) => CSCProps\tno\t\tFunci√≥n para convertir una cadena JSON a CSCProps, usa parseCSCString_to_CSC si no se proporciona.","returns#Returns":"Parametro\tTipo\tDescripcion\tcountrys\tCountryProps[]\tArray de pa√≠ses cargados para selecci√≥n.\tstates\tStateProps[]\tArray de estados cargados para selecci√≥n, seg√∫n el pa√≠s seleccionado.\tcitys\tCityProps[]\tArray de ciudades cargadas para selecci√≥n, seg√∫n el estado seleccionado.\tonChangeCSC\t(id: keyof CSCProps) => (v: CountryProps | StateProps | CityProps | undefined) => void\tFunci√≥n para actualizar los datos CSC seleccionados, cargando autom√°ticamente estados o ciudades seg√∫n corresponda.\tvalue\tCSCProps\tValor actual de los datos CSC seleccionados, combinado de los datos recibidos y el valor por defecto.\tloadCountrys\tboolean\tIndica si los datos de pa√≠ses est√°n cargando.\tloadStates\tboolean\tIndica si los datos de estados est√°n cargando.\tloadCitys\tboolean\tIndica si los datos de ciudades est√°n cargando.","usos#Usos":"Uso b√°sico\nconst { onChangeCSC, value } = useCSC({\n  defaultValue: {\n    country: {\n      id: 42,\n      text: \"M√©xico\",\n      code: \"MX\",\n      code_phone: \"+52\",\n    },\n  },\n});\nonChangeCSC(\"country\")({\n  id: 82,\n  text: \"Colombia\",\n  code: \"CO\",\n  code_phone: \"+57\",\n});\nCambiar ciudad\nconst { onChangeCSC } = useCSC();\nonChangeCSC(\"city\")({\n  id: 465167,\n  id_state: 1700,\n  text: \"Medell√≠n\",\n  id_country: 82,\n  nameAve: \"MEDELLIN(ANTIOQUIA)\",\n});"}},"/hook/usedatalayer":{"title":"useDataLayer","data":{"":"El hook useDataLayer permite interactuar con el objeto global de dataLayer para enviar eventos y datos personalizados.","importaci√≥n#Importaci√≥n":"Para importar el componente useDataLayer, se puede hacer desde fenextjs\nimport { useDataLayer } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tuseDataLayerProps\tobject\tno\t\tPropiedades de configuraci√≥n para el hook. Actualmente no requiere ninguna propiedad espec√≠fica.","usedatalayerpushprops#useDataLayerPushProps":"Propiedades que pueden ser enviadas a dataLayer usando la funci√≥n push.\nNombre\tDescripcion\tDefault\tevent\tNombre del evento que se va a enviar a dataLayer.\tN/A\tvalue\tValor opcional asociado al evento.\tundefined\t[id: string]: any\tPropiedades adicionales que se pueden incluir en el evento.\tN/A","returns#Returns":"Parametro\tTipo\tDescripcion\tpush\t(props: useDataLayerPushProps) => boolean\tFunci√≥n que env√≠a un evento y datos al objeto dataLayer. Retorna true si el evento se ha enviado correctamente, false si dataLayer no est√° disponible.","usos#Usos":"Enviar evento b√°sico\nconst { push } = useDataLayer();\npush({ event: \"pageView\" });\nEnviar evento con datos adicionales\nconst { push } = useDataLayer();\npush({ event: \"userLogin\", userId: \"12345\", value: \"Inicio de sesi√≥n\" });"}},"/hook/usedatavalidator":{"title":"useDataValidator","data":{"":"El hook useDataValidator permite validar datos de entrada utilizando una clase de validaci√≥n opcional, y proporciona el estado de validaci√≥n.","importaci√≥n#Importaci√≥n":"Para importar el componente useDataValidator, se puede hacer desde fenextjs\nimport { useDataValidator } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tdata\tT\ts√≠\t\tLos datos que se van a validar.\tvalidator\tFenextjsValidatorClass<T>\tno\t\tInstancia opcional de una clase de validaci√≥n personalizada para validar los datos.\tautoOnValidate\tboolean\tno\ttrue\tDetermina si la validaci√≥n se debe ejecutar autom√°ticamente al cambiar los datos.","returns#Returns":"Parametro\tTipo\tDescripcion\tisValidData\ttrue | ErrorFenextjs | undefined\tIndica si los datos son v√°lidos (true), si hay un error (ErrorFenextjs), o si a√∫n no se ha validado (undefined).\tonValidateData\t() => void\tFunci√≥n que ejecuta la validaci√≥n de los datos de forma manual.","usos#Usos":"Validaci√≥n autom√°tica de datos\nconst { isValidData, onValidateData } = useDataValidator({\n  data: myData,\n  validator: new FenextjsValidatorClass(),\n});\nconsole.log(isValidData); // Muestra el estado de la validaci√≥n\nValidaci√≥n manual de datos\nconst { isValidData, onValidateData } = useDataValidator({\n  data: myData,\n  validator: new FenextjsValidatorClass(),\n  autoOnValidate: false,\n});\nonValidateData(); // Ejecuta la validaci√≥n manualmente"}},"/hook/usedocumentevent":{"title":"useDocumentEvent","data":{"":"El hook useDocumentEvent permite agregar y eliminar eventos del documento de forma din√°mica seg√∫n las propiedades especificadas.","importaci√≥n#Importaci√≥n":"Para importar el componente useDocumentEvent, se puede hacer desde fenextjs\nimport { useDocumentEvent } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tuseDocumentEventProps\t{ [key in TypeListenerKeyFunctions]?: TypeListenerFunctions<key> }\tno\t\tObjeto donde las claves son nombres de eventos del documento y los valores son funciones a ejecutar cuando el evento ocurre.","returns#Returns":"Parametro\tTipo\tDescripcion\tonReload\t() => void\tFunci√≥n que elimina y vuelve a agregar los eventos, √∫til para actualizar los listeners en tiempo real.","usos#Usos":"Uso b√°sico con evento 'click'\nuseDocumentEvent({ click: (e) => console.log(\"Documento clickeado:\", e) });\nM√∫ltiples eventos con diferentes funciones\nuseDocumentEvent({\n  click: (e) => console.log(\"Click en el documento:\", e),\n  keydown: (e) => console.log(\"Tecla presionada:\", e.key),\n});\nRecargar listeners manualmente\nconst { onReload } = useDocumentEvent({\n  mousemove: (e) => console.log(\"Movimiento del mouse:\", e),\n});\nonReload(); // Vuelve a cargar los listeners manualmente."}},"/hook/usedate":{"title":"useDate","data":{"":"El hook useDate gestiona una instancia de FenextjsDate para manejar la fecha y ejecutar un callback opcional.","importaci√≥n#Importaci√≥n":"Para importar el componente useDate, se puede hacer desde fenextjs\nimport { useDate } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tdefaultDate\tDate\tno\t\tFecha predeterminada que se establece al inicializar el hook.\tonCallback\t(dateString: string) => void\tno\t\tFunci√≥n de callback que se ejecuta cuando cambia la fecha.","returns#Returns":"Parametro\tTipo\tDescripcion\tdate\tFenextjsDate\tInstancia de FenextjsDate que permite manejar y manipular la fecha.","usos#Usos":"Uso b√°sico de useDate\nconst date = useDate({\n  defaultDate: new Date(),\n  onCallback: (dateString) => console.log(\"Nueva fecha:\", dateString),\n});\nconsole.log(date.format()); // Ejemplo de uso de una funci√≥n en FenextjsDate"}},"/hook/usehistory":{"title":"useHistory","data":{"":"El hook useHistory gestiona un historial de rutas personalizadas utilizando sessionStorage. Proporciona funcionalidades para rastrear las rutas visitadas y retroceder a una ruta espec√≠fica.","importaci√≥n#Importaci√≥n":"Para importar el componente useHistory, se puede hacer desde fenextjs\nimport { useHistory } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tname\tstring\tno\t\"fenextjs-history\"\tClave utilizada para almacenar el historial de rutas en el almacenamiento de sesi√≥n.","nota#NOTA":"Para que useHistory funcione correctamente debe ser ejecutado en _app o el layout mas superior que se posea.\nimport type { AppProps } from \"next/app\";\nimport { useHistory } from \"fenextjs\";\nexport default function App({ Component, pageProps }: AppProps) {\n  useHistory({});\n  return <Component {...pageProps} />;\n}","returns#Returns":"Parametro\tTipo\tDescripcion\tpaths\tstring[] | undefined\tLista de rutas almacenadas en el historial.\tcurrentPath\tstring | undefined\tRuta actual basada en el historial almacenado. Corresponde a la √∫ltima ruta registrada.\tonBack\t(props: useHistoryOnBackProps) => void\tFunci√≥n para retroceder a una ruta anterior en el historial.","usehistoryonbackprops#useHistoryOnBackProps":"Propiedades para el uso de onBack:\nNombre\tRequerido\tDescripcion\tonValidateRuteBack\tno\tFunci√≥n para validar si la ruta de destino es valida para redireccionar.","usos#Usos":"Inicializar el historial de rutas\nconst { paths, currentPath } = useHistory();\nRetroceder a una ruta previa\nconst { onBack } = useHistory();\nonBack({});\nRetroceder a una ruta previa restringiendo la pagina '/restricted'\nconst { onBack } = useHistory();\nonBack({\n  onValidateRuteBack: (path) => path !== \"/restricted\",\n});"}},"/hook/usejsonstring":{"title":"useJsonString","data":{"":"El hook useJsonString gestiona el estado y sincronizaci√≥n entre un valor JSON y su representaci√≥n en formato string, permitiendo opcionalmente definir funciones de parseo para la conversi√≥n entre tipos.","importaci√≥n#Importaci√≥n":"Para importar el componente useJsonString, se puede hacer desde fenextjs\nimport { useJsonString } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tdefaultValue\tT\tno\t\tValor predeterminado en formato JSON.\tvalue\tT\tno\t\tValor en formato JSON que se desea sincronizar.\tonChange\t(data: T) => void\tno\t\tFunci√≥n que se ejecuta cuando el valor en JSON cambia.\tdefaultValueJsonString\tP\tno\t\tValor predeterminado en formato string.\tvalueJsonString\tP\tno\t\tValor en formato string que se desea sincronizar.\tonChangeJsonString\t(data: P | undefined) => void\tno\t\tFunci√≥n que se ejecuta cuando el valor en formato string cambia.\tparseString_to_Json\t(data: P) => T | undefined\tno\t\tFunci√≥n que convierte el valor de formato string a JSON.\tparseJson_to_String\t(data: T) => P | undefined\tno\t\tFunci√≥n que convierte el valor de JSON a formato string.","returns#Returns":"Parametro\tTipo\tDescripcion\tvalue\tT\tValor calculado en formato JSON, basado en el valor string o JSON pasado como argumento.\tdefaultValue\tT\tValor predeterminado en formato JSON, basado en el valor string o JSON pasado como argumento.\tonChange\t(e: T) => void\tFunci√≥n para actualizar el valor JSON y sincronizar su representaci√≥n en formato string.","usos#Usos":"Uso b√°sico con un valor JSON inicial\nconst { value, onChange } = useJsonString({\n  value: { name: \"Example\" },\n  onChange: (data) => console.log(\"Nuevo valor JSON:\", data),\n});\nSincronizaci√≥n entre JSON y string\nconst { value, onChange } = useJsonString({\n  valueJsonString: '{\"name\":\"Example\"}',\n  parseString_to_Json: JSON.parse,\n  parseJson_to_String: JSON.stringify,\n  onChangeJsonString: (data) => console.log(\"Nuevo valor string:\", data),\n});"}},"/hook/uselanguage":{"title":"useLanguage","data":{"":"El hook useLanguage facilita la gesti√≥n de traducciones y el cambio de idioma en una aplicaci√≥n. Permite traducir palabras con base en una lista de traducciones proporcionada y manejar casos en los que no se encuentra una traducci√≥n.","importaci√≥n#Importaci√≥n":"Para importar el componente useLanguage, se puede hacer desde fenextjs\nimport { useLanguage } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tlangs\tLangs\ts√≠\t\tLista de idiomas disponibles en la aplicaci√≥n, definida como un array de strings.\tlistTranductions\tLanguageListProps<Langs>\ts√≠\t\tUn objeto que contiene las traducciones organizadas por palabra e idioma.\tdefaultLang\tLangs[number]\tno\t\tIdioma predeterminado que se usar√° si no se ha seleccionado otro idioma.\tonNoFoundTranslate\t(data: { word: string; lang: Langs[number] }) => void\tno\t\tFunci√≥n que se ejecuta cuando no se encuentra una traducci√≥n para una palabra espec√≠fica.\tfallbackNoFoundTranslation\tstring\tno\t\tTraducci√≥n alternativa que se usar√° cuando no se encuentre la traducci√≥n espec√≠fica para una palabra.","languagelistprops#LanguageListProps":"Interface para definir la lista de idiomas.\ninterface LanguageListProps<Langs extends string[]> {\n  [word: string]: {\n    [lang in Langs[number]]: any;\n  };\n}","returns#Returns":"Parametro\tTipo\tDescripcion\tonTranslate\t(word?: any) => any\tFunci√≥n que recibe una palabra y devuelve su traducci√≥n en el idioma actual o la traducci√≥n alternativa, si no se encuentra.\tload\tboolean\tVariable que determina si currentLang temino de cargar.\tcurrentLang\tLangs[number]\tEl idioma actual seleccionado.\tsetCurrentLang\t(lang: Langs[number]) => void\tFunci√≥n para cambiar el idioma actual.","usos#Usos":"Traducci√≥n b√°sica\nconst { onTranslate } = useLanguage<[\"en\", \"es\"]>({\n  langs: [\"en\", \"es\"],\n  listTranductions: {\n    hello: { en: \"Hello\", es: \"Hola\" },\n    world: { en: \"World\", es: \"Mundo\" },\n  },\n  defaultLang: \"en\",\n});\nconst translatedWord = onTranslate(\"hello\"); // \"Hello\" si el idioma actual es \"en\"\nCambio de idioma\nconst { setCurrentLang } = useLanguage<[\"en\", \"es\"]>({\n  langs: [\"en\", \"es\"],\n  listTranductions: {\n    goodbye: { en: \"Goodbye\", es: \"Adi√≥s\" },\n  },\n  defaultLang: \"es\",\n});\nsetCurrentLang(\"en\"); // Cambia el idioma actual a \"en\"\nFallback para traducciones no encontradas\nconst { onTranslate } = useLanguage<[\"en\", \"es\"]>({\n  langs: [\"en\", \"fr\"],\n  listTranductions: {\n    welcome: { en: \"Welcome\", fr: \"Bienvenue\" },\n  },\n  fallbackNoFoundTranslation: \"Translation not available\",\n});\nconst translation = onTranslate(\"nonexistent\"); // \"Translation not available\""}},"/hook/uselocalstorage":{"title":"useLocalStorage","data":{"":"El hook useLocalStorage permite interactuar con el almacenamiento local del navegador, ofreciendo funcionalidades como cargar, actualizar y eliminar valores de manera reactiva.","importaci√≥n#Importaci√≥n":"Para importar el componente useLocalStorage, se puede hacer desde fenextjs\nimport { useLocalStorage } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tname\tstring\ts√≠\t\tNombre clave utilizada para identificar el valor en el almacenamiento local.\tdefaultValue\tT\tno\t\tValor predeterminado que se utiliza si no se encuentra un valor en el almacenamiento local.\tparse\t(value: any) => T\tno\t\tFunci√≥n para convertir el valor almacenado en un formato espec√≠fico.\tupdateValue\t(oldValue: O, newValue: T) => T\tno\t\tFunci√≥n que define c√≥mo actualizar el valor almacenado con base en el valor anterior.","returns#Returns":"Parametro\tTipo\tDescripcion\tload\tboolean\tIndica si useLocalStorage finalizo su carga.\tvalue\tT | undefined\tEl valor actualmente almacenado en el almacenamiento local.\tsetLocalStorage\t(newValue: T) => void\tFunci√≥n para actualizar el valor en el almacenamiento local.\tonClearLocalStorage\t() => void\tFunci√≥n para eliminar el valor asociado del almacenamiento local.","usos#Usos":"Cargar un valor inicial\nconst { value, load } = useLocalStorage({\n  name: \"example_key\",\n  defaultValue: \"Default\",\n});\nActualizar un valor\nconst { setLocalStorage } = useLocalStorage({ name: \"example_key\" });\nsetLocalStorage(\"Nuevo valor\");\nEliminar un valor\nconst { onClearLocalStorage } = useLocalStorage({ name: \"example_key\" });\nonClearLocalStorage();\nUsar una funci√≥n personalizada para parsear valores\nconst { value } = useLocalStorage<number>({\n  name: \"number_key\",\n  defaultValue: 0,\n  parse: (v) => parseInt(v, 10),\n});"}},"/hook/usenotification":{"title":"useNotification","data":{"":"El hook useNotification permite gestionar mensajes de notificaci√≥n temporales en la aplicaci√≥n, con control sobre su duraci√≥n y estado.","importaci√≥n#Importaci√≥n":"Para importar el componente useNotification, se puede hacer desde fenextjs\nimport { useNotification } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\ttime\tnumber\tno\t\tTiempo en milisegundos durante el cual la notificaci√≥n se muestra. Valor predeterminado: 2000.","notificationdataprops#NotificationDataProps":"Propiedades de los datos de notificaci√≥n, que incluyen el tipo y mensaje de la notificaci√≥n.\nNombre\tDescripcion\tDefault\ttype\tEl tipo de la notificaci√≥n. Puede ser un valor de RequestResultTypeProps o una clave de este tipo.\tundefined\tmessage\tMensaje de texto que se muestra en la notificaci√≥n.\tNo aplica (obligatorio)","returns#Returns":"Parametro\tTipo\tDescripcion\tnotification\tNotificationDataProps | undefined\tEl objeto de notificaci√≥n actual que contiene los datos de la notificaci√≥n activa, si la hay.\tpop\t(props: NotificationDataProps, options?: NotificationOptions) => void\tFunci√≥n que muestra una notificaci√≥n con los datos especificados y la oculta despu√©s de que transcurre el tiempo especificado.\treset\t() => void\tFunci√≥n que reinicia la notificaci√≥n al estado predeterminado.","usos#Usos":"Mostrar una notificaci√≥n\nconst { pop } = useNotification();\npop({ message: \"Notificaci√≥n de √©xito\", type: \"success\" });\nReiniciar la notificaci√≥n\nconst { reset } = useNotification();\nreset();"}},"/hook/usemodal":{"title":"useModal","data":{"":"El hook useModal controla el estado de un modal con opciones de almacenamiento local y personalizaci√≥n de eventos de activaci√≥n y cierre.","importaci√≥n#Importaci√≥n":"Para importar el componente useModal, se puede hacer desde fenextjs\nimport { useModal } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tname\tstring\tno\t\tIdentificador √∫nico para el modal.\tnameLocalStorage\tstring\tno\t\tClave utilizada para almacenar el estado activo del modal en el almacenamiento local.\tactiveByNameLocalStorage\tboolean\tno\t\tSi est√° activo, permite controlar el estado del modal a trav√©s del almacenamiento local usando el √∫ltimo nombre almacenado.\tactiveByNameContentLocalStorage\tboolean\tno\t\tPermite controlar el estado del modal usando todos los nombres almacenados en el almacenamiento local.\tactive\tboolean\tno\t\tEstado de activaci√≥n del modal pasado como propiedad.\tdefaultActive\tboolean\tno\t\tValor inicial del estado activo del modal.\tonActive\t() => void\tno\t\tFunci√≥n que se ejecuta cuando el modal se activa.\tonClose\t() => void\tno\t\tFunci√≥n que se ejecuta cuando el modal se cierra.\tonChange\t(d: boolean) => void\tno\t\tFunci√≥n que se ejecuta al cambiar el estado del modal.\tdisabled\tboolean\tno\t\tDeshabilita las acciones sobre el modal si est√° establecido en true.","returns#Returns":"Parametro\tTipo\tDescripcion\tactive\tboolean\tEstado actual del modal, considerando el valor almacenado y el estado de recarga.\tactiveNameLast\tboolean\tIndica si el nombre del modal es el √∫ltimo en la lista del almacenamiento local.\tactiveName\tboolean\tIndica si el nombre del modal est√° presente en la lista del almacenamiento local.\tlistNamesLocalStorage\tstring[]\tLista de nombres de modales almacenados en el almacenamiento local.\tonChange\t(d: boolean) => void\tFunci√≥n para actualizar el estado del modal.\tonActive\t() => void\tFunci√≥n para activar el modal.\tonClose\t() => void\tFunci√≥n para cerrar el modal.","usos#Usos":"Uso b√°sico del hook useModal\nconst { active, onActive, onClose } = useModal({\n  name: \"myModal\",\n  defaultActive: false,\n  onActive: () => console.log(\"Modal activado\"),\n  onClose: () => console.log(\"Modal cerrado\"),\n});\nControl de estado usando almacenamiento local\nconst { active, listNamesLocalStorage } = useModal({\n  name: \"myModal\",\n  nameLocalStorage: \"modalState\",\n  activeByNameLocalStorage: true,\n  onChange: (isActive) => console.log(\"Estado del modal:\", isActive),\n});"}},"/hook/useonline":{"title":"useOnline","data":{"":"El hook useOnline permite detectar en tiempo real si el usuario est√° conectado a internet. Tambi√©n permite ejecutar funciones personalizadas cuando cambia el estado de conexi√≥n.","importaci√≥n#Importaci√≥n":"Para importar el componente useOnline, se puede hacer desde fenextjs\nimport { useOnline } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tonOnline\t() => void\tno\t\tFunci√≥n que se ejecuta autom√°ticamente cuando el usuario vuelve a estar en l√≠nea.\tonOffline\t() => void\tno\t\tFunci√≥n que se ejecuta autom√°ticamente cuando el usuario pierde la conexi√≥n a internet.","returns#Returns":"Parametro\tTipo\tDescripcion\tisOnline\tboolean\tEstado que indica si el usuario est√° conectado a internet. Retorna true si est√° en l√≠nea y false si no lo est√°.","usos#Usos":"Detectar estado de conexi√≥n\nconst { isOnline } = useOnline();\nuseEffect(() => {\n  console.log(\"Estado de conexi√≥n:\", isOnline ? \"En l√≠nea\" : \"Desconectado\");\n}, [isOnline]);\nEjecutar funciones al cambiar el estado\nuseOnline({\n  onOnline: () => console.log(\"El usuario est√° en l√≠nea.\"),\n  onOffline: () => console.log(\"El usuario est√° desconectado.\"),\n});"}},"/hook/useprint":{"title":"usePrintIframe","data":{"":"El hook usePrintIframe permite gestionar la impresi√≥n de contenido en un iframe, configurando una URL y retraso opcional.","importaci√≥n#Importaci√≥n":"Para importar el componente usePrintIframe, se puede hacer desde fenextjs\nimport { usePrintIframe } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\turlBase\tstring\tno\t\tURL base para la ruta de impresi√≥n. Valor predeterminado: '/print'.\turl\tstring\ts√≠\t\tURL espec√≠fica a cargar en el iframe para la impresi√≥n.\tdata\tT | undefined\tno\t\tDatos que se pasar√°n y guardar√°n en el localStorage antes de imprimir.\tdelayForPrint\tnumber\tno\t\tRetraso en milisegundos antes de iniciar la impresi√≥n. Valor predeterminado: 1500.","returns#Returns":"Parametro\tTipo\tDescripcion\tloader\tboolean\tEstado de carga, true si la impresi√≥n est√° en proceso.\tonPrint\t() => void\tFunci√≥n para iniciar el proceso de impresi√≥n en el iframe.","usos#Usos":"Uso de usePrintIframe\nconst { loader, onPrint } = usePrintIframe({\n  url: \"/my-print-page\",\n  data: { key: \"value\" },\n  delayForPrint: 2000,\n});\nonPrint(); // Inicia la impresi√≥n"}},"/hook/usequery":{"title":"useQuery","data":{"":"El hook useQuery permite gestionar los par√°metros de consulta en la URL, incluyendo su actualizaci√≥n, eliminaci√≥n y verificaci√≥n de cambios en Next.js.","importaci√≥n#Importaci√≥n":"Para importar el componente useQuery, se puede hacer desde fenextjs\nimport { useQuery } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tignoreQuerys\t[id: keyof useQuery_QueryProps]\tno\t\tLista opcional de claves de consulta que deben ignorarse al obtener los par√°metros de la URL.","returns#Returns":"Parametro\tTipo\tDescripcion\tload\tboolean\tIndica si el enrutador (router) est√° listo.\tquery\tuseQuery_QueryProps\tObjeto que contiene los par√°metros de consulta de la URL, mapeados y procesados.\tsetQuery\t(query: useQuery_QueryProps) => boolean\tFunci√≥n que establece los par√°metros de consulta en la URL.\tonConcatQuery\t(newQuery: useQuery_QueryProps) => boolean\tFunci√≥n que concatena nuevos par√°metros de consulta con los existentes y actualiza la URL.\tonChangeQuery\t(id: keyof useQuery_QueryProps) => (value: any) => boolean\tFunci√≥n que retorna un manejador de eventos para actualizar un par√°metro espec√≠fico de consulta en la URL.\tonDeleteQuery\t(id: keyof useQuery_QueryProps) => boolean\tFunci√≥n que elimina un par√°metro espec√≠fico de consulta de la URL.\tisChange\tboolean\tIndica si los par√°metros de consulta han cambiado desde la √∫ltima vez.","usos#Usos":"Uso b√°sico de useQuery\nconst {\n  query,\n  setQuery,\n  onConcatQuery,\n  onChangeQuery,\n  onDeleteQuery,\n  isChange,\n} = useQuery({\n  ignoreQuerys: [\"tab\", \"page\"],\n});\n// Actualizar un par√°metro espec√≠fico\nonChangeQuery(\"search\")(\"new search term\");\n// Agregar varios par√°metros\nonConcatQuery({ page: 2, order: \"asc\" });\n// Eliminar un par√°metro espec√≠fico\nonDeleteQuery(\"order\");\nconsole.log(query); // Muestra los par√°metros de consulta actuales"}},"/hook/usesessionstorage":{"title":"useSessionStorage","data":{"":"El hook useSessionStorage permite interactuar con el almacenamiento de sesi√≥n del navegador, ofreciendo funcionalidades como cargar, actualizar y eliminar valores de manera reactiva.","importaci√≥n#Importaci√≥n":"Para importar el componente useSessionStorage, se puede hacer desde fenextjs\nimport { useSessionStorage } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tname\tstring\ts√≠\t\tNombre clave utilizada para identificar el valor en el almacenamiento de sesi√≥n.\tdefaultValue\tT\tno\t\tValor predeterminado que se utiliza si no se encuentra un valor en el almacenamiento de sesi√≥n.\tparse\t(value: any) => T\tno\t\tFunci√≥n para convertir el valor almacenado en un formato espec√≠fico.\tupdateValue\t(oldValue: O, newValue: T) => T\tno\t\tFunci√≥n que define c√≥mo actualizar el valor almacenado con base en el valor anterior.","returns#Returns":"Parametro\tTipo\tDescripcion\tload\tboolean\tIndica si useSessionStorage finalizo su carga.\tvalue\tT | undefined\tEl valor actualmente almacenado en el almacenamiento de sesi√≥n.\tsetSessionStorage\t(newValue: T) => void\tFunci√≥n para actualizar el valor en el almacenamiento de sesi√≥n.\tonClearSessionStorage\t() => void\tFunci√≥n para eliminar el valor asociado del almacenamiento de sesi√≥n.","usos#Usos":"Cargar un valor inicial\nconst { value, load } = useSessionStorage({\n  name: \"example_key\",\n  defaultValue: \"Default\",\n});\nActualizar un valor\nconst { setSessionStorage } = useSessionStorage({ name: \"example_key\" });\nsetSessionStorage(\"Nuevo valor\");\nEliminar un valor\nconst { onClearSessionStorage } = useSessionStorage({ name: \"example_key\" });\nonClearSessionStorage();\nUsar una funci√≥n personalizada para parsear valores\nconst { value } = useSessionStorage<number>({\n  name: \"number_key\",\n  defaultValue: 0,\n  parse: (v) => parseInt(v, 10),\n});"}},"/hook/userequest":{"title":"useRequestLite","data":{"":"Hook simplificado que permite ejecutar una funci√≥n de solicitud con manejo de errores y estado de carga.","importaci√≥n#Importaci√≥n":"Para importar el componente useRequestLite, se puede hacer desde fenextjs\nimport { useRequestLite } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tf\t(data: FP) => Promise<FR>\ts√≠\t\tFunci√≥n de solicitud a ejecutar.\tonResult\t(data: FR) => void\tno\t\tFunci√≥n de callback al recibir un resultado √©xitoso.\tonError\t(data: FE) => void\tno\t\tFunci√≥n de callback al ocurrir un error.\tparseError\t(errors: any) => FE\tno\t\tFunci√≥n para analizar y transformar el error, si ocurre.\tdefaultResult\tFR\tno\t\tResultado predeterminado de la solicitud.\tdefaultError\tFE\tno\t\tError predeterminado en caso de fallo de la solicitud.","returns#Returns":"Parametro\tTipo\tDescripcion\tloader\tboolean\tIndica si la solicitud est√° en curso.\terror\tFE | undefined\tError de la solicitud, si ha ocurrido.\tresult\tFR | undefined\tResultado de la solicitud, si se ha completado.\tonRequest\t(props: FP) => Promise<void>\tFunci√≥n para ejecutar la solicitud manualmente.\tonClear\t() => void\tFunci√≥n para limpiar el estado del resultado y el error."}},"/hook/useuser":{"title":"useUser","data":{"":"Hook para gestionar datos de usuario y autenticaci√≥n.","importaci√≥n#Importaci√≥n":"Para importar el componente useUser, se puede hacer desde fenextjs\nimport { useUser } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tvalidateTokenUser\tRequestProps<Q, R, E, T>\tno\t\tFunci√≥n para validar el token del usuario. Por defecto, verifica que el objeto del usuario tenga una propiedad 'token' y la decodifica utilizando JSON Web Tokens.\tvarName\tstring\tno\t\tNombre de la variable de almacenamiento en localStorage para guardar el usuario.\tonValidateUser\t(user: Q | null | undefined) => boolean\tno\t\tFunci√≥n personalizada para validar el objeto de usuario.\turlRedirectInLogut\tstring\tno\t\tURL de redirecci√≥n al cerrar sesi√≥n.\tonLogOut\t() => void\tno\t\tFunci√≥n que se ejecuta al cerrar sesi√≥n.","returns#Returns":"Parametro\tTipo\tDescripcion\tload\tboolean\tIndica si el usuario se ha cargado desde localStorage.\tuser\tU | null\tEl usuario actual almacenado en localStorage o null si no hay usuario autenticado.\tsetUser\t(user: U | null) => void\tFunci√≥n para establecer los datos del usuario en localStorage.\tonLogin\t(data: U) => Promise<RequestResultDataProps>\tFunci√≥n para iniciar sesi√≥n. Valida el token y guarda el usuario en localStorage si es v√°lido.\tonLogOut\t() => void\tFunci√≥n para cerrar sesi√≥n y redireccionar si se especifica una URL de redirecci√≥n.\tisValidUser\tboolean\tIndica si el usuario actual es v√°lido, basado en la funci√≥n onValidateUser."}},"/hook/usetheme":{"title":"useTheme","data":{"":"El hook useTheme permite gestionar y aplicar el tema de la aplicaci√≥n, almacen√°ndolo en el localStorage y configur√°ndolo en el DOM.","importaci√≥n#Importaci√≥n":"Para importar el componente useTheme, se puede hacer desde fenextjs\nimport { useTheme } from \"fenextjs\";","themetype#ThemeType":"Define los posibles valores para el tema, como 'auto', 'light', o 'dark', utilizados para establecer el tema en la aplicaci√≥n.\nNombre\tDescripcion\tDefault\tauto\tConfigura autom√°ticamente el tema seg√∫n las preferencias del sistema.\tauto\tlight\tConfigura el tema claro.\tN/A\tdark\tConfigura el tema oscuro.\tN/A","returns#Returns":"Parametro\tTipo\tDescripcion\ttheme\tThemeType\tEl tema actualmente almacenado, que puede ser 'auto', 'light', o 'dark'.\tsetTheme\t(newTheme: ThemeType) => void\tFunci√≥n para establecer un nuevo tema, almacen√°ndolo en localStorage y aplic√°ndolo al DOM.","usos#Usos":"Obtener y establecer el tema\nconst { theme, setTheme } = useTheme();\nconsole.log(theme); // Muestra el tema actual\nsetTheme(\"dark\"); // Cambia el tema a oscuro"}},"/hook/usevalidator":{"title":"useValidator","data":{"":"Hook personalizado para gestionar la validaci√≥n de datos con una instancia de validador.","importaci√≥n#Importaci√≥n":"Para importar el componente useValidator, se puede hacer desde fenextjs\nimport { useValidator } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tdata\tT\ts√≠\t\tLos datos a validar.\tvalidator\tFenextjsValidatorClass<T>\tno\t\tLa instancia del validador utilizada para la validaci√≥n.","returns#Returns":"Parametro\tTipo\tDescripcion\terror\tErrorFenextjs | undefined\tError de validaci√≥n si la validaci√≥n falla, o undefined si es √©xitosa.\tisValid\tboolean\tIndica si la validaci√≥n es √©xitosa.\tdata\tT\tLos datos originales pasados al hook.\tvalidator\tFenextjsValidatorClass<T>\tInstancia del validador utilizada para la validaci√≥n."}},"/img-placeholder":{"title":"Imagenes","data":{"":"Fenextjs posee Imagenes para implementar en Nextjs con el objetivo de agilizar el desarrollo y mantener un estandar.","lista-de-imagenes-disponibles#Lista de Imagenes disponibles":"Placeholder\nUser","instalacion-independiente#Instalacion independiente":"En caso de que solo quieras usar la parte de Imagenes de Fenextjs sin installar el resto de funcionalidades, puedes hacerlo de siguiente manera:","npm#Npm":"npm i fenextjs-img-placeholder","bun#Bun":"bun i fenextjs-img-placeholder","pnpm#Pnpm":"pnpm i fenextjs-img-placeholder"}},"/img-placeholder/placeholder":{"title":"FenextImgPlaceholder","data":{"":"Imagen que se puede usar para mostrar un placeholder en caso de que la imagen original tenga un problema de carga.","importaci√≥n#Importaci√≥n":"Para importar el componente FenextImgPlaceholder, se puede hacer desde fenextjs\nimport { FenextImgPlaceholder } from \"fenextjs\";","usos#Usos":"Usar en la etiqueta img\n<img src={FenextImgPlaceholder} alt=\"\" />\nUsar en la etiqueta Img de fenextjs\nimport { Img } from \"fenextjs\";\n<Img src={\"...url\"} alt=\"\" imgIf404={FenextImgPlaceholder} />;"}},"/":{"title":"Introducci√≥n","data":{"":"Agilizando el Desarrollo y productividad en Next.js.üòâBienvenidos a Fenextjs, una librer√≠a innovadora dise√±ada para revolucionar tu experiencia de desarrollo en Next.js. Nuestra misi√≥n es simplificar tu trabajo, ahorr√°ndote tiempo valioso y energ√≠a en cada proyecto.Caracter√≠sticas Destacadas:\nComponentes Pre-hechos: Una colecci√≥n extensa de componentes listos para usar, que van desde elementos de UI b√°sicos hasta componentes m√°s complejos.\nPersonalizaci√≥n a Medida: Flexibilidad para adaptar cada componente a las necesidades espec√≠ficas de tu proyecto.\nHooks Propios: Funcionalidades avanzadas con hooks personalizados, facilitando tareas complejas y mejorando el rendimiento.\nComponentes\nErrores\nFunciones\nFunciones para Firebase\nHooks personalizados\nIm√°genes para placeholder\nInterfaces\nValidadores\nSVG's para iconos y animaciones","instalaci√≥n-c√≥mo-empezar#Instalaci√≥n, ¬øC√≥mo empezar?:":"Fenext es compatible con varios gestores de paquetes. Aqu√≠ te explicamos c√≥mo instalarlo usando NPM, BUN y PNPM.","npm#NPM":"NPM es el gestor de paquetes por defecto para Node.js y es ampliamente utilizado en la comunidad de JavaScript. Para instalar Fenext JS con NPM, ejecuta:\nnpm i fenextjs","bun#BUN":"BUN es un gestor de paquetes y un entorno de ejecuci√≥n de JavaScript todo en uno, conocido por su velocidad y eficiencia. Instala Fenext JS con BUN usando:\nbun i fenextjs","pnpm#PNPM":"PNPM es un gestor de paquetes alternativo que se centra en el rendimiento y el ahorro de espacio. Para usar PNPM en la instalaci√≥n de Fenext JS, utiliza:\npnpm i fenextjs","dependencias-y-compatibilidad#Dependencias y Compatibilidad":"Fenext es compatible con versiones espec√≠ficas de nextjs y react.\n\"next\": \"13.5.1\",\n\"react\": \"18.2.0\",\n\"react-dom\": \"18.2.0\""}},"/img-placeholder/user":{"title":"FenextImgUserPlaceholder","data":{"":"Imagen que se puede usar para mostrar un placeholder en caso de que la imagen del usuaro tenga un problema de carga.","importaci√≥n#Importaci√≥n":"Para importar el componente FenextImgUserPlaceholder, se puede hacer desde fenextjs\nimport { FenextImgUserPlaceholder } from \"fenextjs\";","usos#Usos":"Usar en la etiqueta img\n<img src={FenextImgUserPlaceholder} alt=\"\" />\nUsar en la etiqueta Img de fenextjs\nimport { Img } from \"fenextjs\";\n<Img src={\"...url\"} alt=\"\" imgIf404={FenextImgUserPlaceholder} />;"}},"/interface":{"title":"Interfaces","data":{"":"Fenextjs posee interfaces para implementar en Nextjs con el objetivo de mantener un estandar en paginas y componentes.","lista-de-interfaces-disponibles#Lista de Interfaces disponibles":"Alert\nCard\nCSC (Country, State, City)\nDate\nError\nFile\nImg\nPhone\nRequest\nT\nTheme\nTimeZone\nUnit\nUser","instalacion-independiente#Instalacion independiente":"En caso de que solo quieras usar la parte de interfaces de Fenextjs sin installar el resto de funcionalidades, puedes hacerlo de siguiente manera:","npm#Npm":"npm i fenextjs-interface","bun#Bun":"bun i fenextjs-interface","pnpm#Pnpm":"pnpm i fenextjs-interface"}},"/interface/addressgoogle":{"title":"AddressGoogle","data":{"":"Interfaz que representa una direcci√≥n en el sistema de Google Maps.","importaci√≥n#Importaci√≥n":"Para importar el componente AddressGoogle, se puede hacer desde fenextjs\nimport { AddressGoogle } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\taddress_components\tGeocoderAddressComponent[] (opcional)\tno\tundefined\tComponentes de la direcci√≥n en formato estructurado.\tadr_address\tstring (opcional)\tno\tundefined\tRepresentaci√≥n de la direcci√≥n en formato ADR.\taspects\tPlaceAspectRating[] (opcional)\tno\tundefined\tAspectos espec√≠ficos del lugar, cada uno con su propia valoraci√≥n.\tbusiness_status\tBusinessStatus (opcional)\tno\tundefined\tEstado de operaci√≥n del negocio (abierto, cerrado temporalmente, etc.).\tlat\tnumber (opcional)\tno\tundefined\tLatitud de la ubicaci√≥n.\tlng\tnumber (opcional)\tno\tundefined\tLongitud de la ubicaci√≥n.\tformatted_address\tstring (opcional)\tno\tundefined\tDirecci√≥n en formato legible para el usuario.","geocoderaddresscomponent#GeocoderAddressComponent":"Interfaz para componentes de una direcci√≥n en el sistema de geocodificaci√≥n.\nkey\tvalue\tdescription\tlong_name\tstring\tNombre completo del componente de direcci√≥n.\tshort_name\tstring\tNombre abreviado del componente de direcci√≥n.\ttypes\tstring[]\tTipos de este componente de direcci√≥n.","placeaspectrating#PlaceAspectRating":"Interfaz para clasificaciones de aspectos de un lugar.\nkey\tvalue\tdescription\trating\tnumber\tPuntuaci√≥n asignada al aspecto evaluado.\ttype\tstring\tTipo de aspecto evaluado.","businessstatus#BusinessStatus":"Enum que define los diferentes estados de operaci√≥n de un negocio.\nkey\tvalue\tdescription\tCLOSED_PERMANENTLY\t'CLOSED_PERMANENTLY'\tEl negocio est√° cerrado permanentemente.\tCLOSED_TEMPORARILY\t'CLOSED_TEMPORARILY'\tEl negocio est√° cerrado temporalmente.\tOPERATIONAL\t'OPERATIONAL'\tEl negocio est√° operativo."}},"/interface/alert":{"title":"AlertProps","data":{"":"Interfaz que define las propiedades para configurar una alerta.","importaci√≥n#Importaci√≥n":"Para importar el componente AlertProps, se puede hacer desde fenextjs\nimport { AlertProps } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tmessage\tstring\tno\tN/A\tMensaje de la alerta que se mostrar√° al usuario.\ttype\tAlertType | keyof typeof AlertType\tno\tN/A\tEspecifica el tipo de alerta; acepta un valor del enum AlertType o una cadena equivalente.\tdata\tT (opcional)\tno\tundefined\tDatos adicionales opcionales asociados con la alerta.","alerttype#AlertType":"Enumeraci√≥n que define los diferentes tipos de alerta disponibles.\nkey\tvalue\tdescription\tOK\t'OK'\tTipo de alerta que indica que la operaci√≥n fue √©xitosa.\tERROR\t'ERROR'\tTipo de alerta que indica un error.\tNORMAL\t'NORMAL'\tTipo de alerta que representa un estado informativo o neutral.\tWARNING\t'WARNING'\tTipo de alerta que indica una advertencia."}},"/interface/csc":{"title":"CSCProps","data":{"":"Interfaz que define las propiedades relacionadas con un pa√≠s, estado y ciudad, junto con versiones de texto de cada una.","importaci√≥n#Importaci√≥n":"Para importar el componente CSCProps, se puede hacer desde fenextjs\nimport { CSCProps } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tcountry\tCountryProps (opcional)\tno\tundefined\tPropiedades del pa√≠s seleccionadas, definidas en la interfaz CountryProps.\tstate\tStateProps (opcional)\tno\tundefined\tPropiedades del estado seleccionado, definidas en la interfaz StateProps.\tcity\tCityProps (opcional)\tno\tundefined\tPropiedades de la ciudad seleccionada, definidas en la interfaz CityProps.","countryprops#CountryProps":"Interfaz que define las propiedades de un pa√≠s.\nid\ttype\trequired\tdefault\tdescription\tid\tnumber\ttrue\tN/A\tID √∫nico del pa√≠s.\ttext\tstring\ttrue\tN/A\tNombre del pa√≠s.\tcode\tstring\ttrue\tN/A\tC√≥digo ISO del pa√≠s.\timg\tstring (opcional)\tfalse\tundefined\tURL de la imagen representativa del pa√≠s.\tcode_phone\tstring (opcional)\tfalse\tundefined\tC√≥digo telef√≥nico del pa√≠s.\tlang\tstring (opcional)\tfalse\tundefined\tC√≥digo idioma del pa√≠s.","stateprops#StateProps":"Interfaz que define las propiedades de un estado.\nid\ttype\trequired\tdefault\tdescription\tid\tnumber\ttrue\tN/A\tID √∫nico del estado.\tid_country\tnumber\ttrue\tN/A\tID del pa√≠s al que pertenece el estado.\ttext\tstring\ttrue\tN/A\tNombre del estado.","cityprops#CityProps":"Interfaz que define las propiedades de una ciudad.\nid\ttype\trequired\tdefault\tdescription\tid\tnumber\ttrue\tN/A\tID √∫nico de la ciudad.\tid_state\tnumber\ttrue\tN/A\tID del estado al que pertenece la ciudad.\tid_country\tnumber\ttrue\tN/A\tID del pa√≠s al que pertenece la ciudad.\ttext\tstring\ttrue\tN/A\tNombre de la ciudad.\tnameAve\tstring (opcional)\tfalse\tundefined\tNombre de la avenida principal de la ciudad.","cscstringprops#CSCStringProps":"Interfaz alternativa que define los valores de pa√≠s, estado y ciudad como cadenas de texto.\nid\ttype\trequired\tdefault\tdescription\tcountry\tstring (opcional)\tfalse\tundefined\tNombre del pa√≠s en formato de texto.\tstate\tstring (opcional)\tfalse\tundefined\tNombre del estado en formato de texto.\tcity\tstring (opcional)\tfalse\tundefined\tNombre de la ciudad en formato de texto."}},"/interface/date":{"title":"Date","data":{"":"Tipos de fechas y d√≠as de la semana utilizados para la configuraci√≥n de fechas y calendarios.","importaci√≥n#Importaci√≥n":"Para importar el componente Date, se puede hacer desde fenextjs\nimport { Date } from \"fenextjs\";","typedate#TypeDate":"Tipo que define los valores posibles para configurar una selecci√≥n de fecha.\nkey\tvalue\tdescription\tdate\t'date'\tPermite la selecci√≥n de una fecha espec√≠fica.\tmonth\t'month'\tPermite la selecci√≥n de un mes espec√≠fico.\tweek\t'week'\tPermite la selecci√≥n de una semana espec√≠fica.\ttime\t'time'\tPermite la selecci√≥n de una hora espec√≠fica.","daysenum#DaysEnum":"Enumeraci√≥n que define los d√≠as de la semana.\nkey\tvalue\tdescription\tMonday\t'Monday'\tRepresenta el d√≠a lunes.\tTuesday\t'Tuesday'\tRepresenta el d√≠a martes.\tWednesday\t'Wednesday'\tRepresenta el d√≠a mi√©rcoles.\tThursday\t'Thursday'\tRepresenta el d√≠a jueves.\tFriday\t'Friday'\tRepresenta el d√≠a viernes.\tSaturday\t'Saturday'\tRepresenta el d√≠a s√°bado.\tSunday\t'Sunday'\tRepresenta el d√≠a domingo."}},"/interface/card":{"title":"Card_Enum","data":{"":"Enumeraci√≥n que define los diferentes tipos de tarjetas de cr√©dito y d√©bito reconocidas.","importaci√≥n#Importaci√≥n":"Para importar el componente Card_Enum, se puede hacer desde fenextjs\nimport { Card_Enum } from \"fenextjs\";","card_enum#Card_Enum":"Enumeraci√≥n que contiene las opciones para los tipos de tarjeta reconocidos.\nkey\tvalue\tdescription\tVISA\t'VISA'\tTarjeta Visa.\tMASTERCARD\t'MASTERCARD'\tTarjeta Mastercard.\tAMEX\t'AMEX'\tTarjeta American Express.\tDISCOVER\t'DISCOVER'\tTarjeta Discover.\tDINERS\t'DINERS'\tTarjeta Diners Club.\tDINERS_CARTE_BLANCHE\t'DINERS_CARTE_BLANCHE'\tTarjeta Diners Club Carte Blanche.\tJCB\t'JCB'\tTarjeta JCB.\tVISA_ELECTRON\t'VISA_ELECTRON'\tTarjeta Visa Electron.\tOTHER\t'OTHER'\tTipo de tarjeta desconocido o no especificado."}},"/interface/error":{"title":"ErrorProps","data":{"":"Interfaz para representar detalles de un error en una aplicaci√≥n, incluyendo c√≥digo, mensaje y datos adicionales.","importaci√≥n#Importaci√≥n":"Para importar el componente ErrorProps, se puede hacer desde fenextjs\nimport { ErrorProps } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tcode\tErrorCode\tno\tundefined\tC√≥digo del error espec√≠fico, definido en el enumerador ErrorCode.\tmessage\tstring\tno\tundefined\tMensaje descriptivo del error.\tdata\tD\tno\tundefined\tDatos adicionales sobre el error, de tipo gen√©rico D.\tcontent\tany\tno\tundefined\tContenido que se muestra sustituyendo 'message'.","errorcode#ErrorCode":"Enumeraci√≥n que define los posibles c√≥digos de error en la aplicaci√≥n.\nkey\tvalue\tdescription\tERROR\t'ERROR'\tError general no especificado.\tUSER_TOKEN_NOT_FOUND\t'USER_TOKEN_NOT_FOUND'\tNo se encontr√≥ el token de usuario.\tUSER_TOKEN_INVALID\t'USER_TOKEN_INVALID'\tEl token de usuario es inv√°lido.\tPAGE_NOT_FOUND\t'PAGE_NOT_FOUND'\tLa p√°gina solicitada no fue encontrada.\tSERVER_ERROR\t'SERVER_ERROR'\tError general del servidor.\tUNAUTHORIZED\t'UNAUTHORIZED'\tUsuario no autorizado para realizar esta acci√≥n.\tFORBIDDEN\t'FORBIDDEN'\tAcceso denegado a la solicitud.\tBAD_REQUEST\t'BAD_REQUEST'\tLa solicitud est√° mal formada.\tTIMEOUT\t'TIMEOUT'\tLa solicitud ha excedido el tiempo de espera.\tNETWORK_ERROR\t'NETWORK_ERROR'\tError en la red al realizar la solicitud.\tDATABASE_ERROR\t'DATABASE_ERROR'\tError al interactuar con la base de datos.\tFILE_NOT_FOUND\t'FILE_NOT_FOUND'\tEl archivo solicitado no fue encontrado.\tMETHOD_NOT_ALLOWED\t'METHOD_NOT_ALLOWED'\tM√©todo HTTP no permitido.\tNOT_ACCEPTABLE\t'NOT_ACCEPTABLE'\tLa solicitud no es aceptable.\tREQUEST_TIMEOUT\t'REQUEST_TIMEOUT'\tLa solicitud excedi√≥ el tiempo de espera.\tTOO_MANY_REQUESTS\t'TOO_MANY_REQUESTS'\tDemasiadas solicitudes en un tiempo corto.\tINTERNAL_SERVER_ERROR\t'INTERNAL_SERVER_ERROR'\tError interno en el servidor.\tNOT_IMPLEMENTED\t'NOT_IMPLEMENTED'\tFuncionalidad no implementada.\tSERVICE_UNAVAILABLE\t'SERVICE_UNAVAILABLE'\tEl servicio no est√° disponible.\tINPUT_INVALID\t'INPUT_INVALID'\tEl valor de entrada es inv√°lido.\tINPUT_LENGTH\t'INPUT_LENGTH'\tLa longitud de la entrada no es v√°lida.\tINPUT_NOT_EQUAL\t'INPUT_NOT_EQUAL'\tLa entrada no coincide con el valor esperado.\tINPUT_REQUIRED\t'INPUT_REQUIRED'\tSe requiere la entrada.\tINPUT_TOO_SHORT\t'INPUT_TOO_SHORT'\tLa entrada es demasiado corta.\tINPUT_TOO_LONG\t'INPUT_TOO_LONG'\tLa entrada es demasiado larga.\tINPUT_OUT_OF_RANGE\t'INPUT_OUT_OF_RANGE'\tLa entrada est√° fuera del rango permitido.\tINPUT_PATTERN_MISMATCH\t'INPUT_PATTERN_MISMATCH'\tLa entrada no coincide con el patr√≥n requerido.\tINPUT_VALUE_TOO_LOW\t'INPUT_VALUE_TOO_LOW'\tEl valor de entrada es demasiado bajo.\tINPUT_VALUE_TOO_HIGH\t'INPUT_VALUE_TOO_HIGH'\tEl valor de entrada es demasiado alto.\tGOOGLE_KEY_NOT_FOUND\t'GOOGLE_KEY_NOT_FOUND'\tClave de Google no encontrada.\tGOOGLE_KEY_INVALID\t'GOOGLE_KEY_INVALID'\tClave de Google inv√°lida."}},"/interface/file":{"title":"FileProps","data":{"":"Interfaz que define las propiedades para configurar un archivo.","importaci√≥n#Importaci√≥n":"Para importar el componente FileProps, se puede hacer desde fenextjs\nimport { FileProps } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tuuid\tstring (opcional)\tno\tundefined\tIdentificador √∫nico universal del archivo.\tid\tstring (opcional)\tno\tundefined\tIdentificador del archivo.\ttext\tstring (opcional)\tno\tundefined\tTexto descriptivo asociado al archivo.\textend\tstring (opcional)\tno\tundefined\tExtensi√≥n del archivo.\tfileData\tany\tno\tN/A\tDatos del archivo en cualquier formato requerido.\tbase64\tstring (opcional)\tno\tundefined\tRepresentaci√≥n en base64 del archivo.\turl\tstring (opcional)\tno\tundefined\tURL del archivo para acceso directo.\tstatus\tFileStatus | keyof typeof FileStatus (opcional)\tno\tundefined\tEspecifica el estado del archivo; acepta un valor del enum FileStatus o una cadena equivalente.","filestatus#FileStatus":"Enumeraci√≥n que define los diferentes estados disponibles para un archivo.\nkey\tvalue\tdescription\tNONE\t'NONE'\tEstado que indica que no se ha asignado ning√∫n estado al archivo.\tAPPROVED\t'APPROVED'\tEstado que indica que el archivo ha sido aprobado.\tPENDING\t'PENDING'\tEstado que indica que el archivo est√° pendiente de revisi√≥n.\tREFUSED\t'REFUSED'\tEstado que indica que el archivo ha sido rechazado."}},"/interface/img":{"title":"ImgDataProps","data":{"":"Interfaz que define las propiedades para configurar la imagen base en el componente Img.","importaci√≥n#Importaci√≥n":"Para importar el componente ImgDataProps, se puede hacer desde fenextjs\nimport { ImgDataProps } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tid\tstring | number (opcional)\tno\tundefined\tID de la imagen.\tname\tstring (opcional)\tno\tundefined\tNombre de la imagen.\talt\tstring (opcional)\tno\tundefined\tTexto alternativo de la imagen.\tsrc\tstring\tno\tN/A\tURL de la imagen.\tsrcMin1920\tstring (opcional)\tno\tundefined\tURL de la imagen para pantallas de 1920px o mayores.\tsrcMin1680\tstring (opcional)\tno\tundefined\tURL de la imagen para pantallas de 1680px o mayores.\tsrcMin1440\tstring (opcional)\tno\tundefined\tURL de la imagen para pantallas de 1440px o mayores.\tsrcMin1024\tstring (opcional)\tno\tundefined\tURL de la imagen para pantallas de 1024px o mayores.\tsrcMin992\tstring (opcional)\tno\tundefined\tURL de la imagen para pantallas de 992px o mayores.\tsrcMin768\tstring (opcional)\tno\tundefined\tURL de la imagen para pantallas de 768px o mayores.\tsrcMin575\tstring (opcional)\tno\tundefined\tURL de la imagen para pantallas de 575px o mayores.\tsrcThumbnail_200\tstring (opcional)\tno\tundefined\tURL de la imagen en miniatura para tama√±os de 200x200px o mayores.\tsrcThumbnail_100\tstring (opcional)\tno\tundefined\tURL de la imagen en miniatura para tama√±os de 100x100px o mayores."}},"/interface/phone":{"title":"PhoneProps","data":{"":"Interfaz que define las propiedades de un n√∫mero de tel√©fono, incluyendo el c√≥digo de pa√≠s y la bandera.","importaci√≥n#Importaci√≥n":"Para importar el componente PhoneProps, se puede hacer desde fenextjs\nimport { PhoneProps } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\timg\tstring (opcional)\tno\tundefined\tURL de la imagen de la bandera del pa√≠s.\tcode\tstring\tno\tN/A\tC√≥digo telef√≥nico del pa√≠s (e.g., '+1', '+44').\tcode_country\tstring (opcional)\tno\tundefined\tC√≥digo del pa√≠s en formato ISO (e.g., 'US', 'GB').\tcountry\tCountryProps (opcional)\tno\tundefined\tPropiedades adicionales del pa√≠s, definidas por la interfaz CountryProps.\tnumber\tstring\tno\tN/A\tN√∫mero de tel√©fono.\ttel\tstring (opcional)\tno\tundefined\tN√∫mero de tel√©fono en formato 'tel' para enlaces de marcaci√≥n r√°pida.","phonecodeprops#PhoneCodeProps":"Interfaz que define las propiedades relacionadas con el c√≥digo telef√≥nico de un pa√≠s.\nkey\tvalue\tdescription\timg\tstring (opcional)\tURL de la imagen de la bandera del pa√≠s.\tcode\tstring\tC√≥digo telef√≥nico del pa√≠s.\tcode_country\tstring (opcional)\tC√≥digo del pa√≠s en formato ISO.\tcountry\tCountryProps (opcional)\tPropiedades adicionales del pa√≠s."}},"/interface/request":{"title":"RequestResultProps","data":{"":"Tipos y interfaces que definen la estructura de resultados de una solicitud, incluyendo el tipo de resultado, datos, y posibles errores.","importaci√≥n#Importaci√≥n":"Para importar el componente RequestResultProps, se puede hacer desde fenextjs\nimport { RequestResultProps } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\ttype\tRequestResultTypeProps | keyof typeof RequestResultTypeProps\tno\tN/A\tEspecifica el tipo de resultado de la solicitud; acepta un valor del enum RequestResultTypeProps o una cadena equivalente.\tresult\tR (opcional)\tno\tundefined\tEl resultado de la solicitud si esta fue √©xitosa.\terror\tErrorProps<E> (opcional)\tno\tundefined\tDetalles del error si la solicitud fall√≥, definidos por la interfaz ErrorProps.\tmessage\tstring (opcional)\tno\tundefined\tMensaje adicional relacionado con el resultado de la solicitud.","requestresulttypeprops#RequestResultTypeProps":"Enumeraci√≥n que define los diferentes tipos de resultados de una solicitud.\nkey\tvalue\tdescription\tOK\t'OK'\tIndica que la solicitud fue √©xitosa.\tERROR\t'ERROR'\tIndica que hubo un error en la solicitud.\tNONE\t'NONE'\tIndica que no hay resultado o estado asociado a la solicitud.\tNORMAL\t'NORMAL'\tIndica un estado normal o neutral en la solicitud.\tWARNING\t'WARNING'\tIndica una advertencia asociada a la solicitud.","requestresultprops#RequestResultProps":"Tipo que define el resultado de una solicitud, que puede ser una promesa de RequestResultDataProps o RequestResultDataProps directamente.\nkey\tvalue\tdescription\tPromise<RequestResultDataProps<R, E, T>>\tPromesa de un objeto RequestResultDataProps\tResultado de la solicitud en forma de promesa.\tRequestResultDataProps<R, E, T>\tObjeto de tipo RequestResultDataProps\tResultado de la solicitud como objeto directo.","requestprops#RequestProps":"Tipo de funci√≥n que representa una solicitud con datos de entrada y un tipo de resultado especificado.\nkey\tvalue\tdescription\t(data: Q) => RequestResultProps<R, E, T>\tFunci√≥n\tFunci√≥n que toma datos de tipo Q y devuelve un RequestResultProps."}},"/interface/t":{"title":"_TProps","data":{"":"Interfaz que define propiedades opcionales para el uso de una funci√≥n personalizada de traducci√≥n.","importaci√≥n#Importaci√≥n":"Para importar el componente _TProps, se puede hacer desde fenextjs\nimport { _TProps } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tuseT\tboolean (opcional)\tno\tundefined\tIndica si se debe utilizar la funci√≥n de traducci√≥n personalizada _t.\t_t\t_TFunciton (opcional)\tno\tundefined\tFunci√≥n de traducci√≥n personalizada que recibe un string y devuelve un valor de cualquier tipo.","_tfunciton#_TFunciton":"Tipo de funci√≥n que define una funci√≥n de traducci√≥n personalizada.\nkey\tvalue\tdescription\t(d: string) => any\tFunci√≥n\tFunci√≥n que recibe un string y devuelve un valor de cualquier tipo."}},"/interface/theme":{"title":"ThemeProps","data":{"":"Define el tipo de tema y una constante que contiene los valores posibles para configurar el tema.","importaci√≥n#Importaci√≥n":"Para importar el componente ThemeProps, se puede hacer desde fenextjs\nimport { ThemeProps } from \"fenextjs\";","themetype#ThemeType":"Tipo que especifica los valores v√°lidos para el tema de la aplicaci√≥n.\nkey\tvalue\tdescription\tlight\t'light'\tTema claro, adecuado para ambientes luminosos.\tdark\t'dark'\tTema oscuro, adecuado para ambientes con poca luz.\tauto\t'auto'\tTema autom√°tico que ajusta seg√∫n la configuraci√≥n del sistema.","themeconst#ThemeConst":"Constante que contiene los valores posibles para el tema (ThemeType).\nkey\tvalue\tdescription\tlight\t'light'\tTema claro, adecuado para ambientes luminosos.\tdark\t'dark'\tTema oscuro, adecuado para ambientes con poca luz.\tauto\t'auto'\tTema autom√°tico que ajusta seg√∫n la configuraci√≥n del sistema."}},"/interface/timezone":{"title":"TimeZoneProps","data":{"":"Interfaz que define las propiedades para manejar la zona horaria y la hora espec√≠fica.","importaci√≥n#Importaci√≥n":"Para importar el componente TimeZoneProps, se puede hacer desde fenextjs\nimport { TimeZoneProps } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tzone\tstring\tno\tN/A\tNombre de la zona horaria (por ejemplo, 'America/New_York').\ttime\tstring\tno\tN/A\tHora en formato de cadena, que representa la hora local en la zona horaria especificada."}},"/interface/unit":{"title":"UnitProps","data":{"":"Enumeraciones que definen las unidades de medida para distancia, peso y volumen.","importaci√≥n#Importaci√≥n":"Para importar el componente UnitProps, se puede hacer desde fenextjs\nimport { UnitProps } from \"fenextjs\";","unit_distance#Unit_Distance":"Enumeraci√≥n que define las unidades de medida para distancia.\nkey\tvalue\tdescription\tMM\t'MM'\tMil√≠metros.\tCM\t'CM'\tCent√≠metros.\tM\t'M'\tMetros.\tIN\t'IN'\tPulgadas.\tFT\t'FT'\tPies.","unit_weight#Unit_Weight":"Enumeraci√≥n que define las unidades de medida para peso.\nkey\tvalue\tdescription\tG\t'G'\tGramos.\tKG\t'KG'\tKilogramos.\tOZ\t'OZ'\tOnzas.\tLB\t'LB'\tLibras.","unit_volumen#Unit_Volumen":"Enumeraci√≥n que define las unidades de medida para volumen.\nkey\tvalue\tdescription\tML\t'ML'\tMililitros.\tL\t'L'\tLitros.\tCC\t'CC'\tCent√≠metros c√∫bicos.\tCM3\t'CM3'\tCent√≠metros c√∫bicos.\tM3\t'M3'\tMetros c√∫bicos.\tIN3\t'IN3'\tPulgadas c√∫bicas.\tFT3\t'FT3'\tPies c√∫bicos.\tGAL\t'GAL'\tGalones."}},"/interface/user":{"title":"UserProps","data":{"":"Interfaz que define las propiedades para un usuario, incluyendo su estado, rol y detalles de verificaci√≥n.","importaci√≥n#Importaci√≥n":"Para importar el componente UserProps, se puede hacer desde fenextjs\nimport { UserProps } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tstatus\tUserStatusProps\tno\tN/A\tEstado de verificaci√≥n del usuario.\tid\tstring\tno\tN/A\tIdentificador √∫nico del usuario.\ttoken\tstring\tno\tN/A\tToken asociado al usuario para autenticaci√≥n.\tname\tstring\tno\tN/A\tNombre completo del usuario.\timg\tImgDataProps\tno\tN/A\tImagen de perfil del usuario.\trole\tUserRoleProps\tno\tN/A\tRol del usuario dentro del sistema.\tphone\tPhoneProps (opcional)\tno\tundefined\tN√∫mero de tel√©fono del usuario.\temail\tstring\tno\tN/A\tCorreo electr√≥nico del usuario.\tstripe_id\tstring (opcional)\tno\tundefined\tIdentificador del usuario en Stripe.\tdateCreate\tDate\tno\tN/A\tFecha en la que se cre√≥ el usuario.\tverify\t{ [id in UserTypeVerifyProps]: UserStatusProps } (opcional)\tno\tundefined\tInformaci√≥n de verificaci√≥n para distintos tipos, como email, tel√©fono y empresa.","usertypeverifyprops#UserTypeVerifyProps":"Enumeraci√≥n que define los tipos de verificaci√≥n para un usuario.\nkey\tvalue\tdescription\temail\t0\tVerificaci√≥n por correo electr√≥nico.\tphone\t1\tVerificaci√≥n por n√∫mero de tel√©fono.\tcompany\t2\tVerificaci√≥n de empresa.","userstatusprops#UserStatusProps":"Enumeraci√≥n que define los estados de un usuario.\nkey\tvalue\tdescription\tVERIFY\t'VERIFY'\tUsuario verificado.\tNOVERIFY\t'NOVERIFY'\tUsuario no verificado.\tBAN\t'BAN'\tUsuario prohibido (ban).\tPENDING\t'PENDING'\tVerificaci√≥n pendiente del usuario.","userroleprops#UserRoleProps":"Enumeraci√≥n que define los roles de un usuario.\nkey\tvalue\tdescription\tADMIN\t'ADMIN'\tUsuario con rol de administrador.\tCUSTOMER\t'CUSTOMER'\tUsuario con rol de cliente.\tBACKOFFICE\t'BACKOFFICE'\tUsuario con rol de backoffice."}},"/components/notification/pop":{"title":"NotificationPop","data":{"":"El componente NotificationPop muestra mensajes de notificaci√≥n flotantes que desaparecen autom√°ticamente despu√©s de un tiempo especificado. Puede posicionarse en la parte superior o inferior de la pantalla.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente NotificationPop, se puede hacer desde fenextjs\nimport { NotificationPop } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tclassNamePop\tstring\tno\t''\tClase CSS para el contenedor del pop de notificaci√≥n.\tclassName\tstring\tno\t''\tClase CSS adicional para el componente.\ttypePop\t'top' | 'down'\tno\t'down'\tPosici√≥n de la notificaci√≥n en la pantalla.\ttime\tnumber\tno\t2000\tDuraci√≥n en milisegundos antes de que la notificaci√≥n desaparezca autom√°ticamente.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"Notificaci√≥n Pop b√°sica\n<NotificationPop>Mensaje de notificaci√≥n</NotificationPop>\nNotificaci√≥n Pop en la parte superior\n<NotificationPop typePop=\"top\">\n  Notificaci√≥n en la parte superior\n</NotificationPop>\nNotificaci√≥n Pop con duraci√≥n personalizada\n<NotificationPop time={3000}>Mensaje que dura 3 segundos</NotificationPop>"}},"/validator":{"title":"FenextjsValidator","data":{"":"Clase para validar datos de entrada, proporcionando m√©todos para verificar requerimientos, longitudes, y tipos espec√≠ficos de validaciones.","importaci√≥n#Importaci√≥n":"Para importar el componente FenextjsValidator, se puede hacer desde fenextjs\nimport { FenextjsValidator } from \"fenextjs\";","isequal#isEqual":"M√©todo para definir la validaci√≥n 'isEqual'. Establece la regla de que los datos deben ser iguales al valor especificado.","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\td\tT[] | T\ts√≠\t\tValor o lista de valores con los que se comparar√°n los datos a validar.\tmsg\tstring\tno\t\tMensaje de error personalizado que se mostrar√° si la validaci√≥n falla.","returns#Returns":"Parametro\tTipo\tDescripcion\tthis\tFenextjsValidatorClass\tDevuelve la instancia de la clase para permitir el encadenamiento de m√©todos.","usos#Usos":"Definir validaci√≥n de igualdad\nconst validator = FenextjsValidator();\nvalidator.isEqual(\"value1\");\nDefinir validaci√≥n con mensaje de error personalizado\nconst validator = FenextjsValidator();\nvalidator.isEqual(\"value1\", \"Los valores no son iguales\");","isrequired#isRequired":"M√©todo para habilitar la validaci√≥n 'isRequired'. Establece la regla de que los datos deben estar presentes y no ser nulos o indefinidos.","par√°metros-1#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tmsg\tstring\tno\t\tMensaje de error personalizado que se mostrar√° si la validaci√≥n falla.","returns-1#Returns":"Parametro\tTipo\tDescripcion\tthis\tFenextjsValidatorClass\tDevuelve la instancia de la clase para permitir el encadenamiento de m√©todos.","usos-1#Usos":"Definir validaci√≥n de requerimiento\nconst validator = FenextjsValidator();\nvalidator.isRequired();\nDefinir validaci√≥n con mensaje de error personalizado\nconst validator = FenextjsValidator();\nvalidator.isRequired(\"Los datos son obligatorios\");","isboolean#isBoolean":"M√©todo para habilitar la validaci√≥n 'isBoolean'. Establece la regla de que los datos deben ser de tipo booleano.","par√°metros-2#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tmsg\tstring\tno\t\tMensaje de error personalizado que se mostrar√° si la validaci√≥n falla.","returns-2#Returns":"Parametro\tTipo\tDescripcion\tthis\tFenextjsValidatorClass\tDevuelve la instancia de la clase para permitir el encadenamiento de m√©todos.","usos-2#Usos":"Definir validaci√≥n de tipo booleano\nconst validator = FenextjsValidator();\nvalidator.isBoolean();\nDefinir validaci√≥n con mensaje de error personalizado\nconst validator = FenextjsValidator();\nvalidator.isBoolean(\"Debe ser un valor booleano\");","isnumber#isNumber":"M√©todo para habilitar la validaci√≥n 'isNumber'. Establece la regla de que los datos deben ser de tipo n√∫mero.","par√°metros-3#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tmsg\tstring\tno\t\tMensaje de error personalizado que se mostrar√° si la validaci√≥n falla.","returns-3#Returns":"Parametro\tTipo\tDescripcion\tthis\tFenextjsValidatorClass\tDevuelve la instancia de la clase para permitir el encadenamiento de m√©todos.","usos-3#Usos":"Definir validaci√≥n de tipo n√∫mero\nconst validator = FenextjsValidator();\nvalidator.isNumber();\nDefinir validaci√≥n con mensaje de error personalizado\nconst validator = FenextjsValidator();\nvalidator.isNumber(\"Debe ser un n√∫mero\");","isstring#isString":"M√©todo para habilitar la validaci√≥n 'isString'. Establece la regla de que los datos deben ser de tipo cadena (string).","par√°metros-4#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tmsg\tstring\tno\t\tMensaje de error personalizado que se mostrar√° si la validaci√≥n falla.","returns-4#Returns":"Parametro\tTipo\tDescripcion\tthis\tFenextjsValidatorClass\tDevuelve la instancia de la clase para permitir el encadenamiento de m√©todos.","usos-4#Usos":"Definir validaci√≥n de tipo cadena\nconst validator = FenextjsValidator();\nvalidator.isString();\nDefinir validaci√≥n con mensaje de error personalizado\nconst validator = FenextjsValidator();\nvalidator.isString(\"Debe ser una cadena\");","islength#isLength":"M√©todo para habilitar la validaci√≥n de longitud. Establece la regla de que los datos deben tener una longitud espec√≠fica.","par√°metros-5#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tlength\tnumber\ts√≠\t\tLa longitud que deben tener los datos para que la validaci√≥n sea v√°lida.\tmsg\tstring\tno\t\tMensaje de error personalizado que se mostrar√° si la validaci√≥n falla.","returns-5#Returns":"Parametro\tTipo\tDescripcion\tthis\tFenextjsValidatorClass\tDevuelve la instancia de la clase para permitir el encadenamiento de m√©todos.","usos-5#Usos":"Definir validaci√≥n de longitud\nconst validator = FenextjsValidator();\nvalidator.isLength(5);\nDefinir validaci√≥n con mensaje de error personalizado\nconst validator = FenextjsValidator();\nvalidator.isLength(5, \"La longitud debe ser 5\");","isdate#isDate":"M√©todo para habilitar la validaci√≥n 'isDate'. Establece la regla de que los datos deben ser de tipo Date (fecha).","par√°metros-6#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tmsg\tstring\tno\t\tMensaje de error personalizado que se mostrar√° si la validaci√≥n falla.","returns-6#Returns":"Parametro\tTipo\tDescripcion\tthis\tFenextjsValidatorClass\tDevuelve la instancia de la clase para permitir el encadenamiento de m√©todos.","usos-6#Usos":"Definir validaci√≥n de tipo fecha\nconst validator = FenextjsValidator();\nvalidator.isDate();\nDefinir validaci√≥n con mensaje de error personalizado\nconst validator = FenextjsValidator();\nvalidator.isDate(\"Debe ser una fecha v√°lida\");","isobject#isObject":"M√©todo para habilitar la validaci√≥n 'isObject'. Establece la regla de que los datos deben ser de tipo objeto.","par√°metros-7#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tobj\t{ [id in keyof T]?: FenextjsValidatorClass } | undefined\ts√≠\t\tObjeto con las reglas de validaci√≥n para cada propiedad del objeto.\tmsg\tstring\tno\t\tMensaje de error personalizado que se mostrar√° si la validaci√≥n falla.","returns-7#Returns":"Parametro\tTipo\tDescripcion\tthis\tFenextjsValidatorClass\tDevuelve la instancia de la clase para permitir el encadenamiento de m√©todos.","usos-7#Usos":"Definir validaci√≥n de tipo objeto\nconst validator = FenextjsValidator();\nvalidator.isObject({\n  propertyName: FenextjsValidator().isString(),\n});\nDefinir validaci√≥n con reglas de propiedades y mensaje de error personalizado\nconst validator = FenextjsValidator();\nvalidator.isObject(\n  {\n    propertyName: FenextjsValidator().isString(\"Debe ser una cadena\"),\n  },\n  \"El objeto no es v√°lido\",\n);","isarray#isArray":"M√©todo para habilitar la validaci√≥n 'isArray'. Establece la regla de que los datos deben ser un array.","par√°metros-8#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\titem\tFenextjsValidatorClass | undefined\tno\t\tInstancia de FenextjsValidatorClass que define las reglas de validaci√≥n para cada elemento del array.\tmsg\tstring\tno\t\tMensaje de error personalizado que se mostrar√° si la validaci√≥n falla.","returns-8#Returns":"Parametro\tTipo\tDescripcion\tthis\tFenextjsValidatorClass\tDevuelve la instancia de la clase para permitir el encadenamiento de m√©todos.","usos-8#Usos":"Definir validaci√≥n de tipo array\nconst validator = FenextjsValidator();\nvalidator.isArray();\nDefinir validaci√≥n de array con reglas para sus elementos\nconst validator = FenextjsValidator();\nvalidator.isArray(FenextjsValidator().isString());\nDefinir validaci√≥n con mensaje de error personalizado\nconst validator = FenextjsValidator();\nvalidator.isArray(\n  FenextjsValidator().isString(\"Cada elemento debe ser una cadena\"),\n);","ismin#isMin":"M√©todo para habilitar la validaci√≥n 'isMin'. Establece la regla de que los datos deben ser mayores que un valor espec√≠fico.","par√°metros-9#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tmin\tnumber | Date\ts√≠\t\tValor m√≠nimo que los datos deben superar para que la validaci√≥n sea v√°lida.\tmsg\tstring\tno\t\tMensaje de error personalizado que se mostrar√° si la validaci√≥n falla.","returns-9#Returns":"Parametro\tTipo\tDescripcion\tthis\tFenextjsValidatorClass\tDevuelve la instancia de la clase para permitir el encadenamiento de m√©todos.","usos-9#Usos":"Definir validaci√≥n de valor m√≠nimo\nconst validator = FenextjsValidator();\nvalidator.isMin(10);\nDefinir validaci√≥n con mensaje de error personalizado\nconst validator = FenextjsValidator();\nvalidator.isMin(10, \"El valor debe ser mayor que 10\");\nDefinir validaci√≥n con valor m√≠nimo de fecha\nconst validator = FenextjsValidator();\nvalidator.isMin(new Date(\"2024-01-01\"));","isminorequal#isMinOrEqual":"M√©todo para habilitar la validaci√≥n 'isMinOrEqual'. Establece la regla de que los datos deben ser mayores o iguales que un valor espec√≠fico.","par√°metros-10#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tmin\tnumber | Date\ts√≠\t\tValor m√≠nimo que los datos deben superar o igualar para que la validaci√≥n sea v√°lida.\tmsg\tstring\tno\t\tMensaje de error personalizado que se mostrar√° si la validaci√≥n falla.","returns-10#Returns":"Parametro\tTipo\tDescripcion\tthis\tFenextjsValidatorClass\tDevuelve la instancia de la clase para permitir el encadenamiento de m√©todos.","usos-10#Usos":"Definir validaci√≥n de valor m√≠nimo o igual\nconst validator = FenextjsValidator();\nvalidator.isMinOrEqual(10);\nDefinir validaci√≥n con mensaje de error personalizado\nconst validator = FenextjsValidator();\nvalidator.isMinOrEqual(10, \"El valor debe ser mayor o igual a 10\");\nDefinir validaci√≥n con valor m√≠nimo o igual de fecha\nconst validator = FenextjsValidator();\nvalidator.isMinOrEqual(new Date(\"2024-01-01\"));","ismax#isMax":"M√©todo para habilitar la validaci√≥n 'isMax'. Establece la regla de que los datos deben ser menores que un valor espec√≠fico.","par√°metros-11#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tmax\tnumber | Date\ts√≠\t\tValor m√°ximo que los datos deben ser menores que √©l para que la validaci√≥n sea v√°lida.\tmsg\tstring\tno\t\tMensaje de error personalizado que se mostrar√° si la validaci√≥n falla.","returns-11#Returns":"Parametro\tTipo\tDescripcion\tthis\tFenextjsValidatorClass\tDevuelve la instancia de la clase para permitir el encadenamiento de m√©todos.","usos-11#Usos":"Definir validaci√≥n de valor m√°ximo\nconst validator = FenextjsValidator();\nvalidator.isMax(100);\nDefinir validaci√≥n con mensaje de error personalizado\nconst validator = FenextjsValidator();\nvalidator.isMax(100, \"El valor debe ser menor que 100\");\nDefinir validaci√≥n con valor m√°ximo de fecha\nconst validator = FenextjsValidator();\nvalidator.isMax(new Date(\"2024-01-01\"));","ismaxorequal#isMaxOrEqual":"M√©todo para habilitar la validaci√≥n 'isMaxOrEqual'. Establece la regla de que los datos deben ser menores o iguales que un valor espec√≠fico.","par√°metros-12#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tmax\tnumber | Date\ts√≠\t\tValor m√°ximo que los datos deben ser menores o iguales que √©l para que la validaci√≥n sea v√°lida.\tmsg\tstring\tno\t\tMensaje de error personalizado que se mostrar√° si la validaci√≥n falla.","returns-12#Returns":"Parametro\tTipo\tDescripcion\tthis\tFenextjsValidatorClass\tDevuelve la instancia de la clase para permitir el encadenamiento de m√©todos.","usos-12#Usos":"Definir validaci√≥n de valor m√°ximo o igual\nconst validator = FenextjsValidator();\nvalidator.isMaxOrEqual(100);\nDefinir validaci√≥n con mensaje de error personalizado\nconst validator = FenextjsValidator();\nvalidator.isMaxOrEqual(100, \"El valor debe ser menor o igual que 100\");\nDefinir validaci√≥n con valor m√°ximo o igual de fecha\nconst validator = FenextjsValidator();\nvalidator.isMaxOrEqual(new Date(\"2024-01-01\"));","iscompareref#isCompareRef":"M√©todo para habilitar la comparaci√≥n de valores de referencia. Establece la regla de que los datos deben ser iguales a otro valor de referencia almacenado en la instancia.","par√°metros-13#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\trefKey\tstring\ts√≠\t\tLa clave que identifica el valor de referencia almacenado en la instancia para la comparaci√≥n.\tmsg\tstring\tno\t\tMensaje de error personalizado que se mostrar√° si la validaci√≥n falla.","returns-13#Returns":"Parametro\tTipo\tDescripcion\tthis\tFenextjsValidatorClass\tDevuelve la instancia de la clase para permitir el encadenamiento de m√©todos.","usos-13#Usos":"Definir validaci√≥n de comparaci√≥n con valor de referencia\nconst validator = FenextjsValidator();\nvalidator.isCompareRef(\"myRefKey\");\nDefinir validaci√≥n con mensaje de error personalizado\nconst validator = FenextjsValidator();\nvalidator.isCompareRef(\"myRefKey\", \"Los valores no coinciden\");","iswhen#isWhen":"M√©todo para habilitar la validaci√≥n 'isWhen'. Establece la regla de comparaci√≥n cuando se cumpla una condici√≥n espec√≠fica.","par√°metros-14#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tdata\tFenextjsValidatorClassIsWhenProps\ts√≠\t\tObjeto que contiene las reglas de validaci√≥n a aplicar cuando la condici√≥n especificada sea verdadera. La estructura de 'FenextjsValidatorClassIsWhenProps' incluye los campos 'key', 'is', 'then', 'otherwise', y opcionalmente 'dataIsCurrent'.","condiciones-en-iswhen#Condiciones en 'isWhen'":"El m√©todo 'isWhen' permite aplicar validaciones condicionales basadas en los valores de las propiedades. A continuaci√≥n se describen las posibles condiciones y el comportamiento de cada una:\nCondici√≥n\tDescripci√≥n\tkey\tEl campo 'key' es el nombre de la propiedad a evaluar. Se usar√° para determinar si la validaci√≥n debe aplicarse a esa propiedad.\tis\tLa propiedad 'is' contiene una instancia de 'FenextjsValidatorClass' que define las reglas de validaci√≥n para aplicar cuando se cumpla la condici√≥n.\tthen\tLa propiedad 'then' contiene una instancia de 'FenextjsValidatorClass' que define las reglas de validaci√≥n a aplicar si la condici√≥n es verdadera.\totherwise\tLa propiedad 'otherwise' contiene una instancia de 'FenextjsValidatorClass' que define las reglas de validaci√≥n a aplicar si la condici√≥n es falsa. Este campo es opcional.\tdataIsCurrent\tLa propiedad 'dataIsCurrent' es un valor booleano opcional que indica si se debe comparar la propiedad con los datos actuales. Si no se establece, se asumir√° como 'false'.","returns-14#Returns":"Parametro\tTipo\tDescripcion\tthis\tFenextjsValidatorClass\tDevuelve la instancia de la clase para permitir el encadenamiento de m√©todos.","usos-14#Usos":"Definir validaci√≥n 'isWhen' con una condici√≥n\nconst validator = FenextjsValidator();\nvalidator.isWhen({\n  key: \"age\",\n  is: validator.isNumber(),\n  then: validator.isMin(18),\n});\nDefinir validaci√≥n 'isWhen' con condiciones m√∫ltiples y alternativa\nconst validator = FenextjsValidator();\nvalidator.isWhen({\n  key: \"age\",\n  is: validator.isNumber(),\n  then: validator.isMin(18),\n  otherwise: validator.isMax(65),\n});\nvalidator.isWhen({\n  key: \"name\",\n  is: validator.isString(),\n  then: validator.isLength(3),\n});","isregex#isRegex":"M√©todo para habilitar la validaci√≥n 'isRegex'. Establece la regla de que los datos deben coincidir con una expresi√≥n regular especificada.","par√°metros-15#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tdata\tRegExp\ts√≠\t\tExpresi√≥n regular con la que los datos deben coincidir para que la validaci√≥n sea √©xitosa.\tmsg\tstring\tno\t\tMensaje de error personalizado que se muestra si la validaci√≥n falla.","returns-15#Returns":"Parametro\tTipo\tDescripcion\tthis\tFenextjsValidatorClass\tDevuelve la instancia actual de la clase FenextjsValidatorClass, lo que permite el encadenamiento de m√©todos.","usos-15#Usos":"Habilitar validaci√≥n 'isRegex'\nconst validator = FenextjsValidator();\nvalidator.isRegex(\n  /^[a-zA-Z0-9]+$/,\n  \"El valor debe contener solo caracteres alfanum√©ricos\",\n);","isemail#isEmail":"M√©todo para habilitar la validaci√≥n 'isEmail'. Establece la regla de que los datos deben ser un correo electr√≥nico v√°lido.","par√°metros-16#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tmsg\tstring\tno\t\tMensaje de error personalizado que se muestra si la validaci√≥n falla.","returns-16#Returns":"Parametro\tTipo\tDescripcion\tthis\tFenextjsValidatorClass\tDevuelve la instancia actual de la clase FenextjsValidatorClass, lo que permite el encadenamiento de m√©todos.","usos-16#Usos":"Habilitar validaci√≥n 'isEmail'\nconst validator = FenextjsValidator();\nvalidator.isEmail(\"Por favor, ingresa un correo electr√≥nico v√°lido\");","iscustom#isCustom":"M√©todo para habilitar la validaci√≥n 'onCustom'. Establece la regla de que los datos deben cumplir con una validaci√≥n personalizada definida por una funci√≥n.","par√°metros-17#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tdata\t(data: T) => true | ErrorFenextjs\ts√≠\t\tFunci√≥n que define la validaci√≥n personalizada. Si la validaci√≥n falla, debe retornar un error de tipo ErrorFenextjs.\tmsg\tstring\tno\t\tMensaje de error personalizado que se muestra si la validaci√≥n falla.","returns-17#Returns":"Parametro\tTipo\tDescripcion\tthis\tFenextjsValidatorClass\tDevuelve la instancia actual de la clase FenextjsValidatorClass, lo que permite el encadenamiento de m√©todos.","usos-17#Usos":"Habilitar validaci√≥n 'isCustom'\nconst validator = FenextjsValidator();\nvalidator.isCustom((data) => {\n  if (data.length < 5) return new ErrorFenextjs(\"El valor es demasiado corto\");\n  return true;\n}, \"Error en validaci√≥n personalizada\");","isor#isOr":"M√©todo para definir la validaci√≥n 'isOr'. Establece la regla de que los datos deben cumplir al menos una validaci√≥n de las proporcionadas.","par√°metros-18#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\td\tFenextjsValidatorClass[]\ts√≠\t\tLista de instancias de FenextjsValidatorClass que representan las validaciones a comparar con los datos.\tmsg\tstring\tno\t\tMensaje de error personalizado que se muestra si la validaci√≥n falla.","returns-18#Returns":"Parametro\tTipo\tDescripcion\tthis\tFenextjsValidatorClass\tDevuelve la instancia actual de la clase FenextjsValidatorClass, lo que permite el encadenamiento de m√©todos.","usos-18#Usos":"Habilitar validaci√≥n 'isOr'\nconst validator = FenextjsValidator();\nconst validator1 = FenextjsValidator().isRequired();\nconst validator2 = FenextjsValidator().isEmail();\nvalidator.isOr(\n  [validator1, validator2],\n  \"Debe ser un valor requerido o un email v√°lido\",\n);","isenum#isEnum":"M√©todo para habilitar la validaci√≥n 'isEnum'. Establece la regla de que los datos deben coincidir con uno de los valores especificados en un objeto enumerado.","par√°metros-19#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tdata\tobject\ts√≠\t\tObjeto que define los valores permitidos para la validaci√≥n. Los datos deben coincidir con uno de estos valores.\tmsg\tstring\tno\t\tMensaje de error personalizado que se muestra si la validaci√≥n falla.","returns-19#Returns":"Parametro\tTipo\tDescripcion\tthis\tFenextjsValidatorClass\tDevuelve la instancia actual de la clase FenextjsValidatorClass, lo que permite el encadenamiento de m√©todos.","usos-19#Usos":"Habilitar validaci√≥n 'isEnum'\nconst validator = FenextjsValidator();\nenum enumValues {\n  \"VALUE_1\" = \"VALUE_1\",\n  \"VALUE_2\" = \"VALUE_2\",\n}\nvalidator.isEnum(enumValues, \"El valor debe estar en el enum especificado\");","onvalidate#onValidate":"M√©todo para validar los datos proporcionados seg√∫n las reglas establecidas. Ejecuta todas las reglas de validaci√≥n habilitadas previamente para los datos.","par√°metros-20#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\td\tT\ts√≠\t\tDatos que se deben validar, los cuales ser√°n evaluados contra las reglas de validaci√≥n previamente habilitadas.","returns-20#Returns":"Parametro\tTipo\tDescripcion\ttrue\tboolean\tDevuelve 'true' si los datos cumplen con todas las reglas de validaci√≥n habilitadas.\tErrorFenextjs\tErrorFenextjs\tSi alguna regla de validaci√≥n falla, retorna el error que indica qu√© regla de validaci√≥n fall√≥.","usos-20#Usos":"Validaci√≥n de datos con las reglas habilitadas\nconst validator = FenextjsValidator();\nconst data = { name: \"Juan\", age: 30 };\nconst result = validator.onValidate(data);\nif (result === true) {\n  console.log(\"Datos v√°lidos\");\n} else {\n  console.log(\"Error de validaci√≥n:\", result);\n}","getobjectvalidator#getObjectValidator":"M√©todo para obtener la validaci√≥n 'isObject'. Devuelve el objeto con las reglas de validaci√≥n definidas para las propiedades del objeto.","returns-21#Returns":"Parametro\tTipo\tDescripcion\tobjectValue\t{ [id in keyof T]?: FenextjsValidatorClass } | undefined\tDevuelve el objeto con las reglas de validaci√≥n para cada propiedad si 'isObject' est√° habilitado, o undefined si no lo est√°.","usos-21#Usos":"Obtener las reglas de validaci√≥n del objeto\nconst validator = FenextjsValidator();\nconst objectValidator = validator.getObjectValidator();\nconsole.log(objectValidator);","getarrayvalue#getArrayValue":"M√©todo p√∫blico para obtener el valor de validaci√≥n de array. Devuelve las reglas de validaci√≥n definidas para los elementos del array.","returns-22#Returns":"Parametro\tTipo\tDescripcion\tarrayValue\tFenextjsValidatorClassIsWhenProps | undefined\tDevuelve el valor de validaci√≥n del array si est√° habilitada, o undefined si no lo est√°.","usos-22#Usos":"Obtener el valor de validaci√≥n de array\nconst validator = FenextjsValidator();\nconst arrayValidator = validator.getArrayValue();\nconsole.log(arrayValidator);","getwhenvalue#getWhenValue":"M√©todo p√∫blico para obtener el valor de validaci√≥n de 'when'. Devuelve las condiciones definidas para la validaci√≥n 'isWhen'.","returns-23#Returns":"Parametro\tTipo\tDescripcion\tthis.whenValue\tFenextjsValidatorClassIsWhenProps[] | undefined\tDevuelve el valor de 'when' como un array de objetos de tipo 'FenextjsValidatorClassIsWhenProps', o 'undefined' si no se ha definido.","usos-23#Usos":"Obtener valor de validaci√≥n 'when'\nconst whenValue = validator.getWhenValue();"}},"/components/notification/fixed":{"title":"Notification","data":{"":"El componente Notification permite mostrar mensajes de notificaci√≥n personalizados, con distintos tipos de resultados y estilos para cada tipo.","ejemplo#Ejemplo":"","importaci√≥n#Importaci√≥n":"Para importar el componente Notification, se puede hacer desde fenextjs\nimport { Notification } from \"fenextjs\";","par√°metros#Par√°metros":"Par√°metro\tTipo\tRequerido\tDefault\tDescripcion\tclassName\tstring\tno\t''\tClase CSS para el contenedor del componente.\ttype\tRequestResultTypeProps | keyof typeof RequestResultTypeProps\tno\tRequestResultTypeProps.NORMAL\tTipo de notificaci√≥n, que define el estilo y el prop√≥sito del mensaje.\tchildren\tReactNode\tno\tundefined\tContenido o mensaje que se mostrar√° dentro de la notificaci√≥n.","storybook#Storybook":"Para ver el storybook del componente lo puede hacer con este link","usos#Usos":"Notificaci√≥n b√°sica\n<Notification>Mensaje de notificaci√≥n</Notification>\nNotificaci√≥n de √©xito\n<Notification type=\"SUCCESS\">Operaci√≥n √©xitosa</Notification>\nNotificaci√≥n de error\n<Notification type=\"ERROR\">Error en la operaci√≥n</Notification>"}},"/svg":{"title":"Svg","data":{"":"Fenextjs posee una lista de svg disponible para usarlos:\nimport { SvgMove } from \"fenextjs\";\nimport { SvgClose } from \"fenextjs\";\nimport { SvgShareArrow } from \"fenextjs\";\nimport { SvgOnlyFans } from \"fenextjs\";\nimport { SvgBehance } from \"fenextjs\";\nimport { SvgSettings } from \"fenextjs\";\nimport { SvgFrontIdentification } from \"fenextjs\";\nimport { SvgCreditCard } from \"fenextjs\";\nimport { SvgExclamation } from \"fenextjs\";\nimport { SvgPayment } from \"fenextjs\";\nimport { SvgLaterIdentification } from \"fenextjs\";\nimport { SvgDinersClub } from \"fenextjs\";\nimport { SvgSpotify } from \"fenextjs\";\nimport { SvgPaypal } from \"fenextjs\";\nimport { SvgInstagram } from \"fenextjs\";\nimport { SvgFacebookF } from \"fenextjs\";\nimport { SvgJcb } from \"fenextjs\";\nimport { SvgCamera } from \"fenextjs\";\nimport { SvgEdit } from \"fenextjs\";\nimport { SvgPaginationDown } from \"fenextjs\";\nimport { SvgReddit } from \"fenextjs\";\nimport { SvgBusiness } from \"fenextjs\";\nimport { SvgFacebook } from \"fenextjs\";\nimport { SvgManyvids } from \"fenextjs\";\nimport { SvgTiktok } from \"fenextjs\";\nimport { SvgVerified } from \"fenextjs\";\nimport { SvgStart } from \"fenextjs\";\nimport { SvgLocation } from \"fenextjs\";\nimport { SvgUpload } from \"fenextjs\";\nimport { SvgArrow } from \"fenextjs\";\nimport { SvgArrowSelect } from \"fenextjs\";\nimport { SvgPinterest } from \"fenextjs\";\nimport { SvgClone } from \"fenextjs\";\nimport { SvgUnicornWithMoney } from \"fenextjs\";\nimport { SvgReload } from \"fenextjs\";\nimport { SvgAdd } from \"fenextjs\";\nimport { SvgListCheck } from \"fenextjs\";\nimport { SvgCardVisaElectron } from \"fenextjs\";\nimport { SvgCardDinersClub } from \"fenextjs\";\nimport { SvgCardJCB } from \"fenextjs\";\nimport { SvgCardVisa } from \"fenextjs\";\nimport { SvgCardAmericanExpress } from \"fenextjs\";\nimport { SvgCardMasterCard } from \"fenextjs\";\nimport { SvgCardDiscover } from \"fenextjs\";\nimport { SvgCryingUnicorn } from \"fenextjs\";\nimport { SvgPix } from \"fenextjs\";\nimport { SvgTwitch } from \"fenextjs\";\nimport { SvgColor } from \"fenextjs\";\nimport { SvgBancolombia } from \"fenextjs\";\nimport { SvgSave } from \"fenextjs\";\nimport { SvgZelle } from \"fenextjs\";\nimport { SvgEtsty } from \"fenextjs\";\nimport { SvgImgAvatar } from \"fenextjs\";\nimport { SvgAmazon } from \"fenextjs\";\nimport { SvgCams } from \"fenextjs\";\nimport { SvgStremate } from \"fenextjs\";\nimport { SvgDesktop } from \"fenextjs\";\nimport { SvgPadlock } from \"fenextjs\";\nimport { SvgEye } from \"fenextjs\";\nimport { SvgCopy } from \"fenextjs\";\nimport { SvgCamsoda } from \"fenextjs\";\nimport { SvgDribbble } from \"fenextjs\";\nimport { SvgStripe } from \"fenextjs\";\nimport { SvgCancel } from \"fenextjs\";\nimport { SvgDownload } from \"fenextjs\";\nimport { SvgCheckSearch } from \"fenextjs\";\nimport { SvgDate } from \"fenextjs\";\nimport { SvgBars } from \"fenextjs\";\nimport { SvgArrowCollapse } from \"fenextjs\";\nimport { SvgClicks } from \"fenextjs\";\nimport { SvgVisa } from \"fenextjs\";\nimport { SvgNequi } from \"fenextjs\";\nimport { SvgStripachat } from \"fenextjs\";\nimport { SvgSnapchat } from \"fenextjs\";\nimport { SvgNumberIncrease } from \"fenextjs\";\nimport { SvgPlane } from \"fenextjs\";\nimport { SvgSoundCloud } from \"fenextjs\";\nimport { SvgStack } from \"fenextjs\";\nimport { SvgPaginationNext } from \"fenextjs\";\nimport { SvgQr } from \"fenextjs\";\nimport { SvgPaginationPre } from \"fenextjs\";\nimport { SvgMasterCard } from \"fenextjs\";\nimport { SvgBorder } from \"fenextjs\";\nimport { SvgBongacams } from \"fenextjs\";\nimport { SvgFantime } from \"fenextjs\";\nimport { SvgX } from \"fenextjs\";\nimport { SvgMercadoLibre } from \"fenextjs\";\nimport { SvgEarringWatch } from \"fenextjs\";\nimport { SvgTrash } from \"fenextjs\";\nimport { SvgGoogle } from \"fenextjs\";\nimport { SvgSteam } from \"fenextjs\";\nimport { SvgVideo } from \"fenextjs\";\nimport { SvgSize } from \"fenextjs\";\nimport { SvgFont } from \"fenextjs\";\nimport { SvgTheme } from \"fenextjs\";\nimport { SvgCheck2 } from \"fenextjs\";\nimport { SvgPatreon } from \"fenextjs\";\nimport { SvgLinkedin } from \"fenextjs\";\nimport { SvgLink } from \"fenextjs\";\nimport { SvgShare } from \"fenextjs\";\nimport { SvgNoConfirm } from \"fenextjs\";\nimport { SvgNumberDecrease } from \"fenextjs\";\nimport { SvgEmail } from \"fenextjs\";\nimport { SvgYoutube } from \"fenextjs\";\nimport { SvgDaviplata } from \"fenextjs\";\nimport { SvgImg } from \"fenextjs\";\nimport { SvgArrowGoBack } from \"fenextjs\";\nimport { SvgChaturbate } from \"fenextjs\";\nimport { SvgDiscover } from \"fenextjs\";\nimport { SvgUnicorn } from \"fenextjs\";\nimport { SvgMovil } from \"fenextjs\";\nimport { SvgEbay } from \"fenextjs\";\nimport { SvgEstadisticas } from \"fenextjs\";\nimport { SvgWechat } from \"fenextjs\";\nimport { SvgArrowNext } from \"fenextjs\";\nimport { SvgCrown } from \"fenextjs\";\nimport { SvgTwitter } from \"fenextjs\";\nimport { SvgSaveCheck } from \"fenextjs\";\nimport { SvgCheck } from \"fenextjs\";\nimport { SvgTelegram } from \"fenextjs\";\nimport { SvgUserAccount } from \"fenextjs\";\nimport { SvgPaginationUp } from \"fenextjs\";\nimport { SvgManageAddresses } from \"fenextjs\";\nimport { SvgExit } from \"fenextjs\";\nimport { SvgArrowPre } from \"fenextjs\";\nimport { SvgWhatsapp } from \"fenextjs\";\nimport { SvgBolt } from \"fenextjs\";\nimport { SvgBrush } from \"fenextjs\";\nimport { SvgViewTableBox } from \"fenextjs\";\nimport { SvgViewTableList } from \"fenextjs\";\nimport { SvgViewSelectList } from \"fenextjs\";\nimport { SvgViewSelectNormal } from \"fenextjs\";\nimport { SvgViewSelectBox } from \"fenextjs\";\nimport { SvgSearch } from \"fenextjs\";\nimport { SvgLoader } from \"fenextjs\";\nimport { SvgCashapp } from \"fenextjs\";"}}}